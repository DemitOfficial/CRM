{"version":3,"file":"ngx-dropzone-wrapper.umd.js","sources":["../../../projects/lib/src/lib/dropzone.interfaces.ts","../../../projects/lib/src/lib/dropzone.directive.ts","../../../projects/lib/src/lib/dropzone.component.ts","../../../projects/lib/src/lib/dropzone.module.ts","../../../projects/lib/src/ngx-dropzone-wrapper.ts"],"names":["InjectionToken","EventEmitter","isPlatformBrowser","Directive","NgZone","Renderer2","ElementRef","KeyValueDiffers","Inject","PLATFORM_ID","Optional","Input","Output","Component","ViewEncapsulation","ViewChild","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const DROPZONE_CONFIG = new InjectionToken('DROPZONE_CONFIG');\n\nexport type DropzoneEvent = 'error' | 'success' | 'sending' | 'canceled' | 'complete' |\n  'processing' | 'drop' | 'dragStart' | 'dragEnd' | 'dragEnter' | 'dragOver' | 'dragLeave' |\n  'thumbnail' | 'addedFile' | 'addedFiles' | 'removedFile' | 'uploadProgress' | 'maxFilesReached' |\n  'maxFilesExceeded' | 'errorMultiple' | 'successMultiple' | 'sendingMultiple' | 'canceledMultiple' |\n  'completeMultiple' | 'processingMultiple' | 'reset' | 'queueComplete' | 'totalUploadProgress';\n\nexport const DropzoneEvents: DropzoneEvent[] = [\n  'error',\n  'success',\n  'sending',\n  'canceled',\n  'complete',\n  'processing',\n\n  'drop',\n  'dragStart',\n  'dragEnd',\n  'dragEnter',\n  'dragOver',\n  'dragLeave',\n\n  'thumbnail',\n  'addedFile',\n  'addedFiles',\n  'removedFile',\n  'uploadProgress',\n  'maxFilesReached',\n  'maxFilesExceeded',\n\n  'errorMultiple',\n  'successMultiple',\n  'sendingMultiple',\n  'canceledMultiple',\n  'completeMultiple',\n  'processingMultiple',\n\n  'reset',\n  'queueComplete',\n  'totalUploadProgress'\n];\n\nexport interface DropzoneConfigInterface {\n  timeout?: number,\n\n  autoReset?: number | null,\n  errorReset?: number | null,\n  cancelReset?: number | null,\n\n  url?: string | DropzoneUrlFunction,\n  method?: string | DropzoneMethodFunction,\n\n  params?: any | DropzoneParamsFunction,\n  headers?: any | DropzoneHeadersFunction,\n\n  init?: DropzoneInitFunction,\n  accept?: DropzoneAcceptFunction,\n  resize?: DropzoneResizeFunction,\n  fallback?: DropzoneFallbackFunction,\n  renameFile?: DropzoneRenameFileFunction,\n  transformFile?: DropzoneTransformFileFunction,\n  chunksUploaded?: DropzoneChunksUploadedFunction,\n\n  withCredentials?: boolean,\n\n  previewsContainer?: any,\n  hiddenInputContainer?: any,\n\n  clickable?: string | string[] | boolean,\n  paramName?: any,\n  capture?: string,\n  maxFiles?: number,\n  maxFilesize?: number,\n  filesizeBase?: number,\n  acceptedFiles?: string,\n  forceFallback?: boolean,\n  addRemoveLinks?: boolean,\n  uploadMultiple?: boolean,\n  parallelUploads?: number,\n  resizeWidth?: number,\n  resizeHeight?: number,\n  resizeMethod?: 'contain' | 'crop',\n  resizeQuality?: number,\n  resizeMimeType?: string,\n  thumbnailWidth?: number,\n  thumbnailHeight?: number,\n  thumbnailMethod?: 'contain' | 'crop',\n  previewTemplate?: string,\n  autoQueue?: boolean,\n  autoProcessQueue?: boolean,\n  ignoreHiddenFiles?: boolean,\n  maxThumbnailFilesize?: number,\n  createImageThumbnails?: boolean,\n\n  chunking?: boolean,\n  chunkSize?: number,\n  retryChunks?: boolean,\n  forceChunking?: boolean,\n  retryChunksLimit?: number,\n  parallelChunkUploads?: boolean,\n\n  dictFileSizeUnits?: any,\n\n  dictDefaultMessage?: string,\n  dictFallbackMessage?: string,\n\n  dictFileTooBig?: string,\n  dictResponseError?: string,\n  dictInvalidFileType?: string,\n\n  dictRemoveFile?: string,\n  dictCancelUpload?: string,\n  dictUploadCanceled?: string,\n  dictFallbackText?: string,\n  dictMaxFilesExceeded?: string,\n  dictRemoveFileConfirmation?: string,\n  dictCancelUploadConfirmation?: string\n}\n\nexport class DropzoneConfig implements DropzoneConfigInterface {\n  timeout?: number;\n\n  autoReset?: number;\n  errorReset?: number;\n  cancelReset?: number;\n\n  url?: string | DropzoneUrlFunction;\n  method?: string | DropzoneMethodFunction;\n\n  params?: any | DropzoneParamsFunction;\n  headers?: any | DropzoneHeadersFunction;\n\n  init?: DropzoneInitFunction;\n  accept?: DropzoneAcceptFunction;\n  resize?: DropzoneResizeFunction;\n  fallback?: DropzoneFallbackFunction;\n  renameFile?: DropzoneRenameFileFunction;\n  transformFile?: DropzoneTransformFileFunction;\n  chunksUploaded?: DropzoneChunksUploadedFunction;\n\n  withCredentials?: boolean;\n\n  previewsContainer?: any;\n  hiddenInputContainer?: any;\n\n  clickable?: string | string[] | boolean;\n  paramName?: any;\n  capture?: string;\n  maxFiles?: number;\n  maxFilesize?: number;\n  filesizeBase?: number;\n  acceptedFiles?: string;\n  forceFallback?: boolean;\n  addRemoveLinks?: boolean;\n  uploadMultiple?: boolean;\n  parallelUploads?: number;\n  resizeWidth?: number;\n  resizeHeight?: number;\n  resizeMethod?: 'contain' | 'crop';\n  resizeQuality?: number;\n  resizeMimeType?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  thumbnailMethod?: 'contain' | 'crop';\n  previewTemplate?: string;\n  autoQueue?: boolean;\n  autoProcessQueue?: boolean;\n  ignoreHiddenFiles?: boolean;\n  maxThumbnailFilesize?: number;\n  createImageThumbnails?: boolean;\n\n  chunking?: boolean;\n  chunkSize?: number;\n  retryChunks?: boolean;\n  forceChunking?: boolean;\n  retryChunksLimit?: number;\n  parallelChunkUploads?: boolean;\n\n  dictFileSizeUnits?: any;\n\n  dictDefaultMessage?: string;\n  dictFallbackMessage?: string;\n\n  dictFileTooBig?: string;\n  dictResponseError?: string;\n  dictInvalidFileType?: string;\n\n  dictRemoveFile?: string;\n  dictCancelUpload?: string;\n  dictUploadCanceled?: string;\n  dictFallbackText?: string;\n  dictMaxFilesExceeded?: string;\n  dictRemoveFileConfirmation?: string;\n  dictCancelUploadConfirmation?: string;\n\n  constructor(config: DropzoneConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: DropzoneConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] != null && !(Array.isArray(config[key])) &&\n        typeof config[key] === 'object' && !(config[key] instanceof HTMLElement))\n      {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n\nexport type DropzoneUrlFunction = (files: any) => string;\nexport type DropzoneMethodFunction = (files: any) => string;\n\nexport type DropzoneParamsFunction = (files: any, xhr: any, chunk?: any) => any;\nexport type DropzoneHeadersFunction = () => any;\n\nexport type DropzoneInitFunction = () => any;\nexport type DropzoneFallbackFunction = () => HTMLElement;\n\nexport type DropzoneAcceptFunction = (file: File, done: Function) => any;\nexport type DropzoneResizeFunction = (file: File, width: number, height: number, resizeMethod: string) => any;\n\nexport type DropzoneRenameFileFunction = (file: File) => string;\nexport type DropzoneTransformFileFunction = (file: File, done: Function) => any;\nexport type DropzoneChunksUploadedFunction = (file: File, done: Function) => any;\n","import Dropzone from 'dropzone';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Renderer2, Directive,\n  OnInit, OnDestroy, DoCheck, OnChanges, Input, Output, EventEmitter,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { DROPZONE_CONFIG, DropzoneConfig, DropzoneConfigInterface,\n  DropzoneEvent, DropzoneEvents } from './dropzone.interfaces';\n\n@Directive({\n  selector: '[dropzone]',\n  exportAs: 'ngxDropzone'\n})\nexport class DropzoneDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\n  private instance: any;\n\n  private configDiff: KeyValueDiffer<string, any> | null = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input('dropzone') config?: DropzoneConfigInterface;\n\n  @Output('init'                  ) DZ_INIT                     = new EventEmitter<any>();\n\n  @Output('error'                 ) DZ_ERROR                    = new EventEmitter<any>();\n  @Output('success'               ) DZ_SUCCESS                  = new EventEmitter<any>();\n  @Output('sending'               ) DZ_SENDING                  = new EventEmitter<any>();\n  @Output('canceled'              ) DZ_CANCELED                 = new EventEmitter<any>();\n  @Output('complete'              ) DZ_COMPLETE                 = new EventEmitter<any>();\n  @Output('processing'            ) DZ_PROCESSING               = new EventEmitter<any>();\n\n  @Output('drop'                  ) DZ_DROP                     = new EventEmitter<any>();\n  @Output('dragStart'             ) DZ_DRAGSTART                = new EventEmitter<any>();\n  @Output('dragEnd'               ) DZ_DRAGEND                  = new EventEmitter<any>();\n  @Output('dragEnter'             ) DZ_DRAGENTER                = new EventEmitter<any>();\n  @Output('dragOver'              ) DZ_DRAGOVER                 = new EventEmitter<any>();\n  @Output('dragLeave'             ) DZ_DRAGLEAVE                = new EventEmitter<any>();\n\n  @Output('thumbnail'             ) DZ_THUMBNAIL                = new EventEmitter<any>();\n  @Output('addedFile'             ) DZ_ADDEDFILE                = new EventEmitter<any>();\n  @Output('addedFiles'            ) DZ_ADDEDFILES               = new EventEmitter<any>();\n  @Output('removedFile'           ) DZ_REMOVEDFILE              = new EventEmitter<any>();\n  @Output('uploadProgress'        ) DZ_UPLOADPROGRESS           = new EventEmitter<any>();\n  @Output('maxFilesReached'       ) DZ_MAXFILESREACHED          = new EventEmitter<any>();\n  @Output('maxFilesExceeded'      ) DZ_MAXFILESEXCEEDED         = new EventEmitter<any>();\n\n  @Output('errorMultiple'         ) DZ_ERRORMULTIPLE            = new EventEmitter<any>();\n  @Output('successMultiple'       ) DZ_SUCCESSMULTIPLE          = new EventEmitter<any>();\n  @Output('sendingMultiple'       ) DZ_SENDINGMULTIPLE          = new EventEmitter<any>();\n  @Output('canceledMultiple'      ) DZ_CANCELEDMULTIPLE         = new EventEmitter<any>();\n  @Output('completeMultiple'      ) DZ_COMPLETEMULTIPLE         = new EventEmitter<any>();\n  @Output('processingMultiple'    ) DZ_PROCESSINGMULTIPLE       = new EventEmitter<any>();\n\n  @Output('reset'                 ) DZ_RESET                    = new EventEmitter<any>();\n  @Output('queueComplete'         ) DZ_QUEUECOMPLETE            = new EventEmitter<any>();\n  @Output('totalUploadProgress'   ) DZ_TOTALUPLOADPROGRESS      = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private renderer: Renderer2, private elementRef: ElementRef,\n    private differs: KeyValueDiffers, @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(DROPZONE_CONFIG) private defaults: DropzoneConfigInterface)\n  {\n    const dz = Dropzone;\n\n    dz.autoDiscover = false;\n  }\n\n  ngOnInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const params = new DropzoneConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    this.renderer.addClass(this.elementRef.nativeElement,\n      (params.maxFiles === 1) ? 'dz-single' : 'dz-multiple');\n\n    this.renderer.removeClass(this.elementRef.nativeElement,\n      (params.maxFiles === 1) ? 'dz-multiple' : 'dz-single');\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Dropzone(this.elementRef.nativeElement, params);\n    });\n\n    if (this.disabled) {\n      this.instance.disable();\n    }\n\n    if (this.DZ_INIT.observers.length) {\n      this.zone.run(() => {\n        this.DZ_INIT.emit(this.instance);\n      });\n    }\n\n    // Add auto reset handling for events\n    this.instance.on('success', () => {\n      if (params.autoReset != null) {\n        setTimeout(() => this.reset(), params.autoReset);\n      }\n    });\n\n    this.instance.on('error', () => {\n      if (params.errorReset != null) {\n        setTimeout(() => this.reset(), params.errorReset);\n      }\n    });\n\n    this.instance.on('canceled', () => {\n      if (params.cancelReset != null) {\n        setTimeout(() => this.reset(), params.cancelReset);\n      }\n    });\n\n    // Add native Dropzone event handling\n    DropzoneEvents.forEach((eventName: DropzoneEvent) => {\n      this.instance.on(eventName.toLowerCase(), (...args: any[]) => {\n        args = (args.length === 1) ? args[0] : args;\n\n        const output = `DZ_${eventName.toUpperCase()}`;\n\n        const emitter = this[output as keyof DropzoneDirective] as EventEmitter<any>;\n\n        if (emitter.observers.length > 0) {\n          this.zone.run(() => {\n            emitter.emit(args);\n          });\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy();\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (!this.disabled && this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes && this.instance) {\n        this.ngOnDestroy();\n\n        this.ngOnInit();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.enable();\n          });\n        } else if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.disable();\n          });\n        }\n      }\n    }\n  }\n\n  public dropzone(): any {\n    return this.instance;\n  }\n\n  public reset(cancel?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.removeAllFiles(cancel);\n      });\n    }\n  }\n}\n","import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Component,\n  OnInit, Input, Output, EventEmitter,\n  ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DropzoneDirective } from './dropzone.directive';\n\nimport { DropzoneEvent, DropzoneEvents, DropzoneConfigInterface } from './dropzone.interfaces';\n\n@Component({\n  selector: 'dropzone',\n  exportAs: 'ngxDropzone',\n  templateUrl: './dropzone.component.html',\n  styleUrls: [\n    './dropzone.component.css',\n    '../../../../node_modules/dropzone/dist/min/dropzone.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DropzoneComponent implements OnInit {\n  @Input() disabled: boolean = false;\n\n  @Input() config?: DropzoneConfigInterface;\n\n  @Input() message: string = 'Click or drag files to upload';\n  @Input() placeholder: string = '';\n\n  @Input() useDropzoneClass: boolean = true;\n\n  @Output('init'                  ) DZ_INIT                     = new EventEmitter<any>();\n\n  @Output('error'                 ) DZ_ERROR                    = new EventEmitter<any>();\n  @Output('success'               ) DZ_SUCCESS                  = new EventEmitter<any>();\n  @Output('sending'               ) DZ_SENDING                  = new EventEmitter<any>();\n  @Output('canceled'              ) DZ_CANCELED                 = new EventEmitter<any>();\n  @Output('complete'              ) DZ_COMPLETE                 = new EventEmitter<any>();\n  @Output('processing'            ) DZ_PROCESSING               = new EventEmitter<any>();\n\n  @Output('drop'                  ) DZ_DROP                     = new EventEmitter<any>();\n  @Output('dragStart'             ) DZ_DRAGSTART                = new EventEmitter<any>();\n  @Output('dragEnd'               ) DZ_DRAGEND                  = new EventEmitter<any>();\n  @Output('dragEnter'             ) DZ_DRAGENTER                = new EventEmitter<any>();\n  @Output('dragOver'              ) DZ_DRAGOVER                 = new EventEmitter<any>();\n  @Output('dragLeave'             ) DZ_DRAGLEAVE                = new EventEmitter<any>();\n\n  @Output('thumbnail'             ) DZ_THUMBNAIL                = new EventEmitter<any>();\n  @Output('addedFile'             ) DZ_ADDEDFILE                = new EventEmitter<any>();\n  @Output('addedFiles'            ) DZ_ADDEDFILES               = new EventEmitter<any>();\n  @Output('removedFile'           ) DZ_REMOVEDFILE              = new EventEmitter<any>();\n  @Output('uploadProgress'        ) DZ_UPLOADPROGRESS           = new EventEmitter<any>();\n  @Output('maxFilesReached'       ) DZ_MAXFILESREACHED          = new EventEmitter<any>();\n  @Output('maxFilesExceeded'      ) DZ_MAXFILESEXCEEDED         = new EventEmitter<any>();\n\n  @Output('errorMultiple'         ) DZ_ERRORMULTIPLE            = new EventEmitter<any>();\n  @Output('successMultiple'       ) DZ_SUCCESSMULTIPLE          = new EventEmitter<any>();\n  @Output('sendingMultiple'       ) DZ_SENDINGMULTIPLE          = new EventEmitter<any>();\n  @Output('canceledMultiple'      ) DZ_CANCELEDMULTIPLE         = new EventEmitter<any>();\n  @Output('completeMultiple'      ) DZ_COMPLETEMULTIPLE         = new EventEmitter<any>();\n  @Output('processingMultiple'    ) DZ_PROCESSINGMULTIPLE       = new EventEmitter<any>();\n\n  @Output('reset'                 ) DZ_RESET                    = new EventEmitter<any>();\n  @Output('queueComplete'         ) DZ_QUEUECOMPLETE            = new EventEmitter<any>();\n  @Output('totalUploadProgress'   ) DZ_TOTALUPLOADPROGRESS      = new EventEmitter<any>();\n\n  @ViewChild(DropzoneDirective, { static: true }) directiveRef?: DropzoneDirective;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngOnInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    window.setTimeout(() => {\n      DropzoneEvents.forEach((eventName: DropzoneEvent) => {\n        if (this.directiveRef) {\n          const output = `DZ_${eventName.toUpperCase()}`;\n\n          const directiveOutput = output as keyof DropzoneDirective;\n          const componentOutput = output as keyof DropzoneComponent;\n\n          this.directiveRef[directiveOutput] = this[componentOutput] as any;\n        }\n      });\n    }, 0);\n  }\n\n  public getPlaceholder(): string {\n    return 'url(' + encodeURI(this.placeholder) + ')';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DropzoneComponent } from './dropzone.component';\nimport { DropzoneDirective } from './dropzone.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DropzoneComponent, DropzoneDirective],\n  exports: [CommonModule, DropzoneComponent, DropzoneDirective]\n})\nexport class DropzoneModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}