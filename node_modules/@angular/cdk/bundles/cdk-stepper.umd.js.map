{"version":3,"file":"cdk-stepper.umd.js","sources":["../../src/cdk/stepper/step-label.ts","../../src/cdk/stepper/step-header.ts","../../src/cdk/stepper/stepper.ts","../../src/cdk/stepper/stepper-button.ts","../../src/cdk/stepper/stepper-module.ts"],"names":["Directive","TemplateRef","ElementRef","InjectionToken","coerceBooleanProperty","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","coerceNumberProperty","FocusKeyManager","obaservableOf","startWith","takeUntil","hasModifierKey","SPACE","ENTER","HOME","END","Inject","DOCUMENT","Output","HostListener","NgModule","BidiModule","CommonModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(protected _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {Observable, Subject, of as obaservableOf} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {CdkStepHeader} from './step-header';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous' | 'current' | 'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal' | 'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number' | 'edit' | 'done' | 'error' | string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS =\n  new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel, {static: false}) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: FormControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean { return this._editable; }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean { return this._optional; }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._customCompleted == null ? this._getDefaultCompleted() : this._customCompleted;\n  }\n  set completed(value: boolean) {\n    this._customCompleted = coerceBooleanProperty(value);\n  }\n  private _customCompleted: boolean | null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean | null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n    @Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper,\n    @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._customCompleted != null) {\n      this._customCompleted = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document | undefined;\n\n  /**\n   * The list of step components that the stepper is holding.\n   * @deprecated use `steps` instead\n   * @breaking-change 9.0.0 remove this property\n   */\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\n\n  /** The list of step components that the stepper is holding. */\n  get steps():  QueryList<CdkStep> {\n    return this._steps;\n  }\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean { return this._linear; }\n  set linear(value: boolean) { this._linear = coerceBooleanProperty(value); }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() { return this._selectedIndex; }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps) {\n      // Ensure that the index can't be out of bounds.\n      if (newIndex < 0 || newIndex > this.steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != newIndex &&\n          !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\n      = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n    @Optional() private _dir: Directionality,\n    private _changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    private _elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view chidren. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n      .withWrap()\n      .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? this._dir.change as Observable<Direction> : obaservableOf<Direction>())\n      .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n      .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItemIndex(this._selectedIndex);\n\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType\n      ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n      : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n    step: CdkStep,\n    isCurrentStep: boolean,\n    state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItemIndex(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ?\n            (control.invalid || control.pending || !step.interacted) :\n            !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n}\n\n\n/**\n * Simplified representation of a FormControl from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface FormControlLike {\n  asyncValidator: () => any | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: FormControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: () => any | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): FormControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: () => any | (() => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: () => any | (() => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  registerOnChange(fn: Function): void;\n  registerOnDisabledChange(fn: (isDisabled: boolean) => void): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CommonModule} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule, CommonModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n"]}