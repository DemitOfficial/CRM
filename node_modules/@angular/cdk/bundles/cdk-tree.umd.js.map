{"version":3,"file":"cdk-tree.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk/tree/control/base-tree-control.ts","../../src/cdk/tree/control/flat-tree-control.ts","../../src/cdk/tree/control/nested-tree-control.ts","../../src/cdk/tree/outlet.ts","../../src/cdk/tree/node.ts","../../src/cdk/tree/tree-errors.ts","../../src/cdk/tree/tree.ts","../../src/cdk/tree/nested-node.ts","../../src/cdk/tree/padding.ts","../../src/cdk/tree/toggle.ts","../../src/cdk/tree/tree-module.ts"],"names":["SelectionModel","tslib_1.__extends","Observable","take","filter","InjectionToken","Directive","ViewContainerRef","Inject","Optional","TemplateRef","Subject","BehaviorSubject","isDataSource","observableOf","takeUntil","Component","ViewEncapsulation","Input","ViewChild","ContentChildren","ElementRef","IterableDiffers","coerceNumberProperty","Renderer2","Directionality","coerceBooleanProperty","HostListener","NgModule","CommonModule","FocusMonitor"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {Observable} from 'rxjs';\nimport {TreeControl} from './tree-control';\n\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nexport abstract class BaseTreeControl<T> implements TreeControl<T> {\n\n  /** Gets a list of descendent data nodes of a subtree rooted at given data node recursively. */\n  abstract getDescendants(dataNode: T): T[];\n\n  /** Expands all data nodes in the tree. */\n  abstract expandAll(): void;\n\n  /** Saved data node for `expandAll` action. */\n  dataNodes: T[];\n\n  /** A selection model with multi-selection to track expansion status. */\n  expansionModel: SelectionModel<T> = new SelectionModel<T>(true);\n\n  /** Get depth of a given data node, return the level number. This is for flat tree node. */\n  getLevel: (dataNode: T) => number;\n\n  /**\n   * Whether the data node is expandable. Returns true if expandable.\n   * This is for flat tree node.\n   */\n  isExpandable: (dataNode: T) => boolean;\n\n  /** Gets a stream that emits whenever the given data node's children change. */\n  getChildren: (dataNode: T) => (Observable<T[]> | T[] | undefined | null);\n\n  /** Toggles one single data node's expanded/collapsed state. */\n  toggle(dataNode: T): void {\n    this.expansionModel.toggle(dataNode);\n  }\n\n  /** Expands one single data node. */\n  expand(dataNode: T): void {\n    this.expansionModel.select(dataNode);\n  }\n\n  /** Collapses one single data node. */\n  collapse(dataNode: T): void {\n    this.expansionModel.deselect(dataNode);\n  }\n\n  /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n  isExpanded(dataNode: T): boolean {\n    return this.expansionModel.isSelected(dataNode);\n  }\n\n  /** Toggles a subtree rooted at `node` recursively. */\n  toggleDescendants(dataNode: T): void {\n    this.expansionModel.isSelected(dataNode)\n        ? this.collapseDescendants(dataNode)\n        : this.expandDescendants(dataNode);\n  }\n\n  /** Collapse all dataNodes in the tree. */\n  collapseAll(): void {\n    this.expansionModel.clear();\n  }\n\n  /** Expands a subtree rooted at given data node recursively. */\n  expandDescendants(dataNode: T): void {\n    let toBeProcessed = [dataNode];\n    toBeProcessed.push(...this.getDescendants(dataNode));\n    this.expansionModel.select(...toBeProcessed);\n  }\n\n  /** Collapses a subtree rooted at given data node recursively. */\n  collapseDescendants(dataNode: T): void {\n    let toBeProcessed = [dataNode];\n    toBeProcessed.push(...this.getDescendants(dataNode));\n    this.expansionModel.deselect(...toBeProcessed);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BaseTreeControl} from './base-tree-control';\n\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nexport class FlatTreeControl<T> extends BaseTreeControl<T> {\n\n  /** Construct with flat tree data node functions getLevel and isExpandable. */\n  constructor(public getLevel: (dataNode: T) => number,\n              public isExpandable: (dataNode: T) => boolean) {\n    super();\n  }\n\n  /**\n   * Gets a list of the data node's subtree of descendent data nodes.\n   *\n   * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n   * with correct levels.\n   */\n  getDescendants(dataNode: T): T[] {\n    const startIndex = this.dataNodes.indexOf(dataNode);\n    const results: T[] = [];\n\n    // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n    // The level of descendants of a tree node must be greater than the level of the given\n    // tree node.\n    // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n    // If we reach a node whose level is greater than the level of the tree node, we hit a\n    // sibling of an ancestor.\n    for (let i = startIndex + 1;\n        i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]);\n        i++) {\n      results.push(this.dataNodes[i]);\n    }\n    return results;\n  }\n\n  /**\n   * Expands all data nodes in the tree.\n   *\n   * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n   * data nodes of the tree.\n   */\n  expandAll(): void {\n    this.expansionModel.select(...this.dataNodes);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Observable} from 'rxjs';\nimport {take, filter} from 'rxjs/operators';\nimport {BaseTreeControl} from './base-tree-control';\n\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nexport class NestedTreeControl<T> extends BaseTreeControl<T> {\n\n  /** Construct with nested tree function getChildren. */\n  constructor(public getChildren: (dataNode: T) => (Observable<T[]> | T[] | undefined | null)) {\n    super();\n  }\n\n  /**\n   * Expands all dataNodes in the tree.\n   *\n   * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n   * data nodes of the tree.\n   */\n  expandAll(): void {\n    this.expansionModel.clear();\n    const allNodes = this.dataNodes.reduce((accumulator: T[], dataNode) =>\n        [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n    this.expansionModel.select(...allNodes);\n  }\n\n  /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n  getDescendants(dataNode: T): T[] {\n    const descendants: T[] = [];\n\n    this._getDescendants(descendants, dataNode);\n    // Remove the node itself\n    return descendants.splice(1);\n  }\n\n  /** A helper function to get descendants recursively. */\n  protected _getDescendants(descendants: T[], dataNode: T): void {\n    descendants.push(dataNode);\n    const childrenNodes = this.getChildren(dataNode);\n    if (Array.isArray(childrenNodes)) {\n      childrenNodes.forEach((child: T) => this._getDescendants(descendants, child));\n    } else if (childrenNodes instanceof Observable) {\n      childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n        children.forEach((child: T) => this._getDescendants(descendants, child));\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  Inject,\n  InjectionToken,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nexport const CDK_TREE_NODE_OUTLET_NODE = new InjectionToken<{}>('CDK_TREE_NODE_OUTLET_NODE');\n\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[cdkTreeNodeOutlet]'\n})\nexport class CdkTreeNodeOutlet {\n  constructor(\n      public viewContainer: ViewContainerRef,\n      @Inject(CDK_TREE_NODE_OUTLET_NODE) @Optional() public _node?: any) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n\n/** Context provided to the tree node component. */\nexport class CdkTreeNodeOutletContext<T> {\n  /** Data for the node. */\n  $implicit: T;\n\n  /** Depth of the node. */\n  level: number;\n\n  /** Index location of the node. */\n  index?: number;\n\n  /** Length of the number of total dataNodes. */\n  count?: number;\n\n  constructor(data: T) {\n    this.$implicit = data;\n  }\n}\n\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\n@Directive({\n  selector: '[cdkTreeNodeDef]',\n  inputs: [\n    'when: cdkTreeNodeDefWhen'\n  ],\n})\nexport class CdkTreeNodeDef<T> {\n  /**\n   * Function that should return true if this node template should be used for the provided node\n   * data and index. If left undefined, this node will be considered the default node template to\n   * use when no other when functions return true for the data.\n   * For every node, there must be at least one when function that passes or an undefined to\n   * default.\n   */\n  when: (index: number, nodeData: T) => boolean;\n\n  /** @docs-private */\n  constructor(public template: TemplateRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nexport function getTreeNoValidDataSourceError() {\n  return Error(`A valid data source must be provided.`);\n}\n\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nexport function getTreeMultipleDefaultNodeDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nexport function getTreeMissingMatchingNodeDefError() {\n  return Error(`Could not find a matching node definition for the provided node data.`);\n}\n\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nexport function getTreeControlMissingError() {\n  return Error(`Could not find a tree control for the tree.`);\n}\n\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nexport function getTreeControlFunctionsMissingError() {\n  return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {CollectionViewer, DataSource, isDataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  IterableChangeRecord,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  TrackByFunction\n} from '@angular/core';\nimport {BehaviorSubject, Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {TreeControl} from './control/tree-control';\nimport {CdkTreeNodeDef, CdkTreeNodeOutletContext} from './node';\nimport {CdkTreeNodeOutlet} from './outlet';\nimport {\n  getTreeControlFunctionsMissingError,\n  getTreeControlMissingError,\n  getTreeMissingMatchingNodeDefError,\n  getTreeMultipleDefaultNodeDefsError,\n  getTreeNoValidDataSourceError\n} from './tree-errors';\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-tree',\n  exportAs: 'cdkTree',\n  template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n  host: {\n    'class': 'cdk-tree',\n    'role': 'tree',\n  },\n  encapsulation: ViewEncapsulation.None,\n\n  // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n  // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n  // declared elsewhere, they are checked when their declaration points are checked.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class CdkTree<T> implements AfterContentChecked, CollectionViewer, OnDestroy, OnInit {\n  /** Subject that emits when the component has been destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  /** Differ used to find the changes in the data provided by the data source. */\n  private _dataDiffer: IterableDiffer<T>;\n\n  /** Stores the node definition that does not have a when predicate. */\n  private _defaultNodeDef: CdkTreeNodeDef<T> | null;\n\n  /** Data subscription */\n  private _dataSubscription: Subscription | null;\n\n  /** Level of nodes */\n  private _levels: Map<T, number> = new Map<T, number>();\n\n  /**\n   * Provides a stream containing the latest data array to render. Influenced by the tree's\n   * stream of view window (what dataNodes are currently on screen).\n   * Data source can be an observable of data array, or a data array to render.\n   */\n  @Input()\n  get dataSource(): DataSource<T> | Observable<T[]> | T[] { return this._dataSource; }\n  set dataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  private _dataSource: DataSource<T> | Observable<T[]> | T[];\n\n  /** The tree controller */\n  @Input() treeControl: TreeControl<T>;\n\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n   * relative to the function to know if a node should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  @Input() trackBy: TrackByFunction<T>;\n\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  @ViewChild(CdkTreeNodeOutlet, {static: true}) _nodeOutlet: CdkTreeNodeOutlet;\n\n  /** The tree node template for the tree */\n  @ContentChildren(CdkTreeNodeDef) _nodeDefs: QueryList<CdkTreeNodeDef<T>>;\n\n  // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n  //     Remove the MAX_VALUE in viewChange\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   * Can be used by the data source to as a heuristic of what data should be provided.\n   */\n  viewChange =\n    new BehaviorSubject<{start: number, end: number}>({start: 0, end: Number.MAX_VALUE});\n\n  constructor(private _differs: IterableDiffers,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this._dataDiffer = this._differs.find([]).create(this.trackBy);\n    if (!this.treeControl) {\n      throw getTreeControlMissingError();\n    }\n  }\n\n  ngOnDestroy() {\n    this._nodeOutlet.viewContainer.clear();\n\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    if (this._dataSource && typeof (this._dataSource as DataSource<T>).disconnect === 'function') {\n      (this.dataSource as DataSource<T>).disconnect(this);\n    }\n\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n  }\n\n  ngAfterContentChecked() {\n    const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n    if (defaultNodeDefs.length > 1) {\n      throw getTreeMultipleDefaultNodeDefsError();\n    }\n    this._defaultNodeDef = defaultNodeDefs[0];\n\n    if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n      this._observeRenderChanges();\n    }\n  }\n\n\n  // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n  //     and nested trees.\n\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the node outlet. Otherwise start listening for new data.\n   */\n  private _switchDataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n    if (this._dataSource && typeof (this._dataSource as DataSource<T>).disconnect === 'function') {\n      (this.dataSource as DataSource<T>).disconnect(this);\n    }\n\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n\n    // Remove the all dataNodes if there is now no data source\n    if (!dataSource) {\n      this._nodeOutlet.viewContainer.clear();\n    }\n\n    this._dataSource = dataSource;\n    if (this._nodeDefs) {\n      this._observeRenderChanges();\n    }\n  }\n\n  /** Set up a subscription for the data provided by the data source. */\n  private _observeRenderChanges() {\n    let dataStream: Observable<T[] | ReadonlyArray<T>> | undefined;\n\n    if (isDataSource(this._dataSource)) {\n      dataStream = this._dataSource.connect(this);\n    } else if (this._dataSource instanceof Observable) {\n      dataStream = this._dataSource;\n    } else if (Array.isArray(this._dataSource)) {\n      dataStream = observableOf(this._dataSource);\n    }\n\n    if (dataStream) {\n      this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n        .subscribe(data => this.renderNodeChanges(data));\n    } else {\n      throw getTreeNoValidDataSourceError();\n    }\n  }\n\n  /** Check for changes made in the data and render each change (node added/removed/moved). */\n  renderNodeChanges(data: T[] | ReadonlyArray<T>, dataDiffer: IterableDiffer<T> = this._dataDiffer,\n                    viewContainer: ViewContainerRef = this._nodeOutlet.viewContainer,\n                    parentData?: T) {\n    const changes = dataDiffer.diff(data);\n    if (!changes) { return; }\n\n    changes.forEachOperation((item: IterableChangeRecord<T>,\n                              adjustedPreviousIndex: number | null,\n                              currentIndex: number | null) => {\n        if (item.previousIndex == null) {\n          this.insertNode(data[currentIndex!], currentIndex!, viewContainer, parentData);\n        } else if (currentIndex == null) {\n          viewContainer.remove(adjustedPreviousIndex!);\n          this._levels.delete(item.item);\n        } else {\n          const view = viewContainer.get(adjustedPreviousIndex!);\n          viewContainer.move(view!, currentIndex);\n        }\n      });\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Finds the matching node definition that should be used for this node data. If there is only\n   * one node definition, it is returned. Otherwise, find the node definition that has a when\n   * predicate that returns true with the data. If none return true, return the default node\n   * definition.\n   */\n  _getNodeDef(data: T, i: number): CdkTreeNodeDef<T> {\n    if (this._nodeDefs.length === 1) { return this._nodeDefs.first; }\n\n    const nodeDef =\n      this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n    if (!nodeDef) { throw getTreeMissingMatchingNodeDefError(); }\n\n    return nodeDef;\n  }\n\n  /**\n   * Create the embedded view for the data node template and place it in the correct index location\n   * within the data node view container.\n   */\n  insertNode(nodeData: T, index: number, viewContainer?: ViewContainerRef, parentData?: T) {\n    const node = this._getNodeDef(nodeData, index);\n\n    // Node context that will be provided to created embedded view\n    const context = new CdkTreeNodeOutletContext<T>(nodeData);\n\n    // If the tree is flat tree, then use the `getLevel` function in flat tree control\n    // Otherwise, use the level of parent node.\n    if (this.treeControl.getLevel) {\n      context.level = this.treeControl.getLevel(nodeData);\n    } else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n      context.level = this._levels.get(parentData)! + 1;\n    } else {\n      context.level = 0;\n    }\n    this._levels.set(nodeData, context.level);\n\n    // Use default tree nodeOutlet, or nested node's nodeOutlet\n    const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n    container.createEmbeddedView(node.template, context, index);\n\n    // Set the data to just created `CdkTreeNode`.\n    // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n    //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n    if (CdkTreeNode.mostRecentTreeNode) {\n      CdkTreeNode.mostRecentTreeNode.data = nodeData;\n    }\n  }\n}\n\n\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\n@Directive({\n  selector: 'cdk-tree-node',\n  exportAs: 'cdkTreeNode',\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'cdk-tree-node',\n  },\n})\nexport class CdkTreeNode<T> implements FocusableOption, OnDestroy {\n  /**\n   * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n   * in `CdkTree` and set the data to it.\n   */\n  static mostRecentTreeNode: CdkTreeNode<any> | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Emits when the node's data has changed. */\n  _dataChanges = new Subject<void>();\n\n  /** The tree node's data. */\n  get data(): T { return this._data; }\n  set data(value: T) {\n    if (value !== this._data) {\n      this._data = value;\n      this._setRoleFromData();\n      this._dataChanges.next();\n    }\n  }\n  protected _data: T;\n\n  get isExpanded(): boolean {\n    return this._tree.treeControl.isExpanded(this._data);\n  }\n\n  get level(): number {\n    return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n  }\n\n  /**\n   * The role of the node should be 'group' if it's an internal node,\n   * and 'treeitem' if it's a leaf node.\n   */\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>) {\n    CdkTreeNode.mostRecentTreeNode = this as CdkTreeNode<T>;\n  }\n\n  ngOnDestroy() {\n    // If this is the last tree node being destroyed,\n    // clear out the reference to avoid leaking memory.\n    if (CdkTreeNode.mostRecentTreeNode === this) {\n      CdkTreeNode.mostRecentTreeNode = null;\n    }\n\n    this._dataChanges.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Focuses the menu item. Implements for FocusableOption. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  protected _setRoleFromData(): void {\n    if (this._tree.treeControl.isExpandable) {\n      this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n    } else {\n      if (!this._tree.treeControl.getChildren) {\n        throw getTreeControlFunctionsMissingError();\n      }\n      const childrenNodes = this._tree.treeControl.getChildren(this._data);\n      if (Array.isArray(childrenNodes)) {\n        this._setRoleFromChildren(childrenNodes as T[]);\n      } else if (childrenNodes instanceof Observable) {\n        childrenNodes.pipe(takeUntil(this._destroyed))\n            .subscribe(children => this._setRoleFromChildren(children));\n      }\n    }\n  }\n\n  protected _setRoleFromChildren(children: T[]) {\n    this.role = children && children.length ? 'group' : 'treeitem';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodeOutlet} from './outlet';\nimport {CdkTree, CdkTreeNode} from './tree';\nimport {getTreeControlFunctionsMissingError} from './tree-errors';\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * For example:\n *   ```html\n *   <cdk-nested-tree-node>\n *     {{node.name}}\n *     <ng-template cdkTreeNodeOutlet></ng-template>\n *   </cdk-nested-tree-node>\n *   ```\n * The children of node will be automatically added to `cdkTreeNodeOutlet`, the result dom will be\n * like this:\n *   ```html\n *   <cdk-nested-tree-node>\n *     {{node.name}}\n *      <cdk-nested-tree-node>{{child1.name}}</cdk-nested-tree-node>\n *      <cdk-nested-tree-node>{{child2.name}}</cdk-nested-tree-node>\n *   </cdk-nested-tree-node>\n *   ```\n */\n@Directive({\n  selector: 'cdk-nested-tree-node',\n  exportAs: 'cdkNestedTreeNode',\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.role]': 'role',\n    'class': 'cdk-tree-node cdk-nested-tree-node',\n  },\n  providers: [\n    {provide: CdkTreeNode, useExisting: CdkNestedTreeNode},\n    {provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode}\n  ]\n})\nexport class CdkNestedTreeNode<T> extends CdkTreeNode<T> implements AfterContentInit, OnDestroy {\n  /** Differ used to find the changes in the data provided by the data source. */\n  private _dataDiffer: IterableDiffer<T>;\n\n  /** The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`. */\n  protected _children: T[];\n\n  /** The children node placeholder. */\n  @ContentChildren(CdkTreeNodeOutlet, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  })\n  nodeOutlet: QueryList<CdkTreeNodeOutlet>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              protected _differs: IterableDiffers) {\n    super(_elementRef, _tree);\n  }\n\n  ngAfterContentInit() {\n    this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n    if (!this._tree.treeControl.getChildren) {\n      throw getTreeControlFunctionsMissingError();\n    }\n    const childrenNodes = this._tree.treeControl.getChildren(this.data);\n    if (Array.isArray(childrenNodes)) {\n      this.updateChildrenNodes(childrenNodes as T[]);\n    } else if (childrenNodes instanceof Observable) {\n      childrenNodes.pipe(takeUntil(this._destroyed))\n        .subscribe(result => this.updateChildrenNodes(result));\n    }\n    this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n        .subscribe(() => this.updateChildrenNodes());\n  }\n\n  ngOnDestroy() {\n    this._clear();\n    super.ngOnDestroy();\n  }\n\n  /** Add children dataNodes to the NodeOutlet */\n  protected updateChildrenNodes(children?: T[]): void {\n    const outlet = this._getNodeOutlet();\n    if (children) {\n      this._children = children;\n    }\n    if (outlet && this._children) {\n      const viewContainer = outlet.viewContainer;\n      this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n    } else {\n      // Reset the data differ if there's no children nodes displayed\n      this._dataDiffer.diff([]);\n    }\n  }\n\n  /** Clear the children dataNodes. */\n  protected _clear(): void {\n    const outlet = this._getNodeOutlet();\n    if (outlet) {\n      outlet.viewContainer.clear();\n      this._dataDiffer.diff([]);\n    }\n  }\n\n  /** Gets the outlet for the current node. */\n  private _getNodeOutlet() {\n    const outlets = this.nodeOutlet;\n\n    if (outlets) {\n      // Note that since we use `descendants: true` on the query, we have to ensure\n      // that we don't pick up the outlet of a child node by accident.\n      return outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Directive, ElementRef, Input, OnDestroy, Optional, Renderer2} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {CdkTree, CdkTreeNode} from './tree';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\n@Directive({\n  selector: '[cdkTreeNodePadding]',\n})\nexport class CdkTreeNodePadding<T> implements OnDestroy {\n  /** Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM. */\n  private _currentPadding: string|null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** CSS units used for the indentation value. */\n  indentUnits = 'px';\n\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  @Input('cdkTreeNodePadding')\n  get level(): number { return this._level; }\n  set level(value: number) {\n    this._level = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _level: number;\n\n  /**\n   * The indent for each level. Can be a number or a CSS string.\n   * Default number 40px from material design menu sub-menu spec.\n   */\n  @Input('cdkTreeNodePaddingIndent')\n  get indent(): number | string { return this._indent; }\n  set indent(indent: number | string) {\n    let value = indent;\n    let units = 'px';\n\n    if (typeof indent === 'string') {\n      const parts = indent.split(cssUnitPattern);\n      value = parts[0];\n      units = parts[1] || units;\n    }\n\n    this.indentUnits = units;\n    this._indent = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _indent: number = 40;\n\n  constructor(private _treeNode: CdkTreeNode<T>,\n              private _tree: CdkTree<T>,\n              private _renderer: Renderer2,\n              private _element: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality) {\n    this._setPadding();\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n    }\n\n    // In Ivy the indentation binding might be set before the tree node's data has been added,\n    // which means that we'll miss the first render. We have to subscribe to changes in the\n    // data to ensure that everything is up to date.\n    _treeNode._dataChanges.subscribe(() => this._setPadding());\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n  _paddingIndent(): string|null {\n    const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n      ? this._tree.treeControl.getLevel(this._treeNode.data)\n      : null;\n    const level = this._level || nodeLevel;\n    return level ? `${level * this._indent}${this.indentUnits}` : null;\n  }\n\n  _setPadding(forceChange = false) {\n    const padding = this._paddingIndent();\n\n    if (padding !== this._currentPadding || forceChange) {\n      const element = this._element.nativeElement;\n      const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n      const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n      this._renderer.setStyle(element, paddingProp, padding);\n      this._renderer.setStyle(element, resetProp, null);\n      this._currentPadding = padding;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkTree, CdkTreeNode} from './tree';\n\n/**\n * Node toggle to expand/collapse the node.\n */\n@Directive({selector: '[cdkTreeNodeToggle]'})\nexport class CdkTreeNodeToggle<T> {\n  /** Whether expand/collapse the node recursively. */\n  @Input('cdkTreeNodeToggleRecursive')\n  get recursive(): boolean { return this._recursive; }\n  set recursive(value: boolean) { this._recursive = coerceBooleanProperty(value); }\n  protected _recursive = false;\n\n  constructor(protected _tree: CdkTree<T>,\n              protected _treeNode: CdkTreeNode<T>) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  _toggle(event: Event): void {\n    this.recursive\n      ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n      : this._tree.treeControl.toggle(this._treeNode.data);\n\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CdkTreeNodeOutlet} from './outlet';\nimport {CdkTreeNodePadding} from './padding';\nimport {CdkTreeNodeToggle} from './toggle';\nimport {CdkTree, CdkTreeNode} from './tree';\nimport {CdkTreeNodeDef} from './node';\nimport {CdkNestedTreeNode} from './nested-node';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkNestedTreeNode,\n  CdkTreeNodeDef,\n  CdkTreeNodePadding,\n  CdkTreeNodeToggle,\n  CdkTree,\n  CdkTreeNode,\n  CdkTreeNodeOutlet,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n  providers: [FocusMonitor, CdkTreeNodeDef]\n})\nexport class CdkTreeModule {}\n"]}