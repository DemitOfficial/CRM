{"version":3,"file":"cdk-scrolling.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk/scrolling/virtual-scroll-strategy.ts","../../src/cdk/scrolling/fixed-size-virtual-scroll.ts","../../src/cdk/scrolling/scroll-dispatcher.ts","../../src/cdk/scrolling/scrollable.ts","../../src/cdk/scrolling/virtual-scroll-viewport.ts","../../src/cdk/scrolling/virtual-for-of.ts","../../src/cdk/scrolling/scrolling-module.ts","../../src/cdk/scrolling/viewport-ruler.ts"],"names":["InjectionToken","Subject","distinctUntilChanged","coerceNumberProperty","Directive","forwardRef","Input","observableOf","Observable","auditTime","filter","fromEvent","Injectable","NgZone","Platform","platform","Optional","SkipSelf","takeUntil","getRtlScrollAxisType","RtlScrollAxisType","supportsScrollBehavior","ElementRef","Directionality","animationFrameScheduler","asapScheduler","tslib_1.__extends","startWith","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","ViewChild","pairwise","switchMap","shareReplay","isDataSource","ArrayDataSource","ViewContainerRef","TemplateRef","IterableDiffers","NgModule","BidiModule","PlatformModule","merge"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The injection token used to specify the virtual scrolling strategy. */\nexport const VIRTUAL_SCROLL_STRATEGY =\n    new InjectionToken<VirtualScrollStrategy>('VIRTUAL_SCROLL_STRATEGY');\n\n\n/** A strategy that dictates which items should be rendered in the viewport. */\nexport interface VirtualScrollStrategy {\n  /** Emits when the index of the first element visible in the viewport changes. */\n  scrolledIndexChange: Observable<number>;\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport): void;\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach(): void;\n\n  /** Called when the viewport is scrolled (debounced using requestAnimationFrame). */\n  onContentScrolled(): void;\n\n  /** Called when the length of the data changes. */\n  onDataLengthChanged(): void;\n\n  /** Called when the range of items rendered in the DOM has changed. */\n  onContentRendered(): void;\n\n  /** Called when the offset of the rendered items changed. */\n  onRenderedOffsetChanged(): void;\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Directive, forwardRef, Input, OnChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\nimport {VIRTUAL_SCROLL_STRATEGY, VirtualScrollStrategy} from './virtual-scroll-strategy';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nexport class FixedSizeVirtualScrollStrategy implements VirtualScrollStrategy {\n  private _scrolledIndexChange = new Subject<number>();\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange: Observable<number> = this._scrolledIndexChange.pipe(distinctUntilChanged());\n\n  /** The attached viewport. */\n  private _viewport: CdkVirtualScrollViewport | null = null;\n\n  /** The size of the items in the virtually scrolling list. */\n  private _itemSize: number;\n\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  private _minBufferPx: number;\n\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  private _maxBufferPx: number;\n\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    if (maxBufferPx < minBufferPx) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() { /* no-op */ }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() { /* no-op */ }\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n\n  /** Update the viewport's total content size. */\n  private _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n\n  /** Update the viewport's rendered range. */\n  private _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n\n    const scrollOffset = this._viewport.measureScrollOffset();\n    const firstVisibleIndex = scrollOffset / this._itemSize;\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {start: renderedRange.start, end: renderedRange.end};\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength,\n          Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0,\n              Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n\n\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nexport function _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir: CdkFixedSizeVirtualScroll) {\n  return fixedSizeDir._scrollStrategy;\n}\n\n\n/** A virtual scroll strategy that supports fixed-size items. */\n@Directive({\n  selector: 'cdk-virtual-scroll-viewport[itemSize]',\n  providers: [{\n    provide: VIRTUAL_SCROLL_STRATEGY,\n    useFactory: _fixedSizeVirtualScrollStrategyFactory,\n    deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n  }],\n})\nexport class CdkFixedSizeVirtualScroll implements OnChanges {\n  /** The size of the items in the list (in pixels). */\n  @Input()\n  get itemSize(): number { return this._itemSize; }\n  set itemSize(value: number) { this._itemSize = coerceNumberProperty(value); }\n  _itemSize = 20;\n\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  @Input()\n  get minBufferPx(): number { return this._minBufferPx; }\n  set minBufferPx(value: number) { this._minBufferPx = coerceNumberProperty(value); }\n  _minBufferPx = 100;\n\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  @Input()\n  get maxBufferPx(): number { return this._maxBufferPx; }\n  set maxBufferPx(value: number) { this._maxBufferPx = coerceNumberProperty(value); }\n  _maxBufferPx = 200;\n\n  /** The scroll strategy used by this directive. */\n  _scrollStrategy =\n      new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {fromEvent, of as observableOf, Subject, Subscription, Observable, Observer} from 'rxjs';\nimport {auditTime, filter} from 'rxjs/operators';\nimport {CdkScrollable} from './scrollable';\n\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollDispatcher implements OnDestroy {\n  constructor(private _ngZone: NgZone, private _platform: Platform) { }\n\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  private _scrolled = new Subject<CdkScrollable|void>();\n\n  /** Keeps track of the global `scroll` and `resize` subscriptions. */\n  _globalSubscription: Subscription | null = null;\n\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  private _scrolledCount = 0;\n\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers: Map<CdkScrollable, Subscription> = new Map();\n\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable: CdkScrollable): void {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n          .subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n\n  /**\n   * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable: CdkScrollable): void {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME): Observable<CdkScrollable|void> {\n    if (!this._platform.isBrowser) {\n      return observableOf<void>();\n    }\n\n    return new Observable((observer: Observer<CdkScrollable|void>) => {\n      if (!this._globalSubscription) {\n        this._addGlobalListener();\n      }\n\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ?\n        this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n        this._scrolled.subscribe(observer);\n\n      this._scrolledCount++;\n\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n\n        if (!this._scrolledCount) {\n          this._removeGlobalListener();\n        }\n      };\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeGlobalListener();\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementRef: ElementRef, auditTimeInMs?: number): Observable<CdkScrollable|void> {\n    const ancestors = this.getAncestorScrollContainers(elementRef);\n\n    return this.scrolled(auditTimeInMs).pipe(filter(target => {\n      return !target || ancestors.indexOf(target) > -1;\n    }));\n  }\n\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementRef: ElementRef): CdkScrollable[] {\n    const scrollingContainers: CdkScrollable[] = [];\n\n    this.scrollContainers.forEach((_subscription: Subscription, scrollable: CdkScrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n\n  /** Returns true if the element is contained within the provided Scrollable. */\n  private _scrollableContainsElement(scrollable: CdkScrollable, elementRef: ElementRef): boolean {\n    let element: HTMLElement | null = elementRef.nativeElement;\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element!.parentElement);\n\n    return false;\n  }\n\n  /** Sets up the global scroll listeners. */\n  private _addGlobalListener() {\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n    });\n  }\n\n  /** Cleans up the global scroll listener. */\n  private _removeGlobalListener() {\n    if (this._globalSubscription) {\n      this._globalSubscription.unsubscribe();\n      this._globalSubscription = null;\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function SCROLL_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: ScrollDispatcher, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const SCROLL_DISPATCHER_PROVIDER = {\n  // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n  provide: ScrollDispatcher,\n  deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n  useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  getRtlScrollAxisType,\n  RtlScrollAxisType,\n  supportsScrollBehavior\n} from '@angular/cdk/platform';\nimport {Directive, ElementRef, NgZone, OnDestroy, OnInit, Optional} from '@angular/core';\nimport {fromEvent, Observable, Subject, Observer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\nexport type _Without<T> = {[P in keyof T]?: never};\nexport type _XOR<T, U> = (_Without<T> & U) | (_Without<U> & T);\nexport type _Top = {top?: number};\nexport type _Bottom = {bottom?: number};\nexport type _Left = {left?: number};\nexport type _Right = {right?: number};\nexport type _Start = {start?: number};\nexport type _End = {end?: number};\nexport type _XAxis = _XOR<_XOR<_Left, _Right>, _XOR<_Start, _End>>;\nexport type _YAxis = _XOR<_Top, _Bottom>;\n\n/**\n * An extended version of ScrollToOptions that allows expressing scroll offsets relative to the\n * top, bottom, left, right, start, or end of the viewport rather than just the top and left.\n * Please note: the top and bottom properties are mutually exclusive, as are the left, right,\n * start, and end properties.\n */\nexport type ExtendedScrollToOptions = _XAxis & _YAxis & ScrollOptions;\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n  selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class CdkScrollable implements OnInit, OnDestroy {\n  private _destroyed = new Subject();\n\n  private _elementScrolled: Observable<Event> = new Observable((observer: Observer<Event>) =>\n      this.ngZone.runOutsideAngular(() =>\n          fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n              .subscribe(observer)));\n\n  constructor(protected elementRef: ElementRef<HTMLElement>,\n              protected scrollDispatcher: ScrollDispatcher,\n              protected ngZone: NgZone,\n              @Optional() protected dir?: Directionality) {}\n\n  ngOnInit() {\n    this.scrollDispatcher.register(this);\n  }\n\n  ngOnDestroy() {\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled(): Observable<Event> {\n    return this._elementScrolled;\n  }\n\n  /** Gets the ElementRef for the viewport. */\n  getElementRef(): ElementRef<HTMLElement> {\n    return this.elementRef;\n  }\n\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options: ExtendedScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n\n    // Rewrite start & end offsets as right or left offsets.\n    options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n    options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      (options as _Without<_Bottom> & _Top).top =\n          el.scrollHeight - el.clientHeight - options.bottom;\n    }\n\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        (options as _Without<_Left> & _Right).right =\n            el.scrollWidth - el.clientWidth - options.left;\n      }\n\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        (options as _Without<_Right> & _Left).left =\n            el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n\n    this._applyScrollToOptions(options);\n  }\n\n  private _applyScrollToOptions(options: ScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ListRange} from '@angular/cdk/collections';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animationFrameScheduler, asapScheduler, Observable, Subject, Observer} from 'rxjs';\nimport {auditTime, startWith, takeUntil} from 'rxjs/operators';\nimport {ScrollDispatcher} from './scroll-dispatcher';\nimport {CdkScrollable, ExtendedScrollToOptions} from './scrollable';\nimport {CdkVirtualForOf} from './virtual-for-of';\nimport {VIRTUAL_SCROLL_STRATEGY, VirtualScrollStrategy} from './virtual-scroll-strategy';\n\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1: ListRange, r2: ListRange): boolean {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER =\n    typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n\n\n/** A viewport that virtualizes it's scrolling with the help of `CdkVirtualForOf`. */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-virtual-scroll-viewport',\n  templateUrl: 'virtual-scroll-viewport.html',\n  styleUrls: ['virtual-scroll-viewport.css'],\n  host: {\n    'class': 'cdk-virtual-scroll-viewport',\n    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: CdkScrollable,\n    useExisting: CdkVirtualScrollViewport,\n  }]\n})\nexport class CdkVirtualScrollViewport extends CdkScrollable implements OnInit, OnDestroy {\n  /** Emits when the viewport is detached from a CdkVirtualForOf. */\n  private _detachedSubject = new Subject<void>();\n\n  /** Emits when the rendered range changes. */\n  private _renderedRangeSubject = new Subject<ListRange>();\n\n  /** The direction the viewport scrolls. */\n  @Input() orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n  // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n  // depending on how the strategy calculates the scrolled index, it may come at a cost to\n  // performance.\n  /** Emits when the index of the first element visible in the viewport changes. */\n  @Output() scrolledIndexChange: Observable<number> =\n      new Observable((observer: Observer<number>) =>\n        this._scrollStrategy.scrolledIndexChange.subscribe(index =>\n            Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n\n  /** The element that wraps the rendered content. */\n  @ViewChild('contentWrapper', {static: true}) _contentWrapper: ElementRef<HTMLElement>;\n\n  /** A stream that emits whenever the rendered range changes. */\n  renderedRangeStream: Observable<ListRange> = this._renderedRangeSubject.asObservable();\n\n  /**\n   * The transform used to scale the spacer to the same size as all content, including content that\n   * is not currently rendered.\n   */\n  _totalContentSizeTransform = '';\n\n  /**\n   * The total size of all content (in pixels), including content that is not currently rendered.\n   */\n  private _totalContentSize = 0;\n\n  /**\n   * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n   * of the visible viewport.\n   */\n  private _renderedContentTransform: string;\n\n  /** The currently rendered range of indices. */\n  private _renderedRange: ListRange = {start: 0, end: 0};\n\n  /** The length of the data bound to this viewport (in number of items). */\n  private _dataLength = 0;\n\n  /** The size of the viewport (in pixels). */\n  private _viewportSize = 0;\n\n  /** the currently attached CdkVirtualForOf. */\n  private _forOf: CdkVirtualForOf<any> | null;\n\n  /** The last rendered content offset that was set. */\n  private _renderedContentOffset = 0;\n\n  /**\n   * Whether the last rendered content offset was to the end of the content (and therefore needs to\n   * be rewritten as an offset to the start of the content).\n   */\n  private _renderedContentOffsetNeedsRewrite = false;\n\n  /** Whether there is a pending change detection cycle. */\n  private _isChangeDetectionPending = false;\n\n  /** A list of functions to run after the next change detection cycle. */\n  private _runAfterChangeDetection: Function[] = [];\n\n  constructor(public elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              ngZone: NgZone,\n              @Optional() @Inject(VIRTUAL_SCROLL_STRATEGY)\n                  private _scrollStrategy: VirtualScrollStrategy,\n              @Optional() dir: Directionality,\n              scrollDispatcher: ScrollDispatcher) {\n    super(elementRef, scrollDispatcher, ngZone, dir);\n\n    if (!_scrollStrategy) {\n      throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    // It's still too early to measure the viewport at this point. Deferring with a promise allows\n    // the Viewport to be rendered with the correct size before we measure. We run this outside the\n    // zone to avoid causing more change detection cycles. We handle the change detection loop\n    // ourselves instead.\n    this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n      this._measureViewportSize();\n      this._scrollStrategy.attach(this);\n\n      this.elementScrolled()\n          .pipe(\n              // Start off with a fake scroll event so we properly detect our initial position.\n              startWith(null!),\n              // Collect multiple events into one until the next animation frame. This way if\n              // there are multiple scroll events in the same frame we only need to recheck\n              // our layout once.\n              auditTime(0, SCROLL_SCHEDULER))\n          .subscribe(() => this._scrollStrategy.onContentScrolled());\n\n      this._markChangeDetectionNeeded();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.detach();\n    this._scrollStrategy.detach();\n\n    // Complete all subjects\n    this._renderedRangeSubject.complete();\n    this._detachedSubject.complete();\n\n    super.ngOnDestroy();\n  }\n\n  /** Attaches a `CdkVirtualForOf` to this viewport. */\n  attach(forOf: CdkVirtualForOf<any>) {\n    if (this._forOf) {\n      throw Error('CdkVirtualScrollViewport is already attached.');\n    }\n\n    // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n    // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n    // change detection loop ourselves.\n    this.ngZone.runOutsideAngular(() => {\n      this._forOf = forOf;\n      this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n        const newLength = data.length;\n        if (newLength !== this._dataLength) {\n          this._dataLength = newLength;\n          this._scrollStrategy.onDataLengthChanged();\n        }\n        this._doChangeDetection();\n      });\n    });\n  }\n\n  /** Detaches the current `CdkVirtualForOf`. */\n  detach() {\n    this._forOf = null;\n    this._detachedSubject.next();\n  }\n\n  /** Gets the length of the data bound to this viewport (in number of items). */\n  getDataLength(): number {\n    return this._dataLength;\n  }\n\n  /** Gets the size of the viewport (in pixels). */\n  getViewportSize(): number {\n    return this._viewportSize;\n  }\n\n  // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n  // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n  // setting it to something else, but its error prone and should probably be split into\n  // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n\n  /** Get the current rendered range of items. */\n  getRenderedRange(): ListRange {\n    return this._renderedRange;\n  }\n\n  /**\n   * Sets the total size of all content (in pixels), including content that is not currently\n   * rendered.\n   */\n  setTotalContentSize(size: number) {\n    if (this._totalContentSize !== size) {\n      this._totalContentSize = size;\n      const axis = this.orientation == 'horizontal' ? 'X' : 'Y';\n      this._totalContentSizeTransform = `scale${axis}(${this._totalContentSize})`;\n      this._markChangeDetectionNeeded();\n    }\n  }\n\n  /** Sets the currently rendered range of indices. */\n  setRenderedRange(range: ListRange) {\n    if (!rangesEqual(this._renderedRange, range)) {\n      this._renderedRangeSubject.next(this._renderedRange = range);\n      this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n    }\n  }\n\n  /**\n   * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n   */\n  getOffsetToRenderedContentStart(): number | null {\n    return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n  }\n\n  /**\n   * Sets the offset from the start of the viewport to either the start or end of the rendered data\n   * (in pixels).\n   */\n  setRenderedContentOffset(offset: number, to: 'to-start' | 'to-end' = 'to-start') {\n    // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n    // in the negative direction.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    const isHorizontal = this.orientation == 'horizontal';\n    const axis = isHorizontal ? 'X' : 'Y';\n    const axisDirection = isHorizontal && isRtl ? -1 : 1;\n    let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n    this._renderedContentOffset = offset;\n    if (to === 'to-end') {\n      transform += ` translate${axis}(-100%)`;\n      // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n      // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n      // expand upward).\n      this._renderedContentOffsetNeedsRewrite = true;\n    }\n    if (this._renderedContentTransform != transform) {\n      // We know this value is safe because we parse `offset` with `Number()` before passing it\n      // into the string.\n      this._renderedContentTransform = transform;\n      this._markChangeDetectionNeeded(() => {\n        if (this._renderedContentOffsetNeedsRewrite) {\n          this._renderedContentOffset -= this.measureRenderedContentSize();\n          this._renderedContentOffsetNeedsRewrite = false;\n          this.setRenderedContentOffset(this._renderedContentOffset);\n        } else {\n          this._scrollStrategy.onRenderedOffsetChanged();\n        }\n      });\n    }\n  }\n\n  /**\n   * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n   * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n   * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n   * @param offset The offset to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToOffset(offset: number, behavior: ScrollBehavior = 'auto') {\n    const options: ExtendedScrollToOptions = {behavior};\n    if (this.orientation === 'horizontal') {\n      options.start = offset;\n    } else {\n      options.top = offset;\n    }\n    this.scrollTo(options);\n  }\n\n  /**\n   * Scrolls to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToIndex(index: number,  behavior: ScrollBehavior = 'auto') {\n    this._scrollStrategy.scrollToIndex(index, behavior);\n  }\n\n  /**\n   * Gets the current scroll offset from the start of the viewport (in pixels).\n   * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n   *     in horizontal mode.\n   */\n  measureScrollOffset(from?: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n    return super.measureScrollOffset(\n        from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n  }\n\n  /** Measure the combined size of all of the rendered items. */\n  measureRenderedContentSize(): number {\n    const contentEl = this._contentWrapper.nativeElement;\n    return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n  }\n\n  /**\n   * Measure the total combined size of the given range. Throws if the range includes items that are\n   * not rendered.\n   */\n  measureRangeSize(range: ListRange): number {\n    if (!this._forOf) {\n      return 0;\n    }\n    return this._forOf.measureRangeSize(range, this.orientation);\n  }\n\n  /** Update the viewport dimensions and re-render. */\n  checkViewportSize() {\n    // TODO: Cleanup later when add logic for handling content resize\n    this._measureViewportSize();\n    this._scrollStrategy.onDataLengthChanged();\n  }\n\n  /** Measure the viewport size. */\n  private _measureViewportSize() {\n    const viewportEl = this.elementRef.nativeElement;\n    this._viewportSize = this.orientation === 'horizontal' ?\n        viewportEl.clientWidth : viewportEl.clientHeight;\n  }\n\n  /** Queue up change detection to run. */\n  private _markChangeDetectionNeeded(runAfter?: Function) {\n    if (runAfter) {\n      this._runAfterChangeDetection.push(runAfter);\n    }\n\n    // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n    // properties sequentially we only have to run `_doChangeDetection` once at the end.\n    if (!this._isChangeDetectionPending) {\n      this._isChangeDetectionPending = true;\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._doChangeDetection();\n      }));\n    }\n  }\n\n  /** Run change detection. */\n  private _doChangeDetection() {\n    this._isChangeDetectionPending = false;\n\n    // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n    // from the root, since the repeated items are content projected in. Calling `detectChanges`\n    // instead does not properly check the projected content.\n    this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n    // Apply the content transform. The transform can't be set via an Angular binding because\n    // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n    // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n    // the `Number` function first to coerce it to a numeric value.\n    this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n\n    const runAfterChangeDetection = this._runAfterChangeDetection;\n    this._runAfterChangeDetection = [];\n    for (const fn of runAfterChangeDetection) {\n      fn();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ArrayDataSource,\n  CollectionViewer,\n  DataSource,\n  ListRange,\n  isDataSource,\n} from '@angular/cdk/collections';\nimport {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  NgZone,\n  OnDestroy,\n  SkipSelf,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Observable, Subject, of as observableOf} from 'rxjs';\nimport {pairwise, shareReplay, startWith, switchMap, takeUntil} from 'rxjs/operators';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The context for an item rendered by `CdkVirtualForOf` */\nexport type CdkVirtualForOfContext<T> = {\n  /** The item value. */\n  $implicit: T;\n  /** The DataSource, Observable, or NgIterable that was passed to *cdkVirtualFor. */\n  cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T>;\n  /** The index of the item in the DataSource. */\n  index: number;\n  /** The number of items in the DataSource. */\n  count: number;\n  /** Whether this is the first item in the DataSource. */\n  first: boolean;\n  /** Whether this is the last item in the DataSource. */\n  last: boolean;\n  /** Whether the index is even. */\n  even: boolean;\n  /** Whether the index is odd. */\n  odd: boolean;\n};\n\n\n/** Helper to extract size from a DOM Node. */\nfunction getSize(orientation: 'horizontal' | 'vertical', node: Node): number {\n  const el = node as Element;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  return orientation == 'horizontal' ? rect.width : rect.height;\n}\n\n\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\n@Directive({\n  selector: '[cdkVirtualFor][cdkVirtualForOf]',\n})\nexport class CdkVirtualForOf<T> implements CollectionViewer, DoCheck, OnDestroy {\n  /** Emits when the rendered view of the data changes. */\n  viewChange = new Subject<ListRange>();\n\n  /** Subject that emits when a new DataSource instance is given. */\n  private _dataSourceChanges = new Subject<DataSource<T>>();\n\n  /** The DataSource to display. */\n  @Input()\n  get cdkVirtualForOf(): DataSource<T> | Observable<T[]> | NgIterable<T> {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value: DataSource<T> | Observable<T[]> | NgIterable<T>) {\n    this._cdkVirtualForOf = value;\n    const ds = isDataSource(value) ? value :\n        // Slice the value if its an NgIterable to ensure we're working with an array.\n        new ArrayDataSource<T>(\n            value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n    this._dataSourceChanges.next(ds);\n  }\n  _cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T>;\n\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  @Input()\n  get cdkVirtualForTrackBy(): TrackByFunction<T> | undefined {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn: TrackByFunction<T> | undefined) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ?\n        (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n        undefined;\n  }\n  private _cdkVirtualForTrackBy: TrackByFunction<T> | undefined;\n\n  /** The template used to stamp out new elements. */\n  @Input()\n  set cdkVirtualForTemplate(value: TemplateRef<CdkVirtualForOfContext<T>>) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  @Input() cdkVirtualForTemplateCacheSize: number = 20;\n\n  /** Emits whenever the data in the current DataSource changes. */\n  dataStream: Observable<T[] | ReadonlyArray<T>> = this._dataSourceChanges\n      .pipe(\n          // Start off with null `DataSource`.\n          startWith(null!),\n          // Bundle up the previous and current data sources so we can work with both.\n          pairwise(),\n          // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n          // new one, passing back a stream of data changes which we run through `switchMap` to give\n          // us a data stream that emits the latest data from whatever the current `DataSource` is.\n          switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n          // Replay the last emitted data when someone subscribes.\n          shareReplay(1));\n\n  /** The differ used to calculate changes to the data. */\n  private _differ: IterableDiffer<T> | null = null;\n\n  /** The most recent data emitted from the DataSource. */\n  private _data: T[] | ReadonlyArray<T>;\n\n  /** The currently rendered items. */\n  private _renderedItems: T[];\n\n  /** The currently rendered range of indices. */\n  private _renderedRange: ListRange;\n\n  /**\n   * The template cache used to hold on ot template instancess that have been stamped out, but don't\n   * currently need to be rendered. These instances will be reused in the future rather than\n   * stamping out brand new ones.\n   */\n  private _templateCache: EmbeddedViewRef<CdkVirtualForOfContext<T>>[] = [];\n\n  /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n  private _needsUpdate = false;\n\n  private _destroyed = new Subject<void>();\n\n  constructor(\n      /** The view container to add items to. */\n      private _viewContainerRef: ViewContainerRef,\n      /** The template to use when stamping out new items. */\n      private _template: TemplateRef<CdkVirtualForOfContext<T>>,\n      /** The set of available differs. */\n      private _differs: IterableDiffers,\n      /** The virtual scrolling viewport that these items are being rendered in. */\n      @SkipSelf() private _viewport: CdkVirtualScrollViewport,\n      ngZone: NgZone) {\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      ngZone.run(() => this.viewChange.next(this._renderedRange));\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range: ListRange, orientation: 'horizontal' | 'vertical'): number {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n\n    // Loop over all root nodes for all items in the range and sum up their size.\n    let totalSize = 0;\n    let i = rangeLen;\n    while (i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>> | null;\n      let j = view ? view.rootNodes.length : 0;\n      while (j--) {\n        totalSize += getSize(orientation, view!.rootNodes[j]);\n      }\n    }\n\n    return totalSize;\n  }\n\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._viewport.detach();\n\n    this._dataSourceChanges.next();\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    for (let view of this._templateCache) {\n      view.destroy();\n    }\n  }\n\n  /** React to scroll state changes in the viewport. */\n  private _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n    }\n    this._needsUpdate = true;\n  }\n\n  /** Swap out one `DataSource` for another. */\n  private _changeDataSource(oldDs: DataSource<T> | null, newDs: DataSource<T> | null):\n    Observable<T[] | ReadonlyArray<T>> {\n\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : observableOf();\n  }\n\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  private _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      let view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n\n  /** Apply changes to the DOM. */\n  private _applyChanges(changes: IterableChanges<T>) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record: IterableChangeRecord<T>,\n                              adjustedPreviousIndex: number | null,\n                              currentIndex: number | null) => {\n      if (record.previousIndex == null) {  // Item added.\n        const view = this._insertViewForNewItem(currentIndex!);\n        view.context.$implicit = record.item;\n      } else if (currentIndex == null) {  // Item removed.\n        this._cacheView(this._detachView(adjustedPreviousIndex !));\n      } else {  // Item moved.\n        const view = this._viewContainerRef.get(adjustedPreviousIndex!) as\n            EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n        this._viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = record.item;\n      }\n    });\n\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const view = this._viewContainerRef.get(record.currentIndex!) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.$implicit = record.item;\n    });\n\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n\n  /** Cache the given detached view. */\n  private _cacheView(view: EmbeddedViewRef<CdkVirtualForOfContext<T>>) {\n    if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n      this._templateCache.push(view);\n    } else {\n      const index = this._viewContainerRef.indexOf(view);\n\n      // It's very unlikely that the index will ever be -1, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        this._viewContainerRef.remove(index);\n      }\n    }\n  }\n\n  /** Inserts a view for a new item, either from the cache or by creating a new one. */\n  private _insertViewForNewItem(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n  }\n\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  private _updateComputedContextProperties(context: CdkVirtualForOfContext<any>) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n\n  /** Creates a new embedded view and moves it to the given index */\n  private _createEmbeddedViewAt(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    const view = this._viewContainerRef.createEmbeddedView(this._template, {\n        $implicit: null!,\n        cdkVirtualForOf: this._cdkVirtualForOf,\n        index: -1,\n        count: -1,\n        first: false,\n        last: false,\n        odd: false,\n        even: false\n    });\n    if (index < this._viewContainerRef.length) {\n      this._viewContainerRef.move(view, index);\n    }\n    return view;\n  }\n\n  /** Inserts a recycled view from the cache at the given index. */\n  private _insertViewFromCache(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>>|null {\n    const cachedView = this._templateCache.pop();\n    if (cachedView) {\n      this._viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n\n  /** Detaches the embedded view at the given index. */\n  private _detachView(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    return this._viewContainerRef.detach(index) as\n        EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkFixedSizeVirtualScroll} from './fixed-size-virtual-scroll';\nimport {CdkScrollable} from './scrollable';\nimport {CdkVirtualForOf} from './virtual-for-of';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n@NgModule({\n  imports: [BidiModule, PlatformModule],\n  exports: [\n    BidiModule,\n    CdkFixedSizeVirtualScroll,\n    CdkScrollable,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n  declarations: [\n    CdkFixedSizeVirtualScroll,\n    CdkScrollable,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n})\nexport class ScrollingModule {}\n\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * @breaking-change 8.0.0 delete this alias\n */\n@NgModule({\n  imports: [ScrollingModule],\n  exports: [ScrollingModule],\n})\nexport class ScrollDispatchModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable, NgZone, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {merge, of as observableOf, fromEvent, Observable, Subscription} from 'rxjs';\nimport {auditTime} from 'rxjs/operators';\n\n/** Time in ms to throttle the resize events by default. */\nexport const DEFAULT_RESIZE_TIME = 20;\n\n/** Object that holds the scroll position of the viewport in each direction. */\nexport interface ViewportScrollPosition {\n  top: number;\n  left: number;\n}\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class ViewportRuler implements OnDestroy {\n  /** Cached viewport dimensions. */\n  private _viewportSize: {width: number; height: number};\n\n  /** Stream of viewport change events. */\n  private _change: Observable<Event>;\n\n  /** Subscription to streams that invalidate the cached viewport dimensions. */\n  private _invalidateCache: Subscription;\n\n  constructor(private _platform: Platform, ngZone: NgZone) {\n    ngZone.runOutsideAngular(() => {\n      this._change = _platform.isBrowser ?\n          merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n          observableOf();\n\n      // Note that we need to do the subscription inside `runOutsideAngular`\n      // since subscribing is what causes the event listener to be added.\n      this._invalidateCache = this.change().subscribe(() => this._updateViewportSize());\n    });\n  }\n\n  ngOnDestroy() {\n    this._invalidateCache.unsubscribe();\n  }\n\n  /** Returns the viewport's width and height. */\n  getViewportSize(): Readonly<{width: number, height: number}> {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n\n    const output = {width: this._viewportSize.width, height: this._viewportSize.height};\n\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null!;\n    }\n\n    return output;\n  }\n\n  /** Gets a ClientRect for the viewport's bounds. */\n  getViewportRect(): ClientRect {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {width, height} = this.getViewportSize();\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition(): ViewportScrollPosition {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {top: 0, left: 0};\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const documentElement = document.documentElement!;\n    const documentRect = documentElement.getBoundingClientRect();\n\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                 documentElement.scrollTop || 0;\n\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime: number = DEFAULT_RESIZE_TIME): Observable<Event> {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n\n  /** Updates the cached viewport size. */\n  private _updateViewportSize() {\n    this._viewportSize = this._platform.isBrowser ?\n        {width: window.innerWidth, height: window.innerHeight} :\n        {width: 0, height: 0};\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                platform: Platform,\n                                                ngZone: NgZone) {\n  return parentRuler || new ViewportRuler(platform, ngZone);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const VIEWPORT_RULER_PROVIDER = {\n  // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n  provide: ViewportRuler,\n  deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n  useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n"]}