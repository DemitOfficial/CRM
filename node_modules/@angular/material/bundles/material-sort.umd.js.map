{"version":3,"file":"material-sort.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/sort/sort-errors.ts","../../src/material/sort/sort.ts","../../src/material/sort/sort-animations.ts","../../src/material/sort/sort-header-intl.ts","../../src/material/sort/sort-header.ts","../../src/material/sort/sort-module.ts"],"names":["mixinInitialized","mixinDisabled","tslib_1.__extends","Subject","EventEmitter","isDevMode","coerceBooleanProperty","Directive","Input","Output","AnimationDurations","AnimationCurves","trigger","state","style","transition","animate","keyframes","query","animateChild","Injectable","Optional","SkipSelf","merge","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;AACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;AACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;AACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AACF;AACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;AAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;AAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AACzF,CAAC;AACD;AACA;AAAI;AACD;AAED;AAAI;AAAC;AAAI;AAAkB;AACb;AAAe;ACxB/B,SAAgB,+BAA+B,CAAC,EAAU,EAA1D;AAAE,IACA,OAAO,KAAK,CAAC,iDAAf,GAAiE,EAAE,GAAnE,IAAuE,CAAC,CAAC;AACzE,CAAC;AACD;AACG;AACH;AAAe;AAAf,SAAgB,wCAAwC,GAAxD;AAAE,IACA,OAAO,KAAK,CAAC,kFAAkF,CAAC,CAAC;AACnG,CAAC;AACD;AACG;AACH;AAAe;AAAf,SAAgB,2BAA2B,GAA3C;AAAE,IACA,OAAO,KAAK,CAAC,kDAAkD,CAAC,CAAC;AACnE,CAAC;AACD;AACG;AACH;AAAwB;AAAe;AAAvC,SAAgB,4BAA4B,CAAC,SAAiB,EAA9D;AAAE,IACA,OAAO,KAAK,CAAI,SAAS,GAA3B,mDAA8E,CAAC,CAAC;AAChF,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAA+C;AAAI;AAAkB;AC+BrO;AAAK;AAC0B;AAAI;AAAkB;AAAI;AACzC,IAFhB,SAAA,WAAA,GAAA;AAAE,KAAkB;AACpB,IADmB,OAAnB,WAAoB,CAApB;AAAC,CAAmB,EAApB,CAAA,CAAoB;AACpB;AAAA,IAAM,iBAAiB,GACnBA,uBAAgB,CAACC,oBAAa,CAAC,WAAW,CAAC,CAAC,CADhD;AAAC;AAAI;AACQ;AAGb,IAAA,OAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAK2BC,SAA7B,CAAA,OAAA,EAAA,MAAA,CAAA,CAA8C;AAC9C,IANA,SAAA,OAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAyGC;AACD;AACW;AAA+E;AACrF,QApGH,KAAF,CAAA,SAAW,GAAG,IAAI,GAAG,EAAuB,CAAC;AAC7C;AACW;AACE;AAAY,QAAd,KAAX,CAAA,aAAwB,GAAG,IAAIC,YAAO,EAAQ,CAAC;AAC/C;AACW;AACgB;AAGY;AAAY,QAG1B,KAAzB,CAAA,KAA8B,GAAmB,KAAK,CAAC;AACvD,QAUU,KAAV,CAAA,UAAoB,GAAkB,EAAE,CAAC;AACzC;AAEK;AAAyF;AACnF,QAQyB,KAApC,CAAA,UAA8C,GAAuB,IAAIC,iBAAY,EAAQ,CAAC;AAC9F;AAEe,KA2Dd;AACD,IAnFE,MAAF,CAAA,cAAA,CACM,OADN,CAAA,SAAA,EAAA,WACe,EADf;AAAE;AAC0C;AAC5C;AACuB;AAAuB;AAAY,QAHxD,YAAF,EACmC,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAC3D;AAAiB;AACZ;AAAuB;AAAY,QADvC,UAAc,SAAwB,EAAxC;AAAE,YACE,IAAIC,cAAS,EAAE,IAAI,SAAS,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;AACjF,gBAAM,MAAM,4BAA4B,CAAC,SAAS,CAAC,CAAC;AACpD,aAAK;AACL,YAAI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,SAAG;AACF;AAA0B;AAGtB,KAVL,CAAA,CAA4D;AAC5D,IAYE,MAAF,CAAA,cAAA,CACM,OADN,CAAA,SAAA,EAAA,cACkB,EADlB;AAAE;AAAY;AAEQ;AACZ;AAAY;AAElB;AACc;AAAsE;AAG/E;AAAY,QATnB,YAAF,EACgC,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE;AAC3D;AAAiB;AAAwB;AAAuB;AAAY,QAA3E,UAAiB,CAAU,EAA7B,EAAiC,IAAI,CAAC,aAAa,GAAGC,8BAAqB,CAAC,CAAC,CAAC,CAAC,EAAE;AAChF;AAA0B;AAER,KAJnB,CAAA,CAA4D;AAC5D;AAAQ;AACa;AAEA;AAAQ;AAAQ;AACQ;AAAmC;AAG3E;AAAmB;AAAQ,IAG9B,OAAF,CAAA,SAAA,CAAA,QAAU;AAAO;AAGd;AAE4B;AAChB;AAAmB;AAAQ,IANxC,UAAS,QAAqB,EAAhC;AAAE,QACE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACtB,YAAM,MAAM,2BAA2B,EAAE,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AACzC,YAAM,MAAM,+BAA+B,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACzD,SAAK;AACL,QAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC9C,KAAG,CAAH;AAAC;AAEG;AAEJ;AACE;AACE;AAAQ;AAIa;AAA6C;AAC7C;AACnB;AAAQ,IANZ,OAAF,CAAA,SAAA,CAAA,UAAY;AAAO;AAIa;AAC3B;AAA2B;AACnB;AAAQ,IANnB,UAAW,QAAqB,EAAlC;AAAE,QACE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvC,KAAG,CAAH;AAAC;AAEqE;AAChE;AAEN;AAA2B;AACd;AAAQ,IAHnB,OAAF,CAAA,SAAA,CAAA,IAAM;AAAO;AAEN;AACN;AAAmB;AAAQ,IAH1B,UAAK,QAAqB,EAA5B;AAAE,QACE,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,EAAE,EAAE;AACpC,YAAM,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACpE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAC3D,SAAK;AACL,QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;AAC3E,KAAG,CAAH;AAAC;AAEgG;AAC3F;AAGD;AAA2B;AAAmB;AAAQ,IAHzD,OAAF,CAAA,SAAA,CAAA,oBAAsB;AAAO;AAGD;AAA2B;AAAmB;AACnE,IAJL,UAAqB,QAAqB,EAA5C;AAAE,QACE,IAAI,CAAC,QAAQ,EAAE;AAAE,YAAA,OAAO,EAAE,CAAC;AAAC,SAAC;AACjC;AAEG;AAAyB,QAA5B,IAAU,YAAY,GAAG,QAAQ,CAAC,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAlG;AAAC;AAAyB,QAC1B,IAAQ,kBAAkB,GAAG,qBAAqB,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAA9F;AAAC;AAA0D;AAAyB,QAGpF,IAAQ,kBAAkB,GAAG,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAA3E;AAAC,QACG,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;AAAE,YAAA,kBAAkB,GAAG,CAAC,CAAC;AAAC,SAAC;AACpF,QAAI,OAAO,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;AAClD,KAAG,CAAH;AAAC;AAEG;AACI;AAAQ,IADd,OAAF,CAAA,SAAA,CAAA,QAAU;AACR;AAAmB;AACrB,IAFE,YAAF;AAAE,QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC5B,KAAG,CAAH;AAAC;AAEG;AACC;AAAQ,IADX,OAAF,CAAA,SAAA,CAAA,WAAa;AACX;AAAmB;AAAQ,IAD3B,YAAF;AAAE,QACE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC9B,KAAG,CAAH;AAAC;AAEG;AACC;AAAQ,IADX,OAAF,CAAA,SAAA,CAAA,WAAa;AACX;AAAmB;AAAQ,IAD3B,YAAF;AAAE,QACE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;AAClC,KAAG,CAAH,AAnGK;AAAC;IALN,EAAA,IAAA,EAACC,cAAS,EAAV,IAAA,EAAA,CAAW,sBACT,QAAQ,jEAI2B,QASrC,MAAA,EAAA,CAAA,EAAA,IAAA,EAAGC,UAAK,EAAR,IAAA,EAAA,CAAS,eAAe,EAAxB,EAAA,CAAA;CAbY,WAAW,sBACrB,QAAQ,EAAE,SAAS,rDAYnB,QAMF,KAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,IAAA,EAAA,CAAS,cAAc,EAAvB,EAAA,CAAA;WAjBE,MAAM,EAAE,CAAC,2BAA2B,CAAC,kBACtC,EAAD,EAAA,tEAgBE,QAGF,SAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,IAAA,EAAA,CAAS,kBAAkB,EAA3B,EAAA,CAAA;AAAE,QAcF,YAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,IAAA,EAAA,CAAS,qBAAqB,EAA9B,EAAA,CAAA;AAAE,QAMF,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGC,WAAM,EAAT,IAAA,EAAA,CAAU,eAAe,EAAzB,EAAA,CAAA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IA8DR,OAAA,OAAC,CAAD;AAAC,CAAA,CApG4B,iBAAiB,CAoG9C,CAAA,CAAC;AACD;AACG;AAA6F;AAC7E;AAA2B;AACvC;AADP,SAAS,qBAAqB,CAAC,KAAqB,EACrB,YAAqB,EADpD;AAAE;AAAqB,IAEvB,IAAM,SAAS,GAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAlD;AAAC,IACC,IAAI,KAAK,IAAI,MAAM,EAAE;AAAE,QAAA,SAAS,CAAC,OAAO,EAAE,CAAC;AAAC,KAAC;AAC/C,IAAE,IAAI,CAAC,YAAY,EAAE;AAAE,QAAA,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAAC,KAAC;AAC5C,IACE,OAAO,SAAS,CAAC;AACnB,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqH;AAAI;ACjKhK,IAAM,yBAAyB,GAAGC,yBAAkB,CAAC,QAAQ,GAAG,GAAG;AACnE,IAAkCC,sBAAe,CAAC,cAAc,CAAhE;AAAC;AAAI;AAA+B;AAAkB;AAEtD;AAIA,IAAa,iBAAiB,GAO1B;AACJ;AAAQ;AACF;AAAQ,IAAZ,SAAS,EAAEC,kBAAO,CAAC,WAAW,EAAE;AAClC,QAAIC,gBAAK,CAAC,iBAAiB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,iBAAiB,EAAC,CAAC,CAAC;AACnE;AACI,QAAAD,gBAAK,CAAC,mBAAmB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC,CAAC;AACtE,QAAIC,qBAAU,CAAC,4BAA4B,EAAEC,kBAAO,CAAC,yBAAyB,CAAC,CAAC;AAChF,KAAG,CAAC;AACJ;AACO;AACF;AAAQ,IAAX,WAAW,EAAEJ,kBAAO,CAAC,aAAa,EAAE;AACtC,QAAIC,gBAAK,CAAC,iBAAiB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;AAClE,QAAID,gBAAK,CAAC,mBAAmB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC,CAAC;AACnE,QAAIC,qBAAU,CAAC,4BAA4B,EAAEC,kBAAO,CAAC,yBAAyB,CAAC,CAAC;AAChF,KAAG,CAAC;AACJ;AACO;AACF;AAAQ,IAAX,YAAY,EAAEJ,kBAAO,CAAC,cAAc,EAAE;AACxC,QAAIC,gBAAK,CAAC,iBAAiB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC,CAAC;AACjE,QAAID,gBAAK,CAAC,mBAAmB,EAAEC,gBAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;AACpE,QAAIC,qBAAU,CAAC,4BAA4B,EAAEC,kBAAO,CAAC,yBAAyB,CAAC,CAAC;AAChF,KAAG,CAAC;AACJ;AACO;AACF;AAAQ,IAAX,YAAY,EAAEJ,kBAAO,CAAC,cAAc,EAAE;AACxC,QAAIC,gBAAK,CAAC,uCAAuC,EAAEC,gBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;AACvE,QAAID,gBAAK,CAAC,iCAAiC,EAAEC,gBAAK,CAAC,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC;AACnE,QAAID,gBAAK,CAAC,2EAA2E,EAC7EC,gBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;AAC5B;AACI,QAAAC,qBAAU,CAAC,wDAAwD,EAAEC,kBAAO,CAAC,KAAK,CAAC,CAAC;AACxF,QAAID,qBAAU,CAAC,SAAS,EAAEC,kBAAO,CAAC,yBAAyB,CAAC,CAAC;AAC7D,KAAG,CAAC;AACJ;AAEC;AACE;AACE;AACE;AACE;AAEJ;AAAQ,IAAX,aAAa,EAAEJ,kBAAO,CAAC,eAAe,EAAE;AAC1C;AACI,QAAAG,qBAAU,CAAC,wCAAwC,EAC/CC,kBAAO,CAAC,yBAAyB,EAAEC,oBAAS,CAAC;AACrD,YAAUH,gBAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC;AAChD,YAAUA,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;AAC7C,SAAS,CAAC,CAAC,CAAC;AACZ;AACI,QAAAC,qBAAU,CAAC,wCAAwC,EAC/CC,kBAAO,CAAC,yBAAyB,EAAEC,oBAAS,CAAC;AACrD,YAAUH,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;AAC7C,YAAUA,gBAAK,CAAC,EAAC,SAAS,EAAE,iBAAiB,EAAC,CAAC;AAC/C,SAAS,CAAC,CAAC,CAAC;AACZ;AACI,QAAAC,qBAAU,CAAC,sCAAsC,EAC7CC,kBAAO,CAAC,yBAAyB,EAAEC,oBAAS,CAAC;AACrD,YAAUH,gBAAK,CAAC,EAAC,SAAS,EAAE,iBAAiB,EAAC,CAAC;AAC/C,YAAUA,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;AAC7C,SAAS,CAAC,CAAC,CAAC;AACZ;AACI,QAAAC,qBAAU,CAAC,sCAAsC,EAC7CC,kBAAO,CAAC,yBAAyB,EAAEC,oBAAS,CAAC;AACrD,YAAUH,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;AAC7C,YAAUA,gBAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC;AAChD,SAAS,CAAC,CAAC,CAAC;AACZ,QAAID,gBAAK,CAAC,wEAAwE,EAC1EC,gBAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC,CAAC;AAC5C,QAAID,gBAAK,CAAC,oCAAoC,EACtCC,gBAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC,CAAC;AAC/C,QAAID,gBAAK,CAAC,iCAAiC,EACnCC,gBAAK,CAAC,EAAC,SAAS,EAAE,iBAAiB,EAAC,CAAC,CAAC;AAC9C,KAAG,CAAC;AACJ;AACO;AACF;AAAQ,IAAX,aAAa,EAAEF,kBAAO,CAAC,eAAe,EAAE;AAC1C,QAAIG,qBAAU,CAAC,SAAS,EAAE;AAC1B,YAAMG,gBAAK,CAAC,IAAI,EAAEC,uBAAY,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;AACnD,SAAK,CAAC;AACN,KAAG,CAAC;AACJ,CAAC,CAAD;AAAC;AAAC;AACC;AAAkC;AAAqH;AAAI;AAAI;AAA2F;AAAoC;AClGjS,IAAA,iBAAA,kBAAA,YAAA;AAAE,IAAF,SAAA,iBAAA,GAAA;AAAE;AAAY;AAGa;AACT;AAAY,QAEnB,IAAX,CAAA,OAAkB,GAAkB,IAAIhB,YAAO,EAAQ,CAAC;AACxD;AACW;AACE;AAAY,QAAvB,IAAF,CAAA,eAAiB;AAAQ;AACb;AAAuB;AAGjC,QAJkB,UAAC,EAAU,EAA/B;AAAE,YACE,OAAO,qBAAX,GAAiC,EAAI,CAAC;AACtC,SAAG,CAAH,CAAG;AACH,KAAC,AAZO;6CAAR,EAAA,IAAA,EAACiB,eAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA,vGAAS;;;;;;gDAMR;AAAC,IArBF,OAAA,iBAAA,CAAA;AAAC,CA2BA,EAAD,CAAA,CAAC;AACD;AAAI;AACH;AAAyB;AAAe;AAAzC,SAAgB,qCAAqC,CAAC,UAA6B,EAAnF;AAAE,IACA,OAAO,UAAU,IAAI,IAAI,iBAAiB,EAAE,CAAC;AAC/C,CAAC;AACD;AACG;AACH;AAAa;AAAb,IAAa,6BAA6B,GAAG;AAC7C;AACE,IAAA,OAAO,EAAE,iBAAiB;AAC5B,IAAE,IAAI,EAAE,CAAC,CAAC,IAAIC,aAAQ,EAAE,EAAE,IAAIC,aAAQ,EAAE,EAAE,iBAAiB,CAAC,CAAC;AAC7D,IAAE,UAAU,EAAE,qCAAqC;AACnD,CAAC,CAAD;AAAC;AAAC;AACC;AAAkC;AAAqH;AAAI;AAAuD;AAAI;AAAkB;ACT3O;AAAK;AAC4B;AAAI;AAAkB;AAAI;AAC1B,IAFjC,SAAA,iBAAA,GAAA;AAAE,KAAwB;AAC1B,IADyB,OAAzB,iBAA0B,CAA1B;AAAC,CAAyB,EAA1B,CAAA,CAA0B;AAC1B;AAAA,IAAM,uBAAuB,GACzBrB,oBAAa,CAAC,iBAAiB,CAAC,CADpC;AAAC;AAAI;AACe;AAGK;AAAG;AACb;AAAG;AACG;AAAsB;AA+B3C,IAAA,aAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IA0BiCC,SAAnC,CAAA,aAAA,EAAA,MAAA,CAAA,CAA0D;AAC1D,IA0CE,SAAF,aAAA,CAAqB,KAAwB,EAC/B,iBAAoC,EACjB,KAAc,EAEtB,UAAkC,EAJ3D;AAAE,QAAA,IAAF,KAAA;AAAI;AAEI;AAC4C;AAErC;AAAqC,QAIhD,MAAJ,CAAA,IAAA,CAAA,IAAA,CAAW,IAAX,IAAA,CAoBG;AACH,QA9BqB,KAArB,CAAA,KAA0B,GAAL,KAAK,CAAmB;AAAC,QAEb,KAAjC,CAAA,KAAsC,GAAL,KAAK,CAAS;AAAC,QAEvB,KAAzB,CAAA,UAAmC,GAAV,UAAU,CAAwB;AAAC;AACnD;AACM;AACG;AAAY,QA1C5B,KAAF,CAAA,kBAAoB,GAAY,KAAK,CAAC;AACtC;AAEK;AAAoF;AACvF,QAMA,KAAF,CAAA,eAAiB,GAAkB,EAAE,CAAC;AACtC;AAEK;AAEA;AAAY,QAAf,KAAF,CAAA,0BAA4B,GAAG,KAAK,CAAC;AACrC;AAEK;AAAqE;AAAY,QAM3E,KAAX,CAAA,aAAwB,GAAuB,OAAO,CAAC;AACvD,QAqBI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,MAAM,wCAAwC,EAAE,CAAC;AACvD,SAAK;AACL,QACI,KAAI,CAAC,qBAAqB,GAAGqB,UAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC;AAC5F,aAAS,SAAS;AAAM;AACJ;AAAY,QADb,YAAnB;AAAE,YACQ,IAAI,KAAI,CAAC,SAAS,EAAE,EAAE;AAChC,gBAAY,KAAI,CAAC,qBAAqB,EAAE,CAAC;AACzC,aAAW;AACX;AAEC,YAAS,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,KAAK,QAAQ,EAAE;AAC5F,gBAAY,KAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;AACpD,gBAAY,KAAI,CAAC,4BAA4B,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAI,CAAC,eAAe,EAAC,CAAC,CAAC;AACpG,aAAW;AACX,YACU,iBAAiB,CAAC,YAAY,EAAE,CAAC;AAC3C,SAAS,EAAC,CAAC;AACX;AAGE,KAHC;AACH,IAnCE,MAAF,CAAA,cAAA,CACM,aADN,CAAA,SAAA,EAAA,cACkB,EADlB;AAAE;AAEyB;AAAiB;AAGf;AACxB;AAAY,QANf,YAAF,EACgC,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE;AAC3D;AAAiB;AAAwB;AAAuB;AAC7D,QADF,UAAiB,CAAC,EAApB,EAAwB,IAAI,CAAC,aAAa,GAAGjB,8BAAqB,CAAC,CAAC,CAAC,CAAC,EAAE;AACvE;AAA0B;AAER,KAJnB,CAAA,CAA4D;AAC5D;AAAQ;AAAmB;AAAQ,IAkCjC,aAAF,CAAA,SAAA,CAAA,QAAU;AACR;AAAmB;AAAQ,IAD3B,YAAF;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE;AACrC,YAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACrC,SAAK;AACL;AAEG,QAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,4BAA4B,CAC7B,EAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAC,CAAC,CAAC;AACvE,QACI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAG,CAAH;AAAC;AAEG;AACC;AAAQ,IADX,aAAF,CAAA,SAAA,CAAA,WAAa;AACX;AAAmB;AAAQ,IAD3B,YAAF;AAAE,QACE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAChC,QAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;AAC7C,KAAG,CAAH;AAAC;AAEG;AAEJ;AACE;AACE;AAAQ;AACwD;AAGnC;AAEd;AACV;AAAQ,IAPf,aAAF,CAAA,SAAA,CAAA,wBAA0B;AAAO;AAExB;AAIK;AACH;AAAmB;AAC5B,IARA,UAAyB,OAAgB,EAA3C;AAAE;AACqC,QACnC,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,OAAO,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AAClD,QACI,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;AACtC,QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;AAC3B,YAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACnC,YAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACnC,gBAAQ,IAAI,CAAC,4BAA4B,CAAC,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;AAC9F,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,4BAA4B,CAAC,EAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAC,CAAC,CAAC;AAC9F,aAAO;AACP,SAAK;AACL,KAAG,CAAH;AAAC;AAEG;AAEJ;AACE;AACE;AACE;AAAQ;AAGX;AACK;AAA6B;AAA4B;AAChD;AAAQ,IALvB,aAAF,CAAA,SAAA,CAAA,4BAA8B;AAAO;AAGX;AACK;AAA6B;AACvC;AAAmB;AACnC,IANH,UAA6B,SAAmC,EAAlE;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC;AAEG;AACI,QAAH,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,UAAU,GAAG,EAAC,OAAO,EAAE,SAAS,CAAC,OAAO,EAAC,CAAC;AACrD,SAAK;AACL,KAAG,CAAH;AAAC;AAE4E;AACvE;AAGiB;AAET;AAAQ,IALpB,aAAF,CAAA,SAAA,CAAA,YAAc;AACZ;AAIQ;AAAmB;AAAQ,IALnC,YAAF;AAAE,QACE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AACvC,QACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B;AAEG,QAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,QAAQ,EAAE;AACpF,YAAM,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;AAC7C,SAAK;AACL;AAEG;AACI;AAAyB,QAAhC,IAAU,SAAS,GAA6B,IAAI,CAAC,SAAS,EAAE;AAChE,YAAQ,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAC;AAC5D,YAAQ,EAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAC,CAA5D;AAAC,QACG,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;AACjD,QACI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACpC,KAAG,CAAH;AAAC;AAE8F;AACzF;AAEoC;AAAmB;AAAQ,IAFnE,aAAF,CAAA,SAAA,CAAA,SAAW;AACT;AACoD;AAAmB;AAEzE,IAJE,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;AACvC,aAAS,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC;AAC5E,KAAG,CAAH;AAAC;AAEoF;AAC/E;AACuD;AAG5D;AAAQ,IAJP,aAAF,CAAA,SAAA,CAAA,uBAAyB;AACvB;AAGM;AAAmB;AAAQ,IAJjC,YAAF;AAAE,QACE,OAAO,EAAX,IAAc,IAAI,CAAC,SAAS,EAAE,GAAG,SAAS,GAAG,EAAE,CAA/C,GAAkD,IAAI,CAAC,eAAiB,CAAC;AACzE,KAAG,CAAH;AAAC;AAE+D;AAC1D;AACuC;AAC9B;AAAQ,IAFrB,aAAF,CAAA,SAAA,CAAA,kBAAoB;AAClB;AACe;AAAmB;AAAQ,IAF1C,YAAF;AAAE;AACA,QAAF,IAAU,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAA/C;AAAC,QACG,OAAO,CAAC,SAAS,GAAM,SAAS,GAApC,MAA0C,GAAG,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;AAC3E,KAAG,CAAH;AAAC;AAEG;AAEJ;AACE;AACE;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AAGL;AAOjB;AAEI;AACG;AACC;AAKR;AAG0B;AAEd;AAAmB;AAAQ,IAxBvC,aAAF,CAAA,SAAA,CAAA,qBAAuB;AACrB;AAEuB;AAQvB;AACU;AACG;AACC;AAKR;AAG0B;AAEd;AAAmB;AAAQ,IAxB7C,YAAF;AAAE,QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,EAAE;AAC3C,YAAQ,IAAI,CAAC,KAAK,CAAC,SAAS;AAC5B,aAAS,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzC,KAAG,CAAH;AAAC;AAEG;AACC;AAAQ,IADX,aAAF,CAAA,SAAA,CAAA,WAAa;AACX;AAAmB;AAAQ,IAD3B,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;AAChD,KAAG,CAAH;AAAC;AAEG;AAEJ;AACE;AACE;AAEJ;AAAQ;AAAQ;AAGsB;AAGyB;AAK/C;AAA6B;AAAmB;AAAQ,IAXtE,aAAF,CAAA,SAAA,CAAA,qBAAuB;AACrB;AAEkD;AAI7C;AAIuB;AAA6B;AAAmB;AAAQ,IAXpF,YAAF;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;AAAE,YAAA,OAAO,IAAI,CAAC;AAAC,SAAC;AAC3C,QACI,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,GAAG,WAAW,GAAG,YAAY,CAAC;AACtE,KAAG,CAAH;AAAC;AAEmE;AAC9D;AAEH;AAEa;AAAQ,IAJtB,aAAF,CAAA,SAAA,CAAA,YAAc;AACZ;AAGU;AAAmB;AAAQ,IAJrC,YAAF;AAAE,QACE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACnD,KAAG,CAAH,AA1MA;AAAC;kBAxBD,EAAA,IAAA,EAACkB,cAAS,EAAV,IAAA,EAAA,CAAW,CAAX,lDA0BiB;AA1BjB,EAAA,mBAAA,rBA2BgB;MA1Bd,QAAQ,EAAE,eAAZ,/BA0BqD;WAzBnD,QAAQ,EAAE,rBA0BuB,QAvEnC,EAAA,IAAA,EAAQ,OAAR,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,aAAA,EAAA,CAAA,EAAA;AAAE,QAfF,EAAA,IAAA,EAAE,SAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,WAAA,EAAA,IAAA,EAAA,CAAA,4BAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAAN,aAAA,EAAA,CAAA,EAAA;AAAC,KAWD,CAAA,EAAA,CAAA;AAAC,IAuHD,aAAA,CAAA,cAAA,GAAA;AAAE;AACA;AAA+C,QAlBjD,KAAA,EAAA,CAAA,EAAA,IAAA,EAAAb,UAAA,EAAA,CAAA;AAAE,QAGF,YAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,UAAA,EAAA,CAAA;AAAC,KAGD;;;4NA3DA,sBACE,MAAF,EAAU,CAAV;;;;;;;;;;;;;;MAAA,CAAA,sBACE,IAAF,EAAA,0BACA,SAAA,EAAA,gBAAA,0BACM,cAAN,EAAA;yBAAA;sBACI,aAAJ,EAAA,gCAAA,0BACI,cAAc,EAAE;4BAApB;yBACI,kBAAJ,EAAA;eAAA,0BACI,kCAAJ,EAAA,eAAA,uBACA,sBACA,aAAA,EAAAiB,sBAAA,CAAA,IAAA,sBACA,eAAA,EAAAC,4BAAA,CAAA,MAAA,sBACE,MAAF,EAAA,CAAA,UAAA,CAAA,sBACE,UAAF,EAAA,0BACA,iBAAA,CAAA,SAAA,0BACA,iBAAA,CAAA,WAAA,0BACI,iBAAiB,CAAC,YAAtB,0BACI,iBAAiB,CAAC,YAAtB,0BACI,iBAAiB,CAAC,aAAtB,0BACI,iBAAiB,CAAC,aAAtB,uBACA,kBACA,EAAA,EAAA,OACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAqCA;AAAC,IAGD,OAAA,aAAA,CAAA;AAAC;AACkB;AAAC;AAAI;AAAkC;AAIpD;AC3HN,IAAA,aAAA,kBAAA,YAAA;AAAE,IAAF,SAAA,aAAA,GAAA;AAAE,KAM2B;yCAN7B,EAAA,IAAA,EAACE,aAAQ,EAAT,IAAA,EAAA;AAAU,sBACR,OAAO,EAAE,CAACC,mBAAY,CAAC,sBACvB,OAAO,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,sBACjC,YAAY,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,sBACtC,SAAS,EAAE,CAAC;mBAA6B,CAAC,kBAC3C,EAAD,EAAA;;;;;;;;;gDACK;AAAC,IAAsB,OAA5B,aAA6B,CAA7B;AAAC,CAA4B,EAA7B,CAAA;AAAE;AAAC;AACS;AAAuC;AAAuF;AAA+C;AAAuE;AAA2B;AAA+C;AAAC;AAA+D;AAAC;AAAM","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getSortDuplicateSortableIdError(id: string): Error {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n\n/** @docs-private */\nexport function getSortHeaderNotContainedWithinSortError(): Error {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n\n/** @docs-private */\nexport function getSortHeaderMissingIdError(): Error {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n\n/** @docs-private */\nexport function getSortInvalidDirectionError(direction: string): Error {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasInitialized,\n  HasInitializedCtor,\n  mixinDisabled,\n  mixinInitialized,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {SortDirection} from './sort-direction';\nimport {\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n  getSortInvalidDirectionError,\n} from './sort-errors';\n\n/** Interface for a directive that holds sorting state consumed by `MatSortHeader`. */\nexport interface MatSortable {\n  /** The id of the column being sorted. */\n  id: string;\n\n  /** Starting sort direction. */\n  start: 'asc' | 'desc';\n\n  /** Whether to disable clearing the sorting state. */\n  disableClear: boolean;\n}\n\n/** The current sort state. */\nexport interface Sort {\n  /** The id of the column being sorted. */\n  active: string;\n\n  /** The sort direction. */\n  direction: SortDirection;\n}\n\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {}\nconst _MatSortMixinBase: HasInitializedCtor & CanDisableCtor & typeof MatSortBase =\n    mixinInitialized(mixinDisabled(MatSortBase));\n\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\n@Directive({\n  selector: '[matSort]',\n  exportAs: 'matSort',\n  inputs: ['disabled: matSortDisabled']\n})\nexport class MatSort extends _MatSortMixinBase\n    implements CanDisable, HasInitialized, OnChanges, OnDestroy, OnInit {\n  /** Collection of all registered sortables that this directive manages. */\n  sortables = new Map<string, MatSortable>();\n\n  /** Used to notify any child components listening to state changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** The id of the most recently sorted MatSortable. */\n  @Input('matSortActive') active: string;\n\n  /**\n   * The direction to set when an MatSortable is initially sorted.\n   * May be overriden by the MatSortable's sort start.\n   */\n  @Input('matSortStart') start: 'asc' | 'desc' = 'asc';\n\n  /** The sort direction of the currently active MatSortable. */\n  @Input('matSortDirection')\n  get direction(): SortDirection { return this._direction; }\n  set direction(direction: SortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  private _direction: SortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   * May be overriden by the MatSortable's disable clear input.\n   */\n  @Input('matSortDisableClear')\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v: boolean) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  /** Event emitted when the user changes either the active sort or sort direction. */\n  @Output('matSortChange') readonly sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable: MatSortable): void {\n    if (!sortable.id) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id)) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable: MatSortable): void {\n    this.sortables.delete(sortable.id);\n  }\n\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable: MatSortable): void {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.emit({active: this.active, direction: this.direction});\n  }\n\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable: MatSortable): SortDirection {\n    if (!sortable) { return ''; }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n  ngOnInit() {\n    this._markInitialized();\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\n                               disableClear: boolean): SortDirection[] {\n  let sortOrder: SortDirection[] = ['asc', 'desc'];\n  if (start == 'desc') { sortOrder.reverse(); }\n  if (!disableClear) { sortOrder.push(''); }\n\n  return sortOrder;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  keyframes,\n  AnimationTriggerMetadata, query, animateChild,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE;\n\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nexport const matSortAnimations: {\n  readonly indicator: AnimationTriggerMetadata;\n  readonly leftPointer: AnimationTriggerMetadata;\n  readonly rightPointer: AnimationTriggerMetadata;\n  readonly arrowOpacity: AnimationTriggerMetadata;\n  readonly arrowPosition: AnimationTriggerMetadata;\n  readonly allowChildren: AnimationTriggerMetadata;\n} = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [\n    state('active-asc, asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('active-desc, desc', style({transform: 'translateY(10px)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [\n    state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [\n    state('active-asc, asc', style({transform: 'rotate(45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: trigger('arrowOpacity', [\n    state('desc-to-active, asc-to-active, active', style({opacity: 1})),\n    state('desc-to-hint, asc-to-hint, hint', style({opacity: .54})),\n    state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n        style({opacity: 0})),\n    // Transition between all states except for immediate transitions\n    transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n    transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: trigger('arrowPosition', [\n    // Hidden Above => Hint Center\n    transition('* => desc-to-hint, * => desc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(-25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Below\n    transition('* => hint-to-desc, * => active-to-desc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(25%)'})\n        ]))),\n    // Hidden Below => Hint Center\n    transition('* => asc-to-hint, * => asc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Above\n    transition('* => hint-to-asc, * => active-to-asc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(-25%)'})\n        ]))),\n    state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n        style({transform: 'translateY(0)'})),\n    state('hint-to-desc, active-to-desc, desc',\n        style({transform: 'translateY(-25%)'})),\n    state('hint-to-asc, active-to-asc, asc',\n        style({transform: 'translateY(25%)'})),\n  ]),\n\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: trigger('allowChildren', [\n    transition('* <=> *', [\n      query('@*', animateChild(), {optional: true})\n    ])\n  ]),\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable({providedIn: 'root'})\nexport class MatSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** ARIA label for the sorting button. */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n}\n/** @docs-private */\nexport function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n\n/** @docs-private */\nexport const MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatSort, MatSortable} from './sort';\nimport {matSortAnimations} from './sort-animations';\nimport {SortDirection} from './sort-direction';\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\nimport {MatSortHeaderIntl} from './sort-header-intl';\n\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {}\nconst _MatSortHeaderMixinBase: CanDisableCtor & typeof MatSortHeaderBase =\n    mixinDisabled(MatSortHeaderBase);\n\n/**\n * Valid positions for the arrow to be in for its opacity and translation. If the state is a\n * sort direction, the position of the arrow will be above/below and opacity 0. If the state is\n * hint, the arrow will be in the center with a slight opacity. Active state means the arrow will\n * be fully opaque in the center.\n *\n * @docs-private\n */\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\n\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * @docs-private\n */\nexport interface ArrowViewStateTransition {\n  fromState?: ArrowViewState;\n  toState: ArrowViewState;\n}\n\n/** Column definition associated with a `MatSortHeader`. */\ninterface MatSortHeaderColumnDef {\n  name: string;\n}\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-sort-header]',\n  exportAs: 'matSortHeader',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    '(click)': '_handleClick()',\n    '(mouseenter)': '_setIndicatorHintVisible(true)',\n    '(longpress)': '_setIndicatorHintVisible(true)',\n    '(mouseleave)': '_setIndicatorHintVisible(false)',\n    '[attr.aria-sort]': '_getAriaSortAttribute()',\n    '[class.mat-sort-header-disabled]': '_isDisabled()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    matSortAnimations.indicator,\n    matSortAnimations.leftPointer,\n    matSortAnimations.rightPointer,\n    matSortAnimations.arrowOpacity,\n    matSortAnimations.arrowPosition,\n    matSortAnimations.allowChildren,\n  ]\n})\nexport class MatSortHeader extends _MatSortHeaderMixinBase\n    implements CanDisable, MatSortable, OnDestroy, OnInit {\n  private _rerenderSubscription: Subscription;\n\n  /**\n   * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n   * provide an affordance that the header is sortable by showing on focus and hover.\n   */\n  _showIndicatorHint: boolean = false;\n\n  /**\n   * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n   * position through the animation. If animations are currently disabled, the fromState is removed\n   * so that there is no animation displayed.\n   */\n  _viewState: ArrowViewStateTransition;\n\n  /** The direction the arrow should be facing according to the current state. */\n  _arrowDirection: SortDirection = '';\n\n  /**\n   * Whether the view state animation should show the transition between the `from` and `to` states.\n   */\n  _disableViewStateAnimation = false;\n\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  @Input('mat-sort-header') id: string;\n\n  /** Sets the position of the arrow that displays when sorted. */\n  @Input() arrowPosition: 'before' | 'after' = 'after';\n\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\n  @Input() start: 'asc' | 'desc';\n\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n  @Input()\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  constructor(public _intl: MatSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _sort: MatSort,\n              @Inject('MAT_SORT_HEADER_COLUMN_DEF') @Optional()\n                  public _columnDef: MatSortHeaderColumnDef) {\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    super();\n\n    if (!_sort) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n        .subscribe(() => {\n          if (this._isSorted()) {\n            this._updateArrowDirection();\n          }\n\n          // If this header was recently active and now no longer sorted, animate away the arrow.\n          if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = false;\n            this._setAnimationTransitionState({fromState: 'active', toState: this._arrowDirection});\n          }\n\n          changeDetectorRef.markForCheck();\n        });\n  }\n\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\n    this._updateArrowDirection();\n    this._setAnimationTransitionState(\n        {toState: this._isSorted() ? 'active' : this._arrowDirection});\n\n    this._sort.register(this);\n  }\n\n  ngOnDestroy() {\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /**\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\n   */\n  _setIndicatorHintVisible(visible: boolean) {\n    // No-op if the sort header is disabled - should not make the hint visible.\n    if (this._isDisabled() && visible) { return; }\n\n    this._showIndicatorHint = visible;\n\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({fromState: this._arrowDirection, toState: 'hint'});\n      } else {\n        this._setAnimationTransitionState({fromState: 'hint', toState: this._arrowDirection});\n      }\n    }\n  }\n\n  /**\n   * Sets the animation transition view state for the arrow's position and opacity. If the\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n   * no animation appears.\n   */\n  _setAnimationTransitionState(viewState: ArrowViewStateTransition) {\n    this._viewState = viewState;\n\n    // If the animation for arrow position state (opacity/translation) should be disabled,\n    // remove the fromState so that it jumps right to the toState.\n    if (this._disableViewStateAnimation) {\n      this._viewState = {toState: viewState.toState};\n    }\n  }\n\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _handleClick() {\n    if (this._isDisabled()) { return; }\n\n    this._sort.sort(this);\n\n    // Do not show the animation if the header was already shown in the right position.\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n      this._disableViewStateAnimation = true;\n    }\n\n    // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n    // the direction it is facing.\n    const viewState: ArrowViewStateTransition = this._isSorted() ?\n        {fromState: this._arrowDirection, toState: 'active'} :\n        {fromState: 'active', toState: this._arrowDirection};\n    this._setAnimationTransitionState(viewState);\n\n    this._showIndicatorHint = false;\n  }\n\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\n  _getArrowDirectionState() {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n\n  /** Returns the arrow position state (opacity, translation). */\n  _getArrowViewState() {\n    const fromState = this._viewState.fromState;\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n  }\n\n  /**\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n   * active sorted direction. The reason this is updated through a function is because the direction\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n   * preserving its direction, even though the next sort direction is actually different and should\n   * only be changed once the arrow displays again (hint or activation).\n   */\n  _updateArrowDirection() {\n    this._arrowDirection = this._isSorted() ?\n        this._sort.direction :\n        (this.start || this._sort.start);\n  }\n\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) { return null; }\n\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatSortHeader} from './sort-header';\nimport {MatSort} from './sort';\nimport {MAT_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MatSort, MatSortHeader],\n  declarations: [MatSort, MatSortHeader],\n  providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n})\nexport class MatSortModule {}\n"]}