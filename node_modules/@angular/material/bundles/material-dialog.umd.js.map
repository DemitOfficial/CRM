{"version":3,"file":"material-dialog.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/dialog/dialog-config.ts","../../src/material/dialog/dialog-animations.ts","../../src/material/dialog/dialog-container.ts","../../src/material/dialog/dialog-ref.ts","../../src/material/dialog/dialog.ts","../../src/material/dialog/dialog-content-directives.ts","../../src/material/dialog/dialog-module.ts"],"names":["state","style","transition","animate","trigger","tslib_1.__extends","EventEmitter","portal","Component","ViewEncapsulation","ChangeDetectorRef","Optional","Inject","DOCUMENT","Subject","filter","take","ESCAPE","InjectionToken","overlay","Overlay","defer","startWith","OverlayConfig","PortalInjector","ComponentPortal","TemplateRef","TemplatePortal","Directionality","observableOf","Injectable","Injector","Location","SkipSelf","OverlayContainer","tslib_1.__assign","Directive","ElementRef","Input","NgModule","CommonModule","OverlayModule","PortalModule","MatCommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from '@angular/cdk/overlay';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class MatDialogConfig<D = any> {\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** The ARIA role of the dialog element. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class for the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop, */\n  backdropClass?: string = '';\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Width of the dialog. */\n  width?: string = '';\n\n  /** Height of the dialog. */\n  height?: string = '';\n\n  /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\n  maxWidth?: number | string = '80vw';\n\n  /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /** Position overrides. */\n  position?: DialogPosition;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Layout direction for the dialog's content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus?: boolean = true;\n\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy?: ScrollStrategy;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\nconst animationBody = [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n  state('enter', style({transform: 'none'})),\n  transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n      style({transform: 'none', opacity: 1}))),\n  transition('* => void, * => exit',\n      animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n];\n\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nexport const matDialogAnimations: {\n  readonly dialogContainer: AnimationTriggerMetadata;\n  readonly slideDialog: AnimationTriggerMetadata;\n} = {\n  /** Animation that is applied on the dialog container by defalt. */\n  dialogContainer: trigger('dialogContainer', animationBody),\n\n  /** @deprecated @breaking-change 8.0.0 Use `matDialogAnimations.dialogContainer` instead. */\n  slideDialog: trigger('slideDialog', animationBody)\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AnimationEvent} from '@angular/animations';\nimport {matDialogAnimations} from './dialog-animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  CdkPortalOutlet,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {MatDialogConfig} from './dialog-config';\n\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nexport function throwMatDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matDialogAnimations.dialogContainer],\n  host: {\n    'class': 'mat-dialog-container',\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '_id',\n    '[attr.role]': '_config.role',\n    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n    '[attr.aria-label]': '_config.ariaLabel',\n    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n    '[@dialogContainer]': '_state',\n    '(@dialogContainer.start)': '_onAnimationStart($event)',\n    '(@dialogContainer.done)': '_onAnimationDone($event)',\n  },\n})\nexport class MatDialogContainer extends BasePortalOutlet {\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** ID of the element that should be considered as the dialog's label. */\n  _ariaLabelledBy: string | null;\n\n  /** ID for the container DOM element. */\n  _id: string;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    /** The dialog configuration. */\n    public _config: MatDialogConfig) {\n\n    super();\n    this._ariaLabelledBy = _config.ariaLabelledBy || null;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the dialog opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Saves a reference to the element that was focused before the dialog was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the dialog immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Callback, invoked when an animation on the host starts. */\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {GlobalPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Location} from '@angular/common';\nimport {Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nexport class MatDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    public _containerInstance: MatDialogContainer,\n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location?: Location,\n    readonly id: string = `mat-dialog-${uniqueId++}`) {\n\n    // Pass the id along to the container.\n    _containerInstance._id = id;\n\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'enter'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'exit'),\n      take(1)\n    ).subscribe(() => this._overlayRef.dispose());\n\n    _overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      this._overlayRef.dispose();\n    });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n      .subscribe(() => this.close());\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'start'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._overlayRef.detachBackdrop();\n    });\n\n    this._containerInstance._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    let strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width: string = '', height: string = ''): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   * @deprecated Use `afterOpened` instead.\n   * @breaking-change 8.0.0\n   */\n  afterOpen(): Observable<void> {\n    return this.afterOpened();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   * @deprecated Use `beforeClosed` instead.\n   * @breaking-change 8.0.0\n   */\n  beforeClose(): Observable<R | undefined> {\n    return this.beforeClosed();\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\nimport {defer, Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MatDialogConfig} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\nimport {MatDialogRef} from './dialog-ref';\n\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const MAT_DIALOG_DATA = new InjectionToken<any>('MatDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const MAT_DIALOG_DEFAULT_OPTIONS =\n    new InjectionToken<MatDialogConfig>('mat-dialog-default-options');\n\n/** Injection token that determines the scroll handling while the dialog is open. */\nexport const MAT_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-dialog-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class MatDialog implements OnDestroy {\n  private _openDialogsAtThisLevel: MatDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<MatDialogRef<any>>();\n  private _ariaHiddenElements = new Map<Element, string|null>();\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): MatDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<MatDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  /**\n   * Stream that emits when a dialog has been opened.\n   * @deprecated Use `afterOpened` instead.\n   * @breaking-change 8.0.0\n   */\n  get afterOpen(): Subject<MatDialogRef<any>> {\n    return this.afterOpened;\n  }\n\n  get _afterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      this._afterAllClosed.pipe(startWith(undefined))) as Observable<any>;\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Optional() private _location: Location,\n      @Optional() @Inject(MAT_DIALOG_DEFAULT_OPTIONS) private _defaultOptions: MatDialogConfig,\n      @Inject(MAT_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() private _parentDialog: MatDialog,\n      private _overlayContainer: OverlayContainer) {\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\n   *     or a TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n\n    config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef,\n                                                      dialogContainer,\n                                                      overlayRef,\n                                                      config);\n\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): MatDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Creates the overlay into which the dialog will be loaded.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the OverlayRef for the created overlay.\n   */\n  private _createOverlay(config: MatDialogConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param dialogConfig The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  private _getOverlayConfig(dialogConfig: MatDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      direction: dialogConfig.direction,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight,\n      disposeOnNavigation: dialogConfig.closeOnNavigation\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  /**\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  private _attachDialogContainer(overlay: OverlayRef, config: MatDialogConfig): MatDialogContainer {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatDialogConfig, config]\n    ]));\n    const containerPortal =\n        new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector);\n    const containerRef = overlay.attach<MatDialogContainer>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created MatDialogContainer.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: MatDialogContainer,\n      overlayRef: OverlayRef,\n      config: MatDialogConfig): MatDialogRef<T, R> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef =\n        new MatDialogRef<T, R>(overlayRef, dialogContainer, this._location, config.id);\n\n    // When the dialog backdrop is clicked, we want to close it.\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\n          <any>{ $implicit: config.data, dialogRef }));\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param container Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: MatDialogConfig,\n      dialogRef: MatDialogRef<T>,\n      dialogContainer: MatDialogContainer): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n    // content are created out of the same ViewContainerRef and as such, are siblings for injector\n    // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n    // added to the injection tokens.\n    const injectionTokens = new WeakMap<any, any>([\n      [MatDialogContainer, dialogContainer],\n      [MAT_DIALOG_DATA, config.data],\n      [MatDialogRef, dialogRef]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: MatDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this._ariaHiddenElements.clear();\n        this._afterAllClosed.next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        let sibling = siblings[i];\n\n        if (sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')) {\n\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: MatDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(\n    config?: MatDialogConfig, defaultOptions?: MatDialogConfig): MatDialogConfig {\n  return {...defaultOptions, ...config};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ElementRef,\n} from '@angular/core';\nimport {MatDialog} from './dialog';\nimport {MatDialogRef} from './dialog-ref';\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: `button[mat-dialog-close], button[matDialogClose]`,\n  exportAs: 'matDialogClose',\n  host: {\n    '(click)': 'dialogRef.close(dialogResult)',\n    '[attr.aria-label]': 'ariaLabel || null',\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class MatDialogClose implements OnInit, OnChanges {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Dialog close input. */\n  @Input('mat-dialog-close') dialogResult: any;\n\n  @Input('matDialogClose') _matDialogClose: any;\n\n  constructor(\n    @Optional() public dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[mat-dialog-title], [matDialogTitle]',\n  exportAs: 'matDialogTitle',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n})\nexport class MatDialogTitle implements OnInit {\n  @Input() id = `mat-dialog-title-${dialogElementUid++}`;\n\n  constructor(\n    @Optional() private _dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this._dialogRef._containerInstance;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n})\nexport class MatDialogContent {}\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n})\nexport class MatDialogActions {}\n\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<HTMLElement>, openDialogs: MatDialogRef<any>[]) {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('mat-dialog-container')) {\n    parent = parent.parentElement;\n  }\n\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog} from './dialog';\nimport {MatDialogContainer} from './dialog-container';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from './dialog-content-directives';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n  ],\n  providers: [\n    MatDialog,\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MatDialogContainer],\n})\nexport class MatDialogModule {}\n"]}