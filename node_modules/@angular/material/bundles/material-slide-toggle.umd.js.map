{"version":3,"file":"material-slide-toggle.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/slide-toggle/slide-toggle-config.ts","../../src/material/slide-toggle/slide-toggle.ts","../../src/material/slide-toggle/slide-toggle-module.ts"],"names":["InjectionToken","NG_VALUE_ACCESSOR","forwardRef","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","tslib_1.__extends","EventEmitter","coerceBooleanProperty","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Attribute","NgZone","Inject","Optional","ANIMATION_MODULE_TYPE","Directionality","Input","Output","ViewChild","NgModule","MatRippleModule","MatCommonModule","ObserversModule","HAMMER_GESTURE_CONFIG","GestureConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n\n/** Default `mat-slide-toggle` options that can be overridden. */\nexport interface MatSlideToggleDefaultOptions {\n  /** Whether toggle action triggers value changes in slide toggle. */\n  disableToggleValue?: boolean;\n  /** Whether drag action triggers value changes in slide toggle. */\n  disableDragValue?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nexport const MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS =\n  new InjectionToken<MatSlideToggleDefaultOptions>('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({disableToggleValue: false, disableDragValue: false})\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HammerInput,\n  HasTabIndex, HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {\n  MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,\n  MatSlideToggleDefaultOptions\n} from './slide-toggle-config';\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n\n/** @docs-private */\nexport const MAT_SLIDE_TOGGLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlideToggle),\n  multi: true\n};\n\n/** Change event object emitted by a MatSlideToggle. */\nexport class MatSlideToggleChange {\n  constructor(\n    /** The source MatSlideToggle of the event. */\n    public source: MatSlideToggle,\n    /** The new `checked` value of the MatSlideToggle. */\n    public checked: boolean) { }\n}\n\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSlideToggleMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableRippleCtor &\n    CanDisableCtor &\n    typeof MatSlideToggleBase =\n        mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-slide-toggle',\n  exportAs: 'matSlideToggle',\n  host: {\n    'class': 'mat-slide-toggle',\n    '[id]': 'id',\n    // Needs to be `-1` so it can still receive programmatic focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.mat-checked]': 'checked',\n    '[class.mat-disabled]': 'disabled',\n    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '(focus)': '_inputElement.nativeElement.focus()',\n  },\n  templateUrl: 'slide-toggle.html',\n  styleUrls: ['slide-toggle.css'],\n  providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n  inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlideToggle extends _MatSlideToggleMixinBase implements OnDestroy, AfterContentInit,\n                                                                        ControlValueAccessor,\n                                                                        CanDisable, CanColor,\n                                                                        HasTabIndex,\n                                                                        CanDisableRipple {\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  private _uniqueId: string = `mat-slide-toggle-${++nextUniqueId}`;\n  private _required: boolean = false;\n  private _checked: boolean = false;\n\n  /** Whether the thumb is currently being dragged. */\n  private _dragging = false;\n\n  /** Previous checked state before drag started. */\n  private _previousChecked: boolean;\n\n  /** Width of the thumb bar of the slide-toggle. */\n  private _thumbBarWidth: number;\n\n  /** Percentage of the thumb while dragging. Percentage as fraction of 100. */\n  private _dragPercentage: number;\n\n  /** Reference to the thumb HTMLElement. */\n  @ViewChild('thumbContainer', {static: false}) _thumbEl: ElementRef;\n\n  /** Reference to the thumb bar HTMLElement. */\n  @ViewChild('toggleBar', {static: false}) _thumbBarEl: ElementRef;\n\n  /** Name value will be applied to the input element if present. */\n  @Input() name: string | null = null;\n\n  /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /** Used to set the aria-label attribute on the underlying input element. */\n  @Input('aria-label') ariaLabel: string | null = null;\n\n  /** Used to set the aria-labelledby attribute on the underlying input element. */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** Whether the slide-toggle is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the slide-toggle element is checked or not. */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value) {\n    this._checked = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** An event will be dispatched each time the slide-toggle changes its value. */\n  @Output() readonly change: EventEmitter<MatSlideToggleChange> =\n      new EventEmitter<MatSlideToggleChange>();\n\n  /**\n   * An event will be dispatched each time the slide-toggle input is toggled.\n   * This event is always emitted when the user toggles the slide toggle, but this does not mean\n   * the slide toggle's value has changed. The event does not fire when the user drags to change\n   * the slide toggle value.\n   */\n  @Output() readonly toggleChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * An event will be dispatched each time the slide-toggle is dragged.\n   * This event is always emitted when the user drags the slide toggle to make a change greater\n   * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n   * the user toggles the slide toggle to change its value.\n   */\n  @Output() readonly dragChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Returns the unique id for the visual hidden input. */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Reference to the underlying input element. */\n  @ViewChild('input', {static: false}) _inputElement: ElementRef<HTMLInputElement>;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex: string,\n              private _ngZone: NgZone,\n              @Inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS)\n                  public defaults: MatSlideToggleDefaultOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              @Optional() private _dir?: Directionality) {\n    super(elementRef);\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngAfterContentInit() {\n    this._focusMonitor\n      .monitor(this._elementRef, true)\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n          // error. See https://github.com/angular/angular/issues/17793. To work around this,\n          // we defer telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => this._onTouched());\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Method being called whenever the underlying input emits a change event. */\n  _onChangeEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the component's `change` output.\n    event.stopPropagation();\n\n    if (!this._dragging) {\n      this.toggleChange.emit();\n    }\n    // Releasing the pointer over the `<label>` element while dragging triggers another\n    // click event on the `<label>` element. This means that the checked state of the underlying\n    // input changed unintentionally and needs to be changed back. Or when the slide toggle's config\n    // disabled toggle change event by setting `disableToggleValue: true`, the slide toggle's value\n    // does not change, and the checked state of the underlying input needs to be changed back.\n    if (this._dragging || this.defaults.disableToggleValue) {\n      this._inputElement.nativeElement.checked = this.checked;\n      return;\n    }\n\n    // Sync the value from the underlying input element with the component instance.\n    this.checked = this._inputElement.nativeElement.checked;\n\n    // Emit our custom change event only if the underlying input emitted one. This ensures that\n    // there is no change event, when the checked state changes programmatically.\n    this._emitChangeEvent();\n  }\n\n  /** Method being called whenever the slide-toggle has been clicked. */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `slide-toggle` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the slide-toggle. */\n  focus(): void {\n    this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n  }\n\n  /** Toggles the checked state of the slide-toggle. */\n  toggle(): void {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n\n  /**\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n   */\n  private _emitChangeEvent() {\n    this._onChange(this.checked);\n    this.change.emit(new MatSlideToggleChange(this, this.checked));\n  }\n\n  /** Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100. */\n  private _getDragPercentage(distance: number) {\n    let percentage = (distance / this._thumbBarWidth) * 100;\n\n    // When the toggle was initially checked, then we have to start the drag at the end.\n    if (this._previousChecked) {\n      percentage += 100;\n    }\n\n    return Math.max(0, Math.min(percentage, 100));\n  }\n\n  _onDragStart() {\n    if (!this.disabled && !this._dragging) {\n      const thumbEl = this._thumbEl.nativeElement;\n      this._thumbBarWidth = this._thumbBarEl.nativeElement.clientWidth - thumbEl.clientWidth;\n      thumbEl.classList.add('mat-dragging');\n\n      this._previousChecked = this.checked;\n      this._dragging = true;\n    }\n  }\n\n  _onDrag(event: HammerInput) {\n    if (this._dragging) {\n      const direction = this._dir && this._dir.value === 'rtl' ? -1 : 1;\n      this._dragPercentage = this._getDragPercentage(event.deltaX * direction);\n      // Calculate the moved distance based on the thumb bar width.\n      const dragX = (this._dragPercentage / 100) * this._thumbBarWidth * direction;\n      this._thumbEl.nativeElement.style.transform = `translate3d(${dragX}px, 0, 0)`;\n    }\n  }\n\n  _onDragEnd() {\n    if (this._dragging) {\n      const newCheckedValue = this._dragPercentage > 50;\n\n      if (newCheckedValue !== this.checked) {\n        this.dragChange.emit();\n        if (!this.defaults.disableDragValue) {\n          this.checked = newCheckedValue;\n          this._emitChangeEvent();\n        }\n      }\n\n      // The drag should be stopped outside of the current event handler, otherwise the\n      // click event will be fired before it and will revert the drag change.\n      this._ngZone.runOutsideAngular(() => setTimeout(() => {\n        if (this._dragging) {\n          this._dragging = false;\n          this._thumbEl.nativeElement.classList.remove('mat-dragging');\n\n          // Reset the transform because the component will take care\n          // of the thumb position after drag.\n          this._thumbEl.nativeElement.style.transform = '';\n        }\n      }));\n    }\n  }\n\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n    // slide-toggle component will be only marked for check, but no actual change detection runs\n    // automatically. Instead of going back into the zone in order to trigger a change detection\n    // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n    // we only trigger an explicit change detection for the slide-toggle view and it's children.\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {NgModule} from '@angular/core';\nimport {GestureConfig, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {MatSlideToggle} from './slide-toggle';\n\n\n@NgModule({\n  imports: [MatRippleModule, MatCommonModule, ObserversModule],\n  exports: [MatSlideToggle, MatCommonModule],\n  declarations: [MatSlideToggle],\n  providers: [\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}\n  ],\n})\nexport class MatSlideToggleModule {}\n"]}