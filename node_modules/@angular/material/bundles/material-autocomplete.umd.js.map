{"version":3,"file":"material-autocomplete.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/autocomplete/autocomplete.ts","../../src/material/autocomplete/autocomplete-origin.ts","../../src/material/autocomplete/autocomplete-trigger.ts","../../src/material/autocomplete/autocomplete-module.ts"],"names":["mixinDisableRipple","InjectionToken","tslib_1.__extends","EventEmitter","coerceBooleanProperty","ActiveDescendantKeyManager","Component","ViewEncapsulation","ChangeDetectionStrategy","MAT_OPTION_PARENT_COMPONENT","Inject","ContentChildren","MatOption","MatOptgroup","Input","Output","Directive","ElementRef","overlay","Overlay","NG_VALUE_ACCESSOR","forwardRef","Subscription","Subject","defer","merge","take","switchMap","filter","observableOf","map","MatOptionSelectionChange","fromEvent","formField","ESCAPE","ENTER","UP_ARROW","DOWN_ARROW","TAB","_countGroupLabelsBeforeOption","_getOptionScrollPosition","tap","delay","TemplatePortal","OverlayConfig","ViewContainerRef","NgZone","ChangeDetectorRef","Directionality","Optional","MatFormField","Host","DOCUMENT","ViewportRuler","NgModule","MatOptionModule","OverlayModule","MatCommonModule","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n  mixinDisableRipple,\n} from '@angular/material/core';\n\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class MatAutocompleteSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: MatAutocomplete,\n    /** Option that was selected. */\n    public option: MatOption) { }\n}\n\n\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {}\nconst _MatAutocompleteMixinBase: CanDisableRippleCtor & typeof MatAutocompleteBase =\n    mixinDisableRipple(MatAutocompleteBase);\n\n/** Default `mat-autocomplete` options that can be overridden. */\nexport interface MatAutocompleteDefaultOptions {\n  /** Whether the first option should be highlighted when an autocomplete panel is opened. */\n  autoActiveFirstOption?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nexport const MAT_AUTOCOMPLETE_DEFAULT_OPTIONS =\n    new InjectionToken<MatAutocompleteDefaultOptions>('mat-autocomplete-default-options', {\n      providedIn: 'root',\n      factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY(): MatAutocompleteDefaultOptions {\n  return {autoActiveFirstOption: false};\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'matAutocomplete',\n  inputs: ['disableRipple'],\n  host: {\n    'class': 'mat-autocomplete'\n  },\n  providers: [\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}\n  ]\n})\nexport class MatAutocomplete extends _MatAutocompleteMixinBase implements AfterContentInit,\n  CanDisableRipple {\n\n  /** Manages active item in option list based on key events. */\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\n\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel: boolean = false;\n\n  /** Whether the autocomplete panel is open. */\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\n  _isOpen: boolean = false;\n\n  // The @ViewChild query for TemplateRef here needs to be static because some code paths\n  // lead to the overlay being created before change detection has finished for this component.\n  // Notably, another component may trigger `focus` on the autocomplete-trigger.\n\n  /** @docs-private */\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild('panel', {static: false}) panel: ElementRef;\n\n  /** @docs-private */\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n\n  /** @docs-private */\n  @ContentChildren(MatOptgroup) optionGroups: QueryList<MatOptgroup>;\n\n  /** Function that maps an option's control value to its display value in the trigger. */\n  @Input() displayWith: ((value: any) => string) | null = null;\n\n  /**\n   * Whether the first option should be highlighted when the autocomplete panel is opened.\n   * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n   */\n  @Input()\n  get autoActiveFirstOption(): boolean { return this._autoActiveFirstOption; }\n  set autoActiveFirstOption(value: boolean) {\n    this._autoActiveFirstOption = coerceBooleanProperty(value);\n  }\n  private _autoActiveFirstOption: boolean;\n\n  /**\n   * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n   * match the width of its host.\n   */\n  @Input() panelWidth: string | number;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<MatAutocompleteSelectedEvent> =\n      new EventEmitter<MatAutocompleteSelectedEvent>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  @Input('class')\n  set classList(value: string) {\n    if (value && value.length) {\n      this._classList = value.split(' ').reduce((classList, className) => {\n        classList[className.trim()] = true;\n        return classList;\n      }, {} as {[key: string]: boolean});\n    } else {\n      this._classList = {};\n    }\n\n    this._setVisibilityClasses(this._classList);\n    this._elementRef.nativeElement.className = '';\n  }\n  _classList: {[key: string]: boolean} = {};\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id: string = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS) defaults: MatAutocompleteDefaultOptions) {\n    super();\n\n    this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options).withWrap();\n    // Set the initial visibility state.\n    this._setVisibility();\n  }\n\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  /** Returns the panel's scrollTop. */\n  _getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!this.options.length;\n    this._setVisibilityClasses(this._classList);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits the `select` event. */\n  _emitSelectEvent(option: MatOption): void {\n    const event = new MatAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n\n  /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n  private _setVisibilityClasses(classList: {[key: string]: boolean}) {\n    classList['mat-autocomplete-visible'] = this.showPanel;\n    classList['mat-autocomplete-hidden'] = !this.showPanel;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n  selector: '[matAutocompleteOrigin]',\n  exportAs: 'matAutocompleteOrigin',\n})\nexport class MatAutocompleteOrigin {\n  constructor(\n      /** Reference to the element on which the directive is applied. */\n      public elementRef: ElementRef<HTMLElement>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n  ConnectedPosition,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {filter, take, switchMap, delay, tap, map} from 'rxjs/operators';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  MatOption,\n  MatOptionSelectionChange,\n} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {Subscription, defer, fromEvent, merge, of as observableOf, Subject, Observable} from 'rxjs';\nimport {MatAutocomplete} from './autocomplete';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n\n/** The height of each autocomplete option. */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\n\n/** The total height of the autocomplete panel. */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-autocomplete-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nexport function getMatAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n               'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n\n@Directive({\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    '[attr.autocomplete]': 'autocompleteAttribute',\n    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n    '[attr.aria-haspopup]': '!autocompleteDisabled',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'matAutocompleteTrigger',\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class MatAutocompleteTrigger implements ControlValueAccessor, OnChanges, OnDestroy {\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _componentDestroyed = false;\n  private _autocompleteDisabled = false;\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  /** Strategy that is used to position the panel. */\n  private _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** Whether or not the label state is being overridden. */\n  private _manuallyFloatingLabel = false;\n\n  /** The subscription for closing actions (some are bound to document). */\n  private _closingActionsSubscription: Subscription;\n\n  /** Subscription to viewport size changes. */\n  private _viewportSubscription = Subscription.EMPTY;\n\n  /**\n   * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n   * closed autocomplete from being reopened if the user switches to another browser tab and then\n   * comes back.\n   */\n  private _canOpenOnNextFocus = true;\n\n  /** Stream of keyboard events that can close the panel. */\n  private readonly _closeKeyEventStream = new Subject<void>();\n\n  /**\n   * Event handler for when the window is blurred. Needs to be an\n   * arrow function in order to preserve the context.\n   */\n  private _windowBlurHandler = () => {\n    // If the user blurred the window while the autocomplete is focused, it means that it'll be\n    // refocused when they come back. In this case we want to skip the first focus event, if the\n    // pane was closed, in order to avoid reopening it unintentionally.\n    this._canOpenOnNextFocus =\n        this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n\n  /** The autocomplete panel to be attached to this trigger. */\n  @Input('matAutocomplete') autocomplete: MatAutocomplete;\n\n  /**\n   * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n   * will render the panel underneath the trigger if there is enough space for it to fit in\n   * the viewport, otherwise the panel will be shown above it. If the position is set to\n   * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n   * whether it fits completely in the viewport.\n   */\n  @Input('matAutocompletePosition') position: 'auto' | 'above' | 'below' = 'auto';\n\n  /**\n   * Reference relative to which to position the autocomplete panel.\n   * Defaults to the autocomplete trigger element.\n   */\n  @Input('matAutocompleteConnectedTo') connectedTo: MatAutocompleteOrigin;\n\n  /**\n   * `autocomplete` attribute to be set on the input element.\n   * @docs-private\n   */\n  @Input('autocomplete') autocompleteAttribute: string = 'off';\n\n  /**\n   * Whether the autocomplete is disabled. When disabled, the element will\n   * act as a regular input and the user won't be able to open the panel.\n   */\n  @Input('matAutocompleteDisabled')\n  get autocompleteDisabled(): boolean { return this._autocompleteDisabled; }\n  set autocompleteDisabled(value: boolean) {\n    this._autocompleteDisabled = coerceBooleanProperty(value);\n  }\n\n  constructor(private _element: ElementRef<HTMLInputElement>, private _overlay: Overlay,\n              private _viewContainerRef: ViewContainerRef,\n              private _zone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dir: Directionality,\n              @Optional() @Host() private _formField: MatFormField,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              // @breaking-change 8.0.0 Make `_viewportRuler` required.\n              private _viewportRuler?: ViewportRuler) {\n\n    if (typeof window !== 'undefined') {\n      _zone.runOutsideAngular(() => {\n        window.addEventListener('blur', this._windowBlurHandler);\n      });\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['position'] && this._positionStrategy) {\n      this._setStrategyPositions(this._positionStrategy);\n\n      if (this.panelOpen) {\n        this._overlayRef!.updatePosition();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('blur', this._windowBlurHandler);\n    }\n\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n  }\n\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen(): boolean {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  private _overlayAttached: boolean = false;\n\n  /** Opens the autocomplete suggestion panel. */\n  openPanel(): void {\n    this._attachOverlay();\n    this._floatLabel();\n  }\n\n  /** Closes the autocomplete suggestion panel. */\n  closePanel(): void {\n    this._resetLabel();\n\n    if (!this._overlayAttached) {\n      return;\n    }\n\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      this.autocomplete.closed.emit();\n    }\n\n    this.autocomplete._isOpen = this._overlayAttached = false;\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n   * within the viewport.\n   */\n  updatePosition(): void {\n    if (this._overlayAttached) {\n      this._overlayRef!.updatePosition();\n    }\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions(): Observable<MatOptionSelectionChange|null> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)),\n      this._closeKeyEventStream,\n      this._getOutsideClickStream(),\n      this._overlayRef ?\n          this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n          observableOf()\n    ).pipe(\n      // Normalize the output so we return a consistent type.\n      map(event => event instanceof MatOptionSelectionChange ? event : null)\n    );\n  }\n\n  /** Stream of autocomplete option selections. */\n  readonly optionSelections: Observable<MatOptionSelectionChange> = defer(() => {\n    if (this.autocomplete && this.autocomplete.options) {\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n    }\n\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._zone.onStable\n        .asObservable()\n        .pipe(take(1), switchMap(() => this.optionSelections));\n  }) as Observable<MatOptionSelectionChange>;\n\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption(): MatOption | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  private _getOutsideClickStream(): Observable<any> {\n    return merge(\n      fromEvent(this._document, 'click') as Observable<MouseEvent>,\n      fromEvent(this._document, 'touchend') as Observable<TouchEvent>\n    )\n    .pipe(filter(event => {\n      const clickTarget = event.target as HTMLElement;\n      const formField = this._formField ?\n          this._formField._elementRef.nativeElement : null;\n\n      return this._overlayAttached &&\n              clickTarget !== this._element.nativeElement &&\n              (!formField || !formField.contains(clickTarget)) &&\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else if (this.autocomplete) {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (this.panelOpen || keyCode === TAB) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._canOpen()) {\n        this.openPanel();\n      }\n\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption();\n      }\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    let target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value == '' ? null : parseFloat(value);\n    }\n\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._previousValue !== value) {\n      this._previousValue = value;\n      this._onChange(value);\n\n      if (this._canOpen() && this._document.activeElement === event.target) {\n        this.openPanel();\n      }\n    }\n  }\n\n  _handleFocus(): void {\n    if (!this._canOpenOnNextFocus) {\n      this._canOpenOnNextFocus = true;\n    } else if (this._canOpen()) {\n      this._previousValue = this._element.nativeElement.value;\n      this._attachOverlay();\n      this._floatLabel(true);\n    }\n  }\n\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  private _floatLabel(shouldAnimate = false): void {\n    if (this._formField && this._formField.floatLabel === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockLabel();\n      } else {\n        this._formField.floatLabel = 'always';\n      }\n\n      this._manuallyFloatingLabel = true;\n    }\n  }\n\n  /** If the label has been manually elevated, return it to its normal state. */\n  private _resetLabel(): void  {\n    if (this._manuallyFloatingLabel) {\n      this._formField.floatLabel = 'auto';\n      this._manuallyFloatingLabel = false;\n    }\n  }\n\n  /**\n   * Given that we are not actually focusing active options, we must manually adjust scroll\n   * to reveal options below the fold. First, we find the offset of the option from the top\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n   * the panel height + the option height, so the active option will be just visible at the\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\n   * not adjusted.\n   */\n  private _scrollToOption(): void {\n    const index = this.autocomplete._keyManager.activeItemIndex || 0;\n    const labelCount = _countGroupLabelsBeforeOption(index,\n        this.autocomplete.options, this.autocomplete.optionGroups);\n\n    const newScrollPosition = _getOptionScrollPosition(\n      index + labelCount,\n      AUTOCOMPLETE_OPTION_HEIGHT,\n      this.autocomplete._getScrollTop(),\n      AUTOCOMPLETE_PANEL_HEIGHT\n    );\n\n    this.autocomplete._setScrollTop(newScrollPosition);\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  private _subscribeToClosingActions(): Subscription {\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(\n      tap(() => this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0)\n    );\n\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges)\n        .pipe(\n            // create a new stream of panelClosingActions, replacing any previous streams\n            // that were created, and flatten it so our stream only emits closing events...\n            switchMap(() => {\n              const wasOpen = this.panelOpen;\n              this._resetActiveItem();\n              this.autocomplete._setVisibility();\n\n              if (this.panelOpen) {\n                this._overlayRef!.updatePosition();\n\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                  this.autocomplete.opened.emit();\n                }\n              }\n\n              return this.panelClosingActions;\n            }),\n            // when the first closing event occurs...\n            take(1))\n        // set the value, close the panel, and complete.\n        .subscribe(event => this._setValueAndClose(event));\n  }\n\n  /** Destroys the autocomplete suggestion panel. */\n  private _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n    const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n      this.autocomplete.displayWith(value) :\n      value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n\n    this._previousValue = inputValue;\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: MatOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: MatOption) {\n    this.autocomplete.options.forEach(option => {\n      if (option != skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getMatAutocompleteMissingPanelError();\n    }\n\n    let overlayRef = this._overlayRef;\n\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      overlayRef = this._overlay.create(this._getOverlayConfig());\n      this._overlayRef = overlayRef;\n\n      // Use the `keydownEvents` in order to take advantage of\n      // the overlay event targeting provided by the CDK overlay.\n      overlayRef.keydownEvents().subscribe(event => {\n        // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n        // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n        if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n          this._resetActiveItem();\n          this._closeKeyEventStream.next();\n        }\n      });\n\n      if (this._viewportRuler) {\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && overlayRef) {\n            overlayRef.updateSize({width: this._getPanelWidth()});\n          }\n        });\n      }\n    } else {\n      // Update the trigger, panel width and direction, in case anything has changed.\n      this._positionStrategy.setOrigin(this._getConnectedElement());\n      overlayRef.updateSize({width: this._getPanelWidth()});\n    }\n\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    const wasOpen = this.panelOpen;\n\n    this.autocomplete._setVisibility();\n    this.autocomplete._isOpen = this._overlayAttached = true;\n\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this.autocomplete.opened.emit();\n    }\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      width: this._getPanelWidth(),\n      direction: this._dir\n    });\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(this._getConnectedElement())\n      .withFlexibleDimensions(false)\n      .withPush(false);\n\n    this._setStrategyPositions(strategy);\n    this._positionStrategy = strategy;\n    return strategy;\n  }\n\n  /** Sets the positions on a position strategy based on the directive's input state. */\n  private _setStrategyPositions(positionStrategy: FlexibleConnectedPositionStrategy) {\n    const belowPosition: ConnectedPosition = {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    };\n    const abovePosition: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n\n      // The overlay edge connected to the trigger should have squared corners, while\n      // the opposite end has rounded corners. We apply a CSS class to swap the\n      // border-radius based on the overlay position.\n      panelClass: 'mat-autocomplete-panel-above'\n    };\n\n    let positions: ConnectedPosition[];\n\n    if (this.position === 'above') {\n      positions = [abovePosition];\n    } else if (this.position === 'below') {\n      positions = [belowPosition];\n    } else {\n      positions = [belowPosition, abovePosition];\n    }\n\n    positionStrategy.withPositions(positions);\n  }\n\n  private _getConnectedElement(): ElementRef {\n    if (this.connectedTo) {\n      return this.connectedTo.elementRef;\n    }\n\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n\n  private _getPanelWidth(): number | string {\n    return this.autocomplete.panelWidth || this._getHostWidth();\n  }\n\n  /** Returns the width of the input element, so the panel width can match it. */\n  private _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Resets the active item to -1 so arrow events will activate the\n   * correct options, or to 0 if the consumer opted into it.\n   */\n  private _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n  }\n\n  /** Determines whether the panel can be opened. */\n  private _canOpen(): boolean {\n    const element = this._element.nativeElement;\n    return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MatOptionModule, MatCommonModule} from '@angular/material/core';\nimport {MatAutocomplete} from './autocomplete';\nimport {\n  MatAutocompleteTrigger,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './autocomplete-trigger';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n@NgModule({\n  imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n  exports: [\n    MatAutocomplete,\n    MatOptionModule,\n    MatAutocompleteTrigger,\n    MatAutocompleteOrigin,\n    MatCommonModule\n  ],\n  declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class MatAutocompleteModule {}\n"]}