{"version":3,"file":"material.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/core/version.ts","../../src/material/core/animation/animation.ts","../../src/material/core/common-behaviors/common-module.ts","../../src/material/core/common-behaviors/disabled.ts","../../src/material/core/common-behaviors/color.ts","../../src/material/core/common-behaviors/disable-ripple.ts","../../src/material/core/common-behaviors/tabindex.ts","../../src/material/core/common-behaviors/error-state.ts","../../src/material/core/common-behaviors/initialized.ts","../../src/material/core/datetime/date-adapter.ts","../../src/material/core/datetime/date-formats.ts","../../src/material/core/datetime/native-date-adapter.ts","../../src/material/core/datetime/native-date-formats.ts","../../src/material/core/datetime/index.ts","../../src/material/core/error/error-options.ts","../../src/material/core/gestures/gesture-config.ts","../../src/material/core/line/line.ts","../../src/material/core/ripple/ripple-ref.ts","../../src/material/core/ripple/ripple-renderer.ts","../../src/material/core/ripple/ripple.ts","../../src/material/core/ripple/index.ts","../../src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/material/core/selection/index.ts","../../src/material/core/option/optgroup.ts","../../src/material/core/option/option.ts","../../src/material/core/option/index.ts","../../src/material/core/label/label-options.ts","../../src/material/core/month-constants.ts","../../src/material/form-field/error.ts","../../src/material/form-field/form-field-animations.ts","../../src/material/form-field/form-field-control.ts","../../src/material/form-field/form-field-errors.ts","../../src/material/form-field/hint.ts","../../src/material/form-field/label.ts","../../src/material/form-field/placeholder.ts","../../src/material/form-field/prefix.ts","../../src/material/form-field/suffix.ts","../../src/material/form-field/form-field.ts","../../src/material/form-field/form-field-module.ts","../../src/material/autocomplete/autocomplete.ts","../../src/material/autocomplete/autocomplete-origin.ts","../../src/material/autocomplete/autocomplete-trigger.ts","../../src/material/autocomplete/autocomplete-module.ts","../../src/material/badge/badge.ts","../../src/material/badge/badge-module.ts","../../src/material/bottom-sheet/bottom-sheet-config.ts","../../src/material/bottom-sheet/bottom-sheet-animations.ts","../../src/material/bottom-sheet/bottom-sheet-container.ts","../../src/material/bottom-sheet/bottom-sheet-module.ts","../../src/material/bottom-sheet/bottom-sheet-ref.ts","../../src/material/bottom-sheet/bottom-sheet.ts","../../src/material/button/button.ts","../../src/material/button/button-module.ts","../../src/material/button-toggle/button-toggle.ts","../../src/material/button-toggle/button-toggle-module.ts","../../src/material/card/card.ts","../../src/material/card/card-module.ts","../../src/material/checkbox/checkbox-config.ts","../../src/material/checkbox/checkbox.ts","../../src/material/checkbox/checkbox-required-validator.ts","../../src/material/checkbox/checkbox-module.ts","../../src/material/chips/chip.ts","../../src/material/chips/chip-default-options.ts","../../src/material/chips/chip-list.ts","../../src/material/chips/chip-input.ts","../../src/material/chips/chips-module.ts","../../src/material/dialog/dialog-config.ts","../../src/material/dialog/dialog-animations.ts","../../src/material/dialog/dialog-container.ts","../../src/material/dialog/dialog-ref.ts","../../src/material/dialog/dialog.ts","../../src/material/dialog/dialog-content-directives.ts","../../src/material/dialog/dialog-module.ts","../../src/material/input/autosize.ts","../../src/material/input/input-errors.ts","../../src/material/input/input-value-accessor.ts","../../src/material/input/input.ts","../../src/material/input/input-module.ts","../../src/material/datepicker/datepicker-errors.ts","../../src/material/datepicker/datepicker-intl.ts","../../src/material/datepicker/calendar-body.ts","../../src/material/datepicker/month-view.ts","../../src/material/datepicker/multi-year-view.ts","../../src/material/datepicker/year-view.ts","../../src/material/datepicker/calendar.ts","../../src/material/datepicker/datepicker-animations.ts","../../src/material/datepicker/datepicker.ts","../../src/material/datepicker/datepicker-input.ts","../../src/material/datepicker/datepicker-toggle.ts","../../src/material/datepicker/datepicker-module.ts","../../src/material/divider/divider.ts","../../src/material/divider/divider-module.ts","../../src/material/expansion/accordion-base.ts","../../src/material/expansion/expansion-animations.ts","../../src/material/expansion/expansion-panel-content.ts","../../src/material/expansion/expansion-panel.ts","../../src/material/expansion/expansion-panel-header.ts","../../src/material/expansion/accordion.ts","../../src/material/expansion/expansion-module.ts","../../src/material/grid-list/grid-list-base.ts","../../src/material/grid-list/grid-tile.ts","../../src/material/grid-list/tile-coordinator.ts","../../src/material/grid-list/tile-styler.ts","../../src/material/grid-list/grid-list.ts","../../src/material/grid-list/grid-list-module.ts","../../src/material/icon/icon-registry.ts","../../src/material/icon/icon.ts","../../src/material/icon/icon-module.ts","../../src/material/list/list.ts","../../src/material/list/selection-list.ts","../../src/material/list/list-module.ts","../../src/material/menu/menu-animations.ts","../../src/material/menu/menu-content.ts","../../src/material/menu/menu-errors.ts","../../src/material/menu/menu-panel.ts","../../src/material/menu/menu-item.ts","../../src/material/menu/menu.ts","../../src/material/menu/menu-trigger.ts","../../src/material/menu/menu-module.ts","../../src/material/select/select-animations.ts","../../src/material/select/select-errors.ts","../../src/material/select/select.ts","../../src/material/select/select-module.ts","../../src/material/tooltip/tooltip-animations.ts","../../src/material/tooltip/tooltip.ts","../../src/material/tooltip/tooltip-module.ts","../../src/material/paginator/paginator-intl.ts","../../src/material/paginator/paginator.ts","../../src/material/paginator/paginator-module.ts","../../src/material/progress-bar/progress-bar.ts","../../src/material/progress-bar/progress-bar-module.ts","../../src/material/progress-spinner/progress-spinner.ts","../../src/material/progress-spinner/progress-spinner-module.ts","../../src/material/radio/radio.ts","../../src/material/radio/radio-module.ts","../../src/material/sidenav/drawer-animations.ts","../../src/material/sidenav/drawer.ts","../../src/material/sidenav/sidenav.ts","../../src/material/sidenav/sidenav-module.ts","../../src/material/slide-toggle/slide-toggle-config.ts","../../src/material/slide-toggle/slide-toggle.ts","../../src/material/slide-toggle/slide-toggle-module.ts","../../src/material/slider/slider.ts","../../src/material/slider/slider-module.ts","../../src/material/snack-bar/snack-bar-ref.ts","../../src/material/snack-bar/snack-bar-config.ts","../../src/material/snack-bar/simple-snack-bar.ts","../../src/material/snack-bar/snack-bar-animations.ts","../../src/material/snack-bar/snack-bar-container.ts","../../src/material/snack-bar/snack-bar-module.ts","../../src/material/snack-bar/snack-bar.ts","../../src/material/sort/sort-errors.ts","../../src/material/sort/sort.ts","../../src/material/sort/sort-animations.ts","../../src/material/sort/sort-header-intl.ts","../../src/material/sort/sort-header.ts","../../src/material/sort/sort-module.ts","../../src/material/stepper/step-label.ts","../../src/material/stepper/stepper-intl.ts","../../src/material/stepper/step-header.ts","../../src/material/stepper/stepper-animations.ts","../../src/material/stepper/stepper-icon.ts","../../src/material/stepper/stepper.ts","../../src/material/stepper/stepper-button.ts","../../src/material/stepper/stepper-module.ts","../../src/material/table/table.ts","../../src/material/table/cell.ts","../../src/material/table/row.ts","../../src/material/table/text-column.ts","../../src/material/table/table-module.ts","../../src/material/table/table-data-source.ts","../../src/material/tabs/ink-bar.ts","../../src/material/tabs/tab-content.ts","../../src/material/tabs/tab-label.ts","../../src/material/tabs/tab.ts","../../src/material/tabs/tabs-animations.ts","../../src/material/tabs/tab-body.ts","../../src/material/tabs/tab-label-wrapper.ts","../../src/material/tabs/tab-header.ts","../../src/material/tabs/tab-group.ts","../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/material/tabs/tabs-module.ts","../../src/material/toolbar/toolbar.ts","../../src/material/toolbar/toolbar-module.ts","../../src/material/tree/outlet.ts","../../src/material/tree/node.ts","../../src/material/tree/padding.ts","../../src/material/tree/tree.ts","../../src/material/tree/toggle.ts","../../src/material/tree/tree-module.ts","../../src/material/tree/data-source/flat-data-source.ts","../../src/material/tree/data-source/nested-data-source.ts"],"names":["Version","InjectionToken","isDevMode","NgModule","BidiModule","Optional","Inject","HAMMER_LOADER","tslib_1.__extends","coerceBooleanProperty","Subject","Observable","inject","LOCALE_ID","platform","tslib_1.__assign","Injectable","Platform","PlatformModule","Éµ0","HammerGestureConfig","Directive","startWith","normalizePassiveListenerOptions","isFakeMousedownFromScreenReader","ElementRef","NgZone","ANIMATION_MODULE_TYPE","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","ENTER","SPACE","hasModifierKey","Output","CommonModule","trigger","state","style","transition","animate","nextUniqueId","takeUntil","merge","fromEvent","take","ChangeDetectorRef","Directionality","ViewChild","ContentChild","ContentChildren","ObserversModule","ActiveDescendantKeyManager","overlay","Overlay","NG_VALUE_ACCESSOR","forwardRef","Subscription","defer","switchMap","filter","observableOf","map","ESCAPE","UP_ARROW","DOWN_ARROW","TAB","tap","delay","TemplatePortal","OverlayConfig","ViewContainerRef","Host","DOCUMENT","ViewportRuler","OverlayModule","AriaDescriber","Renderer2","A11yModule","Breakpoints","portal","FocusTrapFactory","BreakpointObserver","PortalModule","TemplateRef","ComponentPortal","PortalInjector","Injector","SkipSelf","Location","FocusMonitor","_uniqueIdCounter","SelectionModel","Attribute","NG_VALIDATORS","CheckboxRequiredValidator","DELETE","BACKSPACE","FocusKeyManager","HOME","END","NgForm","FormGroupDirective","NgControl","Self","_applyConfigDefaults","OverlayContainer","CdkTextareaAutosize","getSupportedInputTypes","AutofillMonitor","TextFieldModule","LEFT_ARROW","RIGHT_ARROW","PAGE_UP","PAGE_DOWN","Validators","group","query","animateChild","uniqueId","accordion","distinctUntilChanged","UniqueSelectionDispatcher","EMPTY","CdkAccordion","CdkAccordionModule","coerceNumberProperty","SecurityContext","observableThrow","catchError","forkJoin","finalize","share","HttpClient","DomSanitizer","A","DomPortalOutlet","ComponentFactoryResolver","ApplicationRef","HostListener","asapScheduler","SELECT_MULTIPLE_PANEL_PADDING_X","LiveAnnouncer","CdkConnectedOverlay","keyframes","ScrollDispatcher","HAMMER_GESTURE_CONFIG","HostBinding","debounceTime","ScrollingModule","CdkStepLabel","stepper","STEPPER_GLOBAL_OPTIONS","CdkStepper","CdkStepperNext","CdkStepperPrevious","CdkStepperModule","CDK_TABLE_TEMPLATE","CdkTable","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","CdkHeaderCell","CdkFooterCell","CdkCell","CdkHeaderRowDef","CdkFooterRowDef","CdkRowDef","CDK_ROW_TEMPLATE","CdkHeaderRow","CdkFooterRow","CdkRow","CdkTableModule","BehaviorSubject","_isNumberValue","combineLatest","DataSource","CdkPortal","CdkPortalOutlet","PortalHostDirective","passiveEventListenerOptions","timer","nextId","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNode","CdkNestedTreeNode","CdkTree","CdkTreeNodeDef","IterableDiffers","CdkTreeNodePadding","CdkTreeNodeToggle","CdkTreeModule"],"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Material. */\nexport const VERSION = new Version('8.0.0');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {HammerLoader, HAMMER_LOADER} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\n  return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean,\n    @Optional() @Inject(HAMMER_LOADER) private _hammerLoader?: HammerLoader) {\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    const window = this._window as any;\n    return window && (window.__karma__ || window.jasmine);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = this._document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement);\n\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn(\n        'Could not find Angular Material core theme. Most Material ' +\n        'components may not work as expected. For more info refer ' +\n        'to the theming guide: https://material.angular.io/guide/theming'\n      );\n    }\n\n    this._document.body.removeChild(testElement);\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !(this._window as any)['Hammer'] && !this._hammerLoader) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): CanDisableRippleCtor & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n  'longpress',\n  'slide',\n  'slidestart',\n  'slideend',\n  'slideright',\n  'slideleft'\n];\n\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\nconst noopHammerInstance: HammerInstance = {\n  on: () => {},\n  off: () => {},\n};\n\n/** Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  /** List of new event names to add to the gesture support list */\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n\n    const mc = new hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new hammer.Pan();\n    const swipe = new hammer.Swipe();\n    const press = new hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {startWith} from 'rxjs/operators';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport function setLines(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({length}) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nexport class MatLineSetter {\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n    setLines(lines, element);\n  }\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {RippleRef, RippleState} from './ripple-ref';\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementRef: ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents\n        .set('mousedown', this._onMousedown)\n        .set('mouseup', this._onPointerUp)\n        .set('mouseleave', this._onPointerUp)\n\n        .set('touchstart', this._onTouchStart)\n        .set('touchend', this._onPointerUp)\n        .set('touchcancel', this._onPointerUp);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(element: HTMLElement) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private _onMousedown = (event: MouseEvent) => {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private _onTouchStart = (event: TouchEvent) => {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private _onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private _runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleRef} from './ripple-ref';\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {...this._globalOptions.animation, ...this.animation},\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase { }\nconst _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption implements AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean|null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  const optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n  OCT = 9, NOV = 10, DEC = 11;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Single error message to be shown underneath the form field. */\n@Directive({\n  selector: 'mat-error',\n  host: {\n    'class': 'mat-error',\n    'role': 'alert',\n    '[attr.id]': 'id',\n  }\n})\nexport class MatError {\n  @Input() id: string = `mat-error-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nexport const matFormFieldAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    // TODO(mmalerba): Use angular animations for label animation as well.\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {NgControl} from '@angular/forms';\n\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nexport abstract class MatFormFieldControl<T> {\n  /** The value of the control. */\n  value: T | null;\n\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n   * needs to run change detection.\n   */\n  readonly stateChanges: Observable<void>;\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  readonly placeholder: string;\n\n  /** Gets the NgControl for this control. */\n  readonly ngControl: NgControl | null;\n\n  /** Whether the control is focused. */\n  readonly focused: boolean;\n\n  /** Whether the control is empty. */\n  readonly empty: boolean;\n\n  /** Whether the `MatFormField` label should try to float. */\n  readonly shouldLabelFloat: boolean;\n\n  /** Whether the control is required. */\n  readonly required: boolean;\n\n  /** Whether the control is disabled. */\n  readonly disabled: boolean;\n\n  /** Whether the control is in an error state. */\n  readonly errorState: boolean;\n\n  /**\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `mat-form-field-type-{{controlType}}` to its root element.\n   */\n  readonly controlType?: string;\n\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  readonly autofilled?: boolean;\n\n  /** Sets the list of element IDs that currently describe this control. */\n  abstract setDescribedByIds(ids: string[]): void;\n\n  /** Handles a click on the control's container. */\n  abstract onContainerClick(event: MouseEvent): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatFormFieldPlaceholderConflictError(): Error {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n\n/** @docs-private */\nexport function getMatFormFieldDuplicatedHintError(align: string): Error {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n\n/** @docs-private */\nexport function getMatFormFieldMissingControlError(): Error {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Hint text to be shown underneath the form field control. */\n@Directive({\n  selector: 'mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  }\n})\nexport class MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  @Input() id: string = `mat-hint-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** The floating label for a `mat-form-field`. */\n@Directive({\n  selector: 'mat-label'\n})\nexport class MatLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'mat-placeholder'\n})\nexport class MatPlaceholder {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Prefix to be placed in front of the form field. */\n@Directive({\n  selector: '[matPrefix]',\n})\nexport class MatPrefix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Suffix to be placed at the end of the form field. */\n@Directive({\n  selector: '[matSuffix]',\n})\nexport class MatSuffix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  FloatLabelType,\n  LabelOptions,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  mixinColor,\n} from '@angular/material/core';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {startWith, take, takeUntil} from 'rxjs/operators';\nimport {MatError} from './error';\nimport {matFormFieldAnimations} from './form-field-animations';\nimport {MatFormFieldControl} from './form-field-control';\nimport {\n  getMatFormFieldDuplicatedHintError,\n  getMatFormFieldMissingControlError,\n  getMatFormFieldPlaceholderConflictError,\n} from './form-field-errors';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\nimport {Platform} from '@angular/cdk/platform';\nimport {NgControl} from '@angular/forms';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n\n\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase: CanColorCtor & typeof MatFormFieldBase =\n    mixinColor(MatFormFieldBase, 'primary');\n\n/** Possible appearance styles for the form field. */\nexport type MatFormFieldAppearance = 'legacy' | 'standard' | 'fill' | 'outline';\n\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n */\nexport interface MatFormFieldDefaultOptions {\n  appearance?: MatFormFieldAppearance;\n}\n\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nexport const MAT_FORM_FIELD_DEFAULT_OPTIONS =\n    new InjectionToken<MatFormFieldDefaultOptions>('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n\n\n/** Container for form controls that applies Material Design styling and behavior. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-form-field',\n  exportAs: 'matFormField',\n  templateUrl: 'form-field.html',\n  // MatInput is a directive and can't have styles, so we need to include its styles here\n  // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n  // big deal for people who aren't using MatInput.\n  styleUrls: [\n    'form-field.css',\n    'form-field-fill.css',\n    'form-field-input.css',\n    'form-field-legacy.css',\n    'form-field-outline.css',\n    'form-field-standard.css',\n  ],\n  animations: [matFormFieldAnimations.transitionMessages],\n  host: {\n    'class': 'mat-form-field',\n    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n    '[class.mat-form-field-invalid]': '_control.errorState',\n    '[class.mat-form-field-can-float]': '_canLabelFloat',\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n    '[class.mat-form-field-disabled]': '_control.disabled',\n    '[class.mat-form-field-autofilled]': '_control.autofilled',\n    '[class.mat-focused]': '_control.focused',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '[class._mat-animation-noopable]': '!_animationsEnabled',\n  },\n  inputs: ['color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatFormField extends _MatFormFieldMixinBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy, CanColor {\n  private _labelOptions: LabelOptions;\n\n  /**\n   * Whether the outline gap needs to be calculated\n   * immediately on the next change detection run.\n   */\n  private _outlineGapCalculationNeededImmediately = false;\n\n  /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n  private _outlineGapCalculationNeededOnStable = false;\n\n  private _destroyed = new Subject<void>();\n\n  /** The form-field appearance style. */\n  @Input()\n  get appearance(): MatFormFieldAppearance { return this._appearance; }\n  set appearance(value: MatFormFieldAppearance) {\n    const oldValue = this._appearance;\n\n    this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  _appearance: MatFormFieldAppearance;\n\n  /** Whether the required marker should be hidden. */\n  @Input()\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\n  set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  private _hideRequiredMarker: boolean;\n\n  /** Override for the logic that disables the label animation in certain cases. */\n  private _showAlwaysAnimate = false;\n\n  /** Whether the floating label should always float or not. */\n  get _shouldAlwaysFloat(): boolean {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n\n  /** Whether the label can float or not. */\n  get _canLabelFloat(): boolean { return this.floatLabel !== 'never'; }\n\n  /** State of the mat-hint and mat-error animations. */\n  _subscriptAnimationState: string = '';\n\n  /** Text for the form field hint. */\n  @Input()\n  get hintLabel(): string { return this._hintLabel; }\n  set hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  private _hintLabel = '';\n\n  // Unique id for the hint label.\n  _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\n\n  // Unique id for the internal form field label.\n  _labelId = `mat-form-field-label-${nextUniqueId++}`;\n\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   */\n  @Input()\n  get floatLabel(): FloatLabelType {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  set floatLabel(value: FloatLabelType) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._labelOptions.float || 'auto';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _floatLabel: FloatLabelType;\n\n  /** Whether the Angular animations are enabled. */\n  _animationsEnabled: boolean;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ViewChild('underline', {static: false}) underlineRef: ElementRef;\n\n  @ViewChild('connectionContainer', {static: true}) _connectionContainerRef: ElementRef;\n  @ViewChild('inputContainer', {static: false}) _inputContainerRef: ElementRef;\n  @ViewChild('label', {static: false}) private _label: ElementRef;\n\n  @ContentChild(MatFormFieldControl, {static: false}) _controlNonStatic: MatFormFieldControl<any>;\n  @ContentChild(MatFormFieldControl, {static: true}) _controlStatic: MatFormFieldControl<any>;\n  get _control() {\n    // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n    // and ViewEngine. We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  private _explicitFormFieldControl: MatFormFieldControl<any>;\n\n  @ContentChild(MatLabel, {static: false}) _labelChildNonStatic: MatLabel;\n  @ContentChild(MatLabel, {static: true}) _labelChildStatic: MatLabel;\n  get _labelChild() {\n    return this._labelChildNonStatic || this._labelChildStatic;\n  }\n\n  @ContentChild(MatPlaceholder, {static: false}) _placeholderChild: MatPlaceholder;\n  @ContentChildren(MatError) _errorChildren: QueryList<MatError>;\n  @ContentChildren(MatHint) _hintChildren: QueryList<MatHint>;\n  @ContentChildren(MatPrefix) _prefixChildren: QueryList<MatPrefix>;\n  @ContentChildren(MatSuffix) _suffixChildren: QueryList<MatSuffix>;\n\n  constructor(\n      public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef,\n      @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions,\n      @Optional() private _dir: Directionality,\n      @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) private _defaults:\n          MatFormFieldDefaultOptions, private _platform: Platform, private _ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) _animationMode: string) {\n    super(_elementRef);\n\n    this._labelOptions = labelOptions ? labelOptions : {};\n    this.floatLabel = this._labelOptions.float || 'auto';\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n  }\n\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._connectionContainerRef || this._elementRef;\n  }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    const control = this._control;\n\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith(null!)).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this.updateOutlineGap());\n    }\n  }\n\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\n  _shouldForward(prop: keyof NgControl): boolean {\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n\n  _hasLabel() {\n    return !!this._labelChild;\n  }\n\n  _shouldLabelFloat() {\n    return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n  }\n\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() ||\n        this._hasLabel() && !this._shouldLabelFloat();\n  }\n\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages(): 'error' | 'hint' {\n    return (this._errorChildren && this._errorChildren.length > 0 &&\n        this._control.errorState) ? 'error' : 'hint';\n  }\n\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel(): void {\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled) {\n        this._showAlwaysAnimate = true;\n\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   */\n  private _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n\n  /** Does any extra processing that is required when handling the hints. */\n  private _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   */\n  private _validateHints() {\n    if (this._hintChildren) {\n      let startHint: MatHint;\n      let endHint: MatHint;\n      this._hintChildren.forEach((hint: MatHint) => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  private _syncDescribedByIds() {\n    if (this._control) {\n      let ids: string[] = [];\n\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'end') : null;\n\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids = this._errorChildren.map(error => error.id);\n      }\n\n      this._control.setDescribedByIds(ids);\n    }\n  }\n\n  /** Throws an error if the form field's control is missing. */\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   */\n  updateOutlineGap() {\n    const labelEl = this._label ? this._label.nativeElement : null;\n\n    if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n        !labelEl.textContent.trim()) {\n      return;\n    }\n\n    if (!this._platform.isBrowser) {\n      // getBoundingClientRect isn't available on the server.\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (!document.documentElement!.contains(this._elementRef.nativeElement)) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n\n    let startWidth = 0;\n    let gapWidth = 0;\n\n    const container = this._connectionContainerRef.nativeElement;\n    const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n    const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n    if (this._label && this._label.nativeElement.children.length) {\n      const containerRect = container.getBoundingClientRect();\n\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be reclaculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n\n      const containerStart = this._getStartEnd(containerRect);\n      const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n      let labelWidth = 0;\n\n      for (const child of labelEl.children) {\n        labelWidth += child.offsetWidth;\n      }\n      startWidth = labelStart - containerStart - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n\n    for (let i = 0; i < startEls.length; i++) {\n      startEls.item(i).style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls.item(i).style.width = `${gapWidth}px`;\n    }\n\n    this._outlineGapCalculationNeededOnStable =\n        this._outlineGapCalculationNeededImmediately = false;\n  }\n\n  /** Gets the start end of the rect considering the current directionality. */\n  private _getStartEnd(rect: ClientRect): number {\n    return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {MatError} from './error';\nimport {MatFormField} from './form-field';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\n\n\n@NgModule({\n  declarations: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n  imports: [\n    CommonModule,\n    ObserversModule,\n  ],\n  exports: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class MatFormFieldModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n  mixinDisableRipple,\n} from '@angular/material/core';\n\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class MatAutocompleteSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: MatAutocomplete,\n    /** Option that was selected. */\n    public option: MatOption) { }\n}\n\n\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {}\nconst _MatAutocompleteMixinBase: CanDisableRippleCtor & typeof MatAutocompleteBase =\n    mixinDisableRipple(MatAutocompleteBase);\n\n/** Default `mat-autocomplete` options that can be overridden. */\nexport interface MatAutocompleteDefaultOptions {\n  /** Whether the first option should be highlighted when an autocomplete panel is opened. */\n  autoActiveFirstOption?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nexport const MAT_AUTOCOMPLETE_DEFAULT_OPTIONS =\n    new InjectionToken<MatAutocompleteDefaultOptions>('mat-autocomplete-default-options', {\n      providedIn: 'root',\n      factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY(): MatAutocompleteDefaultOptions {\n  return {autoActiveFirstOption: false};\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'matAutocomplete',\n  inputs: ['disableRipple'],\n  host: {\n    'class': 'mat-autocomplete'\n  },\n  providers: [\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}\n  ]\n})\nexport class MatAutocomplete extends _MatAutocompleteMixinBase implements AfterContentInit,\n  CanDisableRipple {\n\n  /** Manages active item in option list based on key events. */\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\n\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel: boolean = false;\n\n  /** Whether the autocomplete panel is open. */\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\n  _isOpen: boolean = false;\n\n  // The @ViewChild query for TemplateRef here needs to be static because some code paths\n  // lead to the overlay being created before change detection has finished for this component.\n  // Notably, another component may trigger `focus` on the autocomplete-trigger.\n\n  /** @docs-private */\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild('panel', {static: false}) panel: ElementRef;\n\n  /** @docs-private */\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n\n  /** @docs-private */\n  @ContentChildren(MatOptgroup) optionGroups: QueryList<MatOptgroup>;\n\n  /** Function that maps an option's control value to its display value in the trigger. */\n  @Input() displayWith: ((value: any) => string) | null = null;\n\n  /**\n   * Whether the first option should be highlighted when the autocomplete panel is opened.\n   * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n   */\n  @Input()\n  get autoActiveFirstOption(): boolean { return this._autoActiveFirstOption; }\n  set autoActiveFirstOption(value: boolean) {\n    this._autoActiveFirstOption = coerceBooleanProperty(value);\n  }\n  private _autoActiveFirstOption: boolean;\n\n  /**\n   * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n   * match the width of its host.\n   */\n  @Input() panelWidth: string | number;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<MatAutocompleteSelectedEvent> =\n      new EventEmitter<MatAutocompleteSelectedEvent>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  @Input('class')\n  set classList(value: string) {\n    if (value && value.length) {\n      this._classList = value.split(' ').reduce((classList, className) => {\n        classList[className.trim()] = true;\n        return classList;\n      }, {} as {[key: string]: boolean});\n    } else {\n      this._classList = {};\n    }\n\n    this._setVisibilityClasses(this._classList);\n    this._elementRef.nativeElement.className = '';\n  }\n  _classList: {[key: string]: boolean} = {};\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id: string = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS) defaults: MatAutocompleteDefaultOptions) {\n    super();\n\n    this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options).withWrap();\n    // Set the initial visibility state.\n    this._setVisibility();\n  }\n\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  /** Returns the panel's scrollTop. */\n  _getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!this.options.length;\n    this._setVisibilityClasses(this._classList);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits the `select` event. */\n  _emitSelectEvent(option: MatOption): void {\n    const event = new MatAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n\n  /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n  private _setVisibilityClasses(classList: {[key: string]: boolean}) {\n    classList['mat-autocomplete-visible'] = this.showPanel;\n    classList['mat-autocomplete-hidden'] = !this.showPanel;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n  selector: '[matAutocompleteOrigin]',\n  exportAs: 'matAutocompleteOrigin',\n})\nexport class MatAutocompleteOrigin {\n  constructor(\n      /** Reference to the element on which the directive is applied. */\n      public elementRef: ElementRef<HTMLElement>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n  ConnectedPosition,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {filter, take, switchMap, delay, tap, map} from 'rxjs/operators';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  MatOption,\n  MatOptionSelectionChange,\n} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {Subscription, defer, fromEvent, merge, of as observableOf, Subject, Observable} from 'rxjs';\nimport {MatAutocomplete} from './autocomplete';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n\n/** The height of each autocomplete option. */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\n\n/** The total height of the autocomplete panel. */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-autocomplete-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nexport function getMatAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n               'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n\n@Directive({\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    '[attr.autocomplete]': 'autocompleteAttribute',\n    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n    '[attr.aria-haspopup]': '!autocompleteDisabled',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'matAutocompleteTrigger',\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class MatAutocompleteTrigger implements ControlValueAccessor, OnChanges, OnDestroy {\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _componentDestroyed = false;\n  private _autocompleteDisabled = false;\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  /** Strategy that is used to position the panel. */\n  private _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** Whether or not the label state is being overridden. */\n  private _manuallyFloatingLabel = false;\n\n  /** The subscription for closing actions (some are bound to document). */\n  private _closingActionsSubscription: Subscription;\n\n  /** Subscription to viewport size changes. */\n  private _viewportSubscription = Subscription.EMPTY;\n\n  /**\n   * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n   * closed autocomplete from being reopened if the user switches to another browser tab and then\n   * comes back.\n   */\n  private _canOpenOnNextFocus = true;\n\n  /** Stream of keyboard events that can close the panel. */\n  private readonly _closeKeyEventStream = new Subject<void>();\n\n  /**\n   * Event handler for when the window is blurred. Needs to be an\n   * arrow function in order to preserve the context.\n   */\n  private _windowBlurHandler = () => {\n    // If the user blurred the window while the autocomplete is focused, it means that it'll be\n    // refocused when they come back. In this case we want to skip the first focus event, if the\n    // pane was closed, in order to avoid reopening it unintentionally.\n    this._canOpenOnNextFocus =\n        this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n\n  /** The autocomplete panel to be attached to this trigger. */\n  @Input('matAutocomplete') autocomplete: MatAutocomplete;\n\n  /**\n   * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n   * will render the panel underneath the trigger if there is enough space for it to fit in\n   * the viewport, otherwise the panel will be shown above it. If the position is set to\n   * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n   * whether it fits completely in the viewport.\n   */\n  @Input('matAutocompletePosition') position: 'auto' | 'above' | 'below' = 'auto';\n\n  /**\n   * Reference relative to which to position the autocomplete panel.\n   * Defaults to the autocomplete trigger element.\n   */\n  @Input('matAutocompleteConnectedTo') connectedTo: MatAutocompleteOrigin;\n\n  /**\n   * `autocomplete` attribute to be set on the input element.\n   * @docs-private\n   */\n  @Input('autocomplete') autocompleteAttribute: string = 'off';\n\n  /**\n   * Whether the autocomplete is disabled. When disabled, the element will\n   * act as a regular input and the user won't be able to open the panel.\n   */\n  @Input('matAutocompleteDisabled')\n  get autocompleteDisabled(): boolean { return this._autocompleteDisabled; }\n  set autocompleteDisabled(value: boolean) {\n    this._autocompleteDisabled = coerceBooleanProperty(value);\n  }\n\n  constructor(private _element: ElementRef<HTMLInputElement>, private _overlay: Overlay,\n              private _viewContainerRef: ViewContainerRef,\n              private _zone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dir: Directionality,\n              @Optional() @Host() private _formField: MatFormField,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              // @breaking-change 8.0.0 Make `_viewportRuler` required.\n              private _viewportRuler?: ViewportRuler) {\n\n    if (typeof window !== 'undefined') {\n      _zone.runOutsideAngular(() => {\n        window.addEventListener('blur', this._windowBlurHandler);\n      });\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['position'] && this._positionStrategy) {\n      this._setStrategyPositions(this._positionStrategy);\n\n      if (this.panelOpen) {\n        this._overlayRef!.updatePosition();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('blur', this._windowBlurHandler);\n    }\n\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n  }\n\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen(): boolean {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  private _overlayAttached: boolean = false;\n\n  /** Opens the autocomplete suggestion panel. */\n  openPanel(): void {\n    this._attachOverlay();\n    this._floatLabel();\n  }\n\n  /** Closes the autocomplete suggestion panel. */\n  closePanel(): void {\n    this._resetLabel();\n\n    if (!this._overlayAttached) {\n      return;\n    }\n\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      this.autocomplete.closed.emit();\n    }\n\n    this.autocomplete._isOpen = this._overlayAttached = false;\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n   * within the viewport.\n   */\n  updatePosition(): void {\n    if (this._overlayAttached) {\n      this._overlayRef!.updatePosition();\n    }\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions(): Observable<MatOptionSelectionChange|null> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)),\n      this._closeKeyEventStream,\n      this._getOutsideClickStream(),\n      this._overlayRef ?\n          this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n          observableOf()\n    ).pipe(\n      // Normalize the output so we return a consistent type.\n      map(event => event instanceof MatOptionSelectionChange ? event : null)\n    );\n  }\n\n  /** Stream of autocomplete option selections. */\n  readonly optionSelections: Observable<MatOptionSelectionChange> = defer(() => {\n    if (this.autocomplete && this.autocomplete.options) {\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n    }\n\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._zone.onStable\n        .asObservable()\n        .pipe(take(1), switchMap(() => this.optionSelections));\n  }) as Observable<MatOptionSelectionChange>;\n\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption(): MatOption | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  private _getOutsideClickStream(): Observable<any> {\n    return merge(\n      fromEvent(this._document, 'click') as Observable<MouseEvent>,\n      fromEvent(this._document, 'touchend') as Observable<TouchEvent>\n    )\n    .pipe(filter(event => {\n      const clickTarget = event.target as HTMLElement;\n      const formField = this._formField ?\n          this._formField._elementRef.nativeElement : null;\n\n      return this._overlayAttached &&\n              clickTarget !== this._element.nativeElement &&\n              (!formField || !formField.contains(clickTarget)) &&\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else if (this.autocomplete) {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (this.panelOpen || keyCode === TAB) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._canOpen()) {\n        this.openPanel();\n      }\n\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption();\n      }\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    let target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value == '' ? null : parseFloat(value);\n    }\n\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._previousValue !== value) {\n      this._previousValue = value;\n      this._onChange(value);\n\n      if (this._canOpen() && this._document.activeElement === event.target) {\n        this.openPanel();\n      }\n    }\n  }\n\n  _handleFocus(): void {\n    if (!this._canOpenOnNextFocus) {\n      this._canOpenOnNextFocus = true;\n    } else if (this._canOpen()) {\n      this._previousValue = this._element.nativeElement.value;\n      this._attachOverlay();\n      this._floatLabel(true);\n    }\n  }\n\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  private _floatLabel(shouldAnimate = false): void {\n    if (this._formField && this._formField.floatLabel === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockLabel();\n      } else {\n        this._formField.floatLabel = 'always';\n      }\n\n      this._manuallyFloatingLabel = true;\n    }\n  }\n\n  /** If the label has been manually elevated, return it to its normal state. */\n  private _resetLabel(): void  {\n    if (this._manuallyFloatingLabel) {\n      this._formField.floatLabel = 'auto';\n      this._manuallyFloatingLabel = false;\n    }\n  }\n\n  /**\n   * Given that we are not actually focusing active options, we must manually adjust scroll\n   * to reveal options below the fold. First, we find the offset of the option from the top\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n   * the panel height + the option height, so the active option will be just visible at the\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\n   * not adjusted.\n   */\n  private _scrollToOption(): void {\n    const index = this.autocomplete._keyManager.activeItemIndex || 0;\n    const labelCount = _countGroupLabelsBeforeOption(index,\n        this.autocomplete.options, this.autocomplete.optionGroups);\n\n    const newScrollPosition = _getOptionScrollPosition(\n      index + labelCount,\n      AUTOCOMPLETE_OPTION_HEIGHT,\n      this.autocomplete._getScrollTop(),\n      AUTOCOMPLETE_PANEL_HEIGHT\n    );\n\n    this.autocomplete._setScrollTop(newScrollPosition);\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  private _subscribeToClosingActions(): Subscription {\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(\n      tap(() => this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0)\n    );\n\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges)\n        .pipe(\n            // create a new stream of panelClosingActions, replacing any previous streams\n            // that were created, and flatten it so our stream only emits closing events...\n            switchMap(() => {\n              const wasOpen = this.panelOpen;\n              this._resetActiveItem();\n              this.autocomplete._setVisibility();\n\n              if (this.panelOpen) {\n                this._overlayRef!.updatePosition();\n\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                  this.autocomplete.opened.emit();\n                }\n              }\n\n              return this.panelClosingActions;\n            }),\n            // when the first closing event occurs...\n            take(1))\n        // set the value, close the panel, and complete.\n        .subscribe(event => this._setValueAndClose(event));\n  }\n\n  /** Destroys the autocomplete suggestion panel. */\n  private _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n    const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n      this.autocomplete.displayWith(value) :\n      value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n\n    this._previousValue = inputValue;\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: MatOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: MatOption) {\n    this.autocomplete.options.forEach(option => {\n      if (option != skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getMatAutocompleteMissingPanelError();\n    }\n\n    let overlayRef = this._overlayRef;\n\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      overlayRef = this._overlay.create(this._getOverlayConfig());\n      this._overlayRef = overlayRef;\n\n      // Use the `keydownEvents` in order to take advantage of\n      // the overlay event targeting provided by the CDK overlay.\n      overlayRef.keydownEvents().subscribe(event => {\n        // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n        // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n        if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n          this._resetActiveItem();\n          this._closeKeyEventStream.next();\n        }\n      });\n\n      if (this._viewportRuler) {\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && overlayRef) {\n            overlayRef.updateSize({width: this._getPanelWidth()});\n          }\n        });\n      }\n    } else {\n      // Update the trigger, panel width and direction, in case anything has changed.\n      this._positionStrategy.setOrigin(this._getConnectedElement());\n      overlayRef.updateSize({width: this._getPanelWidth()});\n    }\n\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    const wasOpen = this.panelOpen;\n\n    this.autocomplete._setVisibility();\n    this.autocomplete._isOpen = this._overlayAttached = true;\n\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this.autocomplete.opened.emit();\n    }\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      width: this._getPanelWidth(),\n      direction: this._dir\n    });\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(this._getConnectedElement())\n      .withFlexibleDimensions(false)\n      .withPush(false);\n\n    this._setStrategyPositions(strategy);\n    this._positionStrategy = strategy;\n    return strategy;\n  }\n\n  /** Sets the positions on a position strategy based on the directive's input state. */\n  private _setStrategyPositions(positionStrategy: FlexibleConnectedPositionStrategy) {\n    const belowPosition: ConnectedPosition = {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    };\n    const abovePosition: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n\n      // The overlay edge connected to the trigger should have squared corners, while\n      // the opposite end has rounded corners. We apply a CSS class to swap the\n      // border-radius based on the overlay position.\n      panelClass: 'mat-autocomplete-panel-above'\n    };\n\n    let positions: ConnectedPosition[];\n\n    if (this.position === 'above') {\n      positions = [abovePosition];\n    } else if (this.position === 'below') {\n      positions = [belowPosition];\n    } else {\n      positions = [belowPosition, abovePosition];\n    }\n\n    positionStrategy.withPositions(positions);\n  }\n\n  private _getConnectedElement(): ElementRef {\n    if (this.connectedTo) {\n      return this.connectedTo.elementRef;\n    }\n\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n\n  private _getPanelWidth(): number | string {\n    return this.autocomplete.panelWidth || this._getHostWidth();\n  }\n\n  /** Returns the width of the input element, so the panel width can match it. */\n  private _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Resets the active item to -1 so arrow events will activate the\n   * correct options, or to 0 if the consumer opted into it.\n   */\n  private _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n  }\n\n  /** Determines whether the panel can be opened. */\n  private _canOpen(): boolean {\n    const element = this._element.nativeElement;\n    return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MatOptionModule, MatCommonModule} from '@angular/material/core';\nimport {MatAutocomplete} from './autocomplete';\nimport {\n  MatAutocompleteTrigger,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './autocomplete-trigger';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n@NgModule({\n  imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n  exports: [\n    MatAutocomplete,\n    MatOptionModule,\n    MatAutocompleteTrigger,\n    MatAutocompleteOrigin,\n    MatCommonModule\n  ],\n  declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class MatAutocompleteModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AriaDescriber} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  isDevMode,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled, ThemePalette} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\nlet nextId = 0;\n\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nclass MatBadgeBase {}\n\nconst _MatBadgeMixinBase:\n    CanDisableCtor & typeof MatBadgeBase = mixinDisabled(MatBadgeBase);\n\nexport type MatBadgePosition = 'above after' | 'above before' | 'below before' | 'below after';\nexport type MatBadgeSize = 'small' | 'medium' | 'large';\n\n/** Directive to display a text badge. */\n@Directive({\n  selector: '[matBadge]',\n  inputs: ['disabled: matBadgeDisabled'],\n  host: {\n    'class': 'mat-badge',\n    '[class.mat-badge-overlap]': 'overlap',\n    '[class.mat-badge-above]': 'isAbove()',\n    '[class.mat-badge-below]': '!isAbove()',\n    '[class.mat-badge-before]': '!isAfter()',\n    '[class.mat-badge-after]': 'isAfter()',\n    '[class.mat-badge-small]': 'size === \"small\"',\n    '[class.mat-badge-medium]': 'size === \"medium\"',\n    '[class.mat-badge-large]': 'size === \"large\"',\n    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n    '[class.mat-badge-disabled]': 'disabled',\n  },\n})\nexport class MatBadge extends _MatBadgeMixinBase implements OnDestroy, OnChanges, CanDisable {\n  /** Whether the badge has any content. */\n  _hasContent = false;\n\n  /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n  @Input('matBadgeColor')\n  get color(): ThemePalette { return this._color; }\n  set color(value: ThemePalette) {\n    this._setColor(value);\n    this._color = value;\n  }\n  private _color: ThemePalette = 'primary';\n\n  /** Whether the badge should overlap its contents or not */\n  @Input('matBadgeOverlap')\n  get overlap(): boolean { return this._overlap; }\n  set overlap(val: boolean) {\n    this._overlap = coerceBooleanProperty(val);\n  }\n  private _overlap: boolean = true;\n\n  /**\n   * Position the badge should reside.\n   * Accepts any combination of 'above'|'below' and 'before'|'after'\n   */\n  @Input('matBadgePosition') position: MatBadgePosition = 'above after';\n\n  /** The content for the badge */\n  @Input('matBadge') content: string;\n\n  /** Message used to describe the decorated element via aria-describedby */\n  @Input('matBadgeDescription')\n  get description(): string { return this._description; }\n  set description(newDescription: string) {\n    if (newDescription !== this._description) {\n      const badgeElement = this._badgeElement;\n      this._updateHostAriaDescription(newDescription, this._description);\n      this._description = newDescription;\n\n      if (badgeElement) {\n        newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n            badgeElement.removeAttribute('aria-label');\n      }\n    }\n  }\n  private _description: string;\n\n  /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n  @Input('matBadgeSize') size: MatBadgeSize = 'medium';\n\n  /** Whether the badge is hidden. */\n  @Input('matBadgeHidden')\n  get hidden(): boolean { return this._hidden; }\n  set hidden(val: boolean) {\n    this._hidden = coerceBooleanProperty(val);\n  }\n  private _hidden: boolean;\n\n  /** Unique id for the badge */\n  _id: number = nextId++;\n\n  private _badgeElement: HTMLElement | undefined;\n\n  constructor(\n      private _ngZone: NgZone,\n      private _elementRef: ElementRef<HTMLElement>,\n      private _ariaDescriber: AriaDescriber,\n      private _renderer: Renderer2,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) private _animationMode?: string) {\n      super();\n\n      if (isDevMode()) {\n        const nativeElement = _elementRef.nativeElement;\n        if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n          throw Error('matBadge must be attached to an element node.');\n        }\n      }\n    }\n\n  /** Whether the badge is above the host or not */\n  isAbove(): boolean {\n    return this.position.indexOf('below') === -1;\n  }\n\n  /** Whether the badge is after the host or not */\n  isAfter(): boolean {\n    return this.position.indexOf('before') === -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const contentChange = changes['content'];\n\n    if (contentChange) {\n      const value = contentChange.currentValue;\n      this._hasContent = value != null && `${value}`.trim().length > 0;\n      this._updateTextContent();\n    }\n  }\n\n  ngOnDestroy() {\n    const badgeElement = this._badgeElement;\n\n    if (badgeElement) {\n      if (this.description) {\n        this._ariaDescriber.removeDescription(badgeElement, this.description);\n      }\n\n      // When creating a badge through the Renderer, Angular will keep it in an index.\n      // We have to destroy it ourselves, otherwise it'll be retained in memory.\n      if (this._renderer.destroyNode) {\n        this._renderer.destroyNode(badgeElement);\n      }\n    }\n  }\n\n  /**\n   * Gets the element into which the badge's content is being rendered.\n   * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n   */\n  getBadgeElement(): HTMLElement | undefined {\n    return this._badgeElement;\n  }\n\n  /** Injects a span element into the DOM with the content. */\n  private _updateTextContent(): HTMLSpanElement {\n    if (!this._badgeElement) {\n      this._badgeElement = this._createBadgeElement();\n    } else {\n      this._badgeElement.textContent = this.content;\n    }\n    return this._badgeElement;\n  }\n\n  /** Creates the badge element */\n  private _createBadgeElement(): HTMLElement {\n    const badgeElement = this._renderer.createElement('span');\n    const activeClass = 'mat-badge-active';\n    const contentClass = 'mat-badge-content';\n\n    // Clear any existing badges which may have persisted from a server-side render.\n    this._clearExistingBadges(contentClass);\n    badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n    badgeElement.classList.add(contentClass);\n    badgeElement.textContent = this.content;\n\n    if (this._animationMode === 'NoopAnimations') {\n      badgeElement.classList.add('_mat-animation-noopable');\n    }\n\n    if (this.description) {\n      badgeElement.setAttribute('aria-label', this.description);\n    }\n\n    this._elementRef.nativeElement.appendChild(badgeElement);\n\n    // animate in after insertion\n    if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          badgeElement.classList.add(activeClass);\n        });\n      });\n    } else {\n      badgeElement.classList.add(activeClass);\n    }\n\n    return badgeElement;\n  }\n\n  /** Sets the aria-label property on the element */\n  private _updateHostAriaDescription(newDescription: string, oldDescription: string): void {\n    // ensure content available before setting label\n    const content = this._updateTextContent();\n\n    if (oldDescription) {\n      this._ariaDescriber.removeDescription(content, oldDescription);\n    }\n\n    if (newDescription) {\n      this._ariaDescriber.describe(content, newDescription);\n    }\n  }\n\n  /** Adds css theme class given the color to the component host */\n  private _setColor(colorPalette: ThemePalette) {\n    if (colorPalette !== this._color) {\n      if (this._color) {\n        this._elementRef.nativeElement.classList.remove(`mat-badge-${this._color}`);\n      }\n      if (colorPalette) {\n        this._elementRef.nativeElement.classList.add(`mat-badge-${colorPalette}`);\n      }\n    }\n  }\n\n  /** Clears any existing badges that might be left over from server-side rendering. */\n  private _clearExistingBadges(cssClass: string) {\n    const element = this._elementRef.nativeElement;\n    let childCount = element.children.length;\n\n    // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n    while (childCount--) {\n      const currentChild = element.children[childCount];\n\n      if (currentChild.classList.contains(cssClass)) {\n        element.removeChild(currentChild);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MatBadge} from './badge';\n\n\n@NgModule({\n  imports: [\n    A11yModule,\n    MatCommonModule\n  ],\n  exports: [MatBadge],\n  declarations: [MatBadge],\n})\nexport class MatBadgeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nexport const MAT_BOTTOM_SHEET_DATA = new InjectionToken<any>('MatBottomSheetData');\n\n/**\n * Configuration used when opening a bottom sheet.\n */\nexport class MatBottomSheetConfig<D = any> {\n  /** The view container to place the overlay for the bottom sheet into. */\n  viewContainerRef?: ViewContainerRef;\n\n  /** Extra CSS classes to be added to the bottom sheet container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the bottom sheet. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Whether the bottom sheet has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop. */\n  backdropClass?: string;\n\n  /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n  disableClose?: boolean = false;\n\n  /** Aria label to assign to the bottom sheet element. */\n  ariaLabel?: string | null = null;\n\n  /**\n   * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  // Note that this is disabled by default, because while the a11y recommendations are to focus\n  // the first focusable element, doing so prevents screen readers from reading out the\n  // rest of the bottom sheet content.\n  /** Whether the bottom sheet should focus the first focusable element on open. */\n  autoFocus?: boolean = false;\n\n  /**\n   * Whether the bottom sheet should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus?: boolean = true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\n/** Animations used by the Material bottom sheet. */\nexport const matBottomSheetAnimations: {\n  readonly bottomSheetState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [\n    state('void, hidden', style({transform: 'translateY(100%)'})),\n    state('visible', style({transform: 'translateY(0%)'})),\n    transition('visible => void, visible => hidden',\n        animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n    transition('void => visible',\n        animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  ViewChild,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  EventEmitter,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n  CdkPortalOutlet,\n} from '@angular/cdk/portal';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {MatBottomSheetConfig} from './bottom-sheet-config';\nimport {matBottomSheetAnimations} from './bottom-sheet-animations';\nimport {Subscription} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-bottom-sheet-container',\n  templateUrl: 'bottom-sheet-container.html',\n  styleUrls: ['bottom-sheet-container.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [matBottomSheetAnimations.bottomSheetState],\n  host: {\n    'class': 'mat-bottom-sheet-container',\n    'tabindex': '-1',\n    'role': 'dialog',\n    'aria-modal': 'true',\n    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n    '[@state]': '_animationState',\n    '(@state.start)': '_onAnimationStart($event)',\n    '(@state.done)': '_onAnimationDone($event)'\n  },\n})\nexport class MatBottomSheetContainer extends BasePortalOutlet implements OnDestroy {\n  private _breakpointSubscription: Subscription;\n\n  /** The portal outlet inside of this container into which the content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** The state of the bottom sheet animations. */\n  _animationState: 'void' | 'visible' | 'hidden' = 'void';\n\n  /** Emits whenever the state of the animation changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** The class that traps and manages focus within the bottom sheet. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the bottom sheet was opened. */\n  private _elementFocusedBeforeOpened: HTMLElement | null = null;\n\n  /** Server-side rendering-compatible reference to the global document object. */\n  private _document: Document;\n\n  /** Whether the component has been destroyed. */\n  private _destroyed: boolean;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    breakpointObserver: BreakpointObserver,\n    @Optional() @Inject(DOCUMENT) document: any,\n    /** The bottom sheet configuration. */\n    public bottomSheetConfig: MatBottomSheetConfig) {\n    super();\n\n    this._document = document;\n    this._breakpointSubscription = breakpointObserver\n      .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n      .subscribe(() => {\n        this._toggleClass('mat-bottom-sheet-container-medium',\n            breakpointObserver.isMatched(Breakpoints.Medium));\n        this._toggleClass('mat-bottom-sheet-container-large',\n            breakpointObserver.isMatched(Breakpoints.Large));\n        this._toggleClass('mat-bottom-sheet-container-xlarge',\n            breakpointObserver.isMatched(Breakpoints.XLarge));\n      });\n  }\n\n  /** Attach a component portal as content to this bottom sheet container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this bottom sheet container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Begin animation of bottom sheet entrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the bottom sheet exiting from view. */\n  exit(): void {\n    if (!this._destroyed) {\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n    this._destroyed = true;\n  }\n\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'hidden') {\n      this._restoreFocus();\n    } else if (event.toState === 'visible') {\n      this._trapFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  private _toggleClass(cssClass: string, add: boolean) {\n    const classList = this._elementRef.nativeElement.classList;\n    add ? classList.add(cssClass) : classList.remove(cssClass);\n  }\n\n  private _validatePortalAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach bottom sheet content after content is already attached');\n    }\n  }\n\n  private _setPanelClass() {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const panelClass = this.bottomSheetConfig.panelClass;\n\n    if (Array.isArray(panelClass)) {\n      // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n      panelClass.forEach(cssClass => element.classList.add(cssClass));\n    } else if (panelClass) {\n      element.classList.add(panelClass);\n    }\n  }\n\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    if (this.bottomSheetConfig.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the bottom sheet was opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n  private _savePreviouslyFocusedElement() {\n    this._elementFocusedBeforeOpened = this._document.activeElement as HTMLElement;\n\n    // The `focus` method isn't available during server-side rendering.\n    if (this._elementRef.nativeElement.focus) {\n      Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n    PortalModule,\n  ],\n  exports: [MatBottomSheetContainer, MatCommonModule],\n  declarations: [MatBottomSheetContainer],\n  entryComponents: [MatBottomSheetContainer],\n})\nexport class MatBottomSheetModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location} from '@angular/common';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {merge, Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\n\n\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nexport class MatBottomSheetRef<T = any, R = any> {\n  /** Instance of the component making up the content of the bottom sheet. */\n  instance: T;\n\n  /**\n   * Instance of the component into which the bottom sheet content is projected.\n   * @docs-private\n   */\n  containerInstance: MatBottomSheetContainer;\n\n  /** Whether the user is allowed to close the bottom sheet. */\n  disableClose: boolean | undefined;\n\n  /** Subject for notifying the user that the bottom sheet has been dismissed. */\n  private readonly _afterDismissed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Result to be passed down to the `afterDismissed` stream. */\n  private _result: R | undefined;\n\n  constructor(\n    containerInstance: MatBottomSheetContainer,\n    private _overlayRef: OverlayRef,\n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location?: Location) {\n    this.containerInstance = containerInstance;\n    this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n\n    // Emit when opening animation completes\n    containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'visible'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    containerInstance._animationStateChanged\n        .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n        .subscribe(() => {\n          _overlayRef.dispose();\n        });\n\n    _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n      this._afterDismissed.next(this._result);\n      this._afterDismissed.complete();\n    });\n\n    merge(\n      _overlayRef.backdropClick(),\n      _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))\n    ).subscribe(() => {\n      if (!this.disableClose) {\n        this.dismiss();\n      }\n    });\n  }\n\n  /**\n   * Dismisses the bottom sheet.\n   * @param result Data to be passed back to the bottom sheet opener.\n   */\n  dismiss(result?: R): void {\n    if (!this._afterDismissed.closed) {\n      // Transition the backdrop in parallel to the bottom sheet.\n      this.containerInstance._animationStateChanged.pipe(\n        filter(event => event.phaseName === 'start'),\n        take(1)\n      ).subscribe(() => this._overlayRef.detachBackdrop());\n\n      this._result = result;\n      this.containerInstance.exit();\n    }\n  }\n\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\n  afterDismissed(): Observable<R | undefined> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  Injectable,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  InjectionToken,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {of as observableOf} from 'rxjs';\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig} from './bottom-sheet-config';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\nimport {MatBottomSheetModule} from './bottom-sheet-module';\nimport {MatBottomSheetRef} from './bottom-sheet-ref';\n\n\n/** Injection token that can be used to specify default bottom sheet options. */\nexport const MAT_BOTTOM_SHEET_DEFAULT_OPTIONS =\n    new InjectionToken<MatBottomSheetConfig>('mat-bottom-sheet-default-options');\n\n/**\n * Service to trigger Material Design bottom sheets.\n */\n@Injectable({providedIn: MatBottomSheetModule})\nexport class MatBottomSheet implements OnDestroy {\n  private _bottomSheetRefAtThisLevel: MatBottomSheetRef<any> | null = null;\n\n  /** Reference to the currently opened bottom sheet. */\n  get _openedBottomSheetRef(): MatBottomSheetRef<any> | null {\n    const parent = this._parentBottomSheet;\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n  }\n\n  set _openedBottomSheetRef(value: MatBottomSheetRef<any> | null) {\n    if (this._parentBottomSheet) {\n      this._parentBottomSheet._openedBottomSheetRef = value;\n    } else {\n      this._bottomSheetRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Optional() @SkipSelf() private _parentBottomSheet: MatBottomSheet,\n      @Optional() private _location?: Location,\n      @Optional() @Inject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS)\n          private _defaultOptions?: MatBottomSheetConfig) {}\n\n  open<T, D = any, R = any>(component: ComponentType<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\n  open<T, D = any, R = any>(template: TemplateRef<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\n\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R> {\n\n    const _config =\n        _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n    const overlayRef = this._createOverlay(_config);\n    const container = this._attachContainer(overlayRef, _config);\n    const ref = new MatBottomSheetRef<T, R>(container, overlayRef, this._location);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n        $implicit: _config.data,\n        bottomSheetRef: ref\n      } as any));\n    } else {\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined,\n            this._createInjector(_config, ref));\n      const contentRef = container.attachComponentPortal(portal);\n      ref.instance = contentRef.instance;\n    }\n\n    // When the bottom sheet is dismissed, clear the reference to it.\n    ref.afterDismissed().subscribe(() => {\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n      if (this._openedBottomSheetRef == ref) {\n        this._openedBottomSheetRef = null;\n      }\n    });\n\n    if (this._openedBottomSheetRef) {\n      // If a bottom sheet is already in view, dismiss it and enter the\n      // new bottom sheet after exit animation is complete.\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n      this._openedBottomSheetRef.dismiss();\n    } else {\n      // If no bottom sheet is in view, enter the new bottom sheet.\n      ref.containerInstance.enter();\n    }\n\n    this._openedBottomSheetRef = ref;\n\n    return ref;\n  }\n\n  /**\n   * Dismisses the currently-visible bottom sheet.\n   */\n  dismiss(): void {\n    if (this._openedBottomSheetRef) {\n      this._openedBottomSheetRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._bottomSheetRefAtThisLevel) {\n      this._bottomSheetRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the bottom sheet container component to the overlay.\n   */\n  private _attachContainer(overlayRef: OverlayRef,\n                           config: MatBottomSheetConfig): MatBottomSheetContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatBottomSheetConfig, config]\n    ]));\n\n    const containerPortal =\n        new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<MatBottomSheetContainer> = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified bottom sheet config.\n   */\n  private _createOverlay(config: MatBottomSheetConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig({\n      direction: config.direction,\n      hasBackdrop: config.hasBackdrop,\n      disposeOnNavigation: config.closeOnNavigation,\n      maxWidth: '100%',\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position()\n        .global()\n        .centerHorizontally()\n        .bottom('0')\n    });\n\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a bottom sheet component.\n   * @param config Config that was used to create the bottom sheet.\n   * @param bottomSheetRef Reference to the bottom sheet.\n   */\n  private _createInjector<T>(config: MatBottomSheetConfig,\n                             bottomSheetRef: MatBottomSheetRef<T>): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injectionTokens = new WeakMap<any, any>([\n      [MatBottomSheetRef, bottomSheetRef],\n      [MAT_BOTTOM_SHEET_DATA, config.data]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n}\n\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults: MatBottomSheetConfig,\n                              config?: MatBottomSheetConfig): MatBottomSheetConfig {\n  return {...defaults, ...config};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  CanColorCtor,\n  CanDisableCtor,\n  CanDisableRippleCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n  'mat-button',\n  'mat-flat-button',\n  'mat-icon-button',\n  'mat-raised-button',\n  'mat-stroked-button',\n  'mat-mini-fab',\n  'mat-fab',\n];\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatButtonMixinBase: CanDisableRippleCtor & CanDisableCtor & CanColorCtor &\n    typeof MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n\n/**\n * Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n  exportAs: 'matButton',\n  host: {\n    '[attr.disabled]': 'disabled || null',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends _MatButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\n\n  /** Whether the button is round. */\n  readonly isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n\n  /** Whether the button is icon button. */\n  readonly isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\n\n  /** Reference to the MatRipple instance of the button. */\n  @ViewChild(MatRipple, {static: false}) ripple: MatRipple;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string) {\n    super(elementRef);\n\n    // For each of the variant selectors that is prevent in the button's host\n    // attributes, add the correct corresponding class.\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this._hasHostAttributes(attr)) {\n        (elementRef.nativeElement as HTMLElement).classList.add(attr);\n      }\n    }\n\n    this._focusMonitor.monitor(this._elementRef, true);\n\n    if (this.isRoundButton) {\n      this.color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._getHostElement().focus();\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  _hasHostAttributes(...attributes: string[]) {\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n  }\n}\n\n/**\n * Material design anchor button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n  exportAs: 'matButton, matAnchor',\n  host: {\n    // Note that we ignore the user-specified tabindex when it's disabled for\n    // consistency with the `mat-button` applied on native buttons where even\n    // though they have an index, they're not tabbable.\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatButton {\n  /** Tabindex of the button. */\n  @Input() tabIndex: number;\n\n  constructor(\n    focusMonitor: FocusMonitor,\n    elementRef: ElementRef,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode: string) {\n    super(elementRef, focusMonitor, animationMode);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatAnchor, MatButton} from './button';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatButton,\n    MatAnchor,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatButton,\n    MatAnchor,\n  ],\n})\nexport class MatButtonModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanDisableRipple,\n  mixinDisableRipple,\n  CanDisableRippleCtor,\n} from '@angular/material/core';\n\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n\n/** Possible appearance styles for the button toggle. */\nexport type MatButtonToggleAppearance = 'legacy' | 'standard';\n\n/**\n * Represents the default options for the button toggle that can be configured\n * using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n */\nexport interface MatButtonToggleDefaultOptions {\n  appearance?: MatButtonToggleAppearance;\n}\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nexport const MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS =\n    new InjectionToken<MatButtonToggleDefaultOptions>('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n\n\n\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n\n/**\n * @deprecated Use `MatButtonToggleGroup` instead.\n * @breaking-change 8.0.0\n */\nexport class MatButtonToggleGroupMultiple {}\n\nlet _uniqueIdCounter = 0;\n\n/** Change event object emitted by MatButtonToggle. */\nexport class MatButtonToggleChange {\n  constructor(\n    /** The MatButtonToggle that emits the event. */\n    public source: MatButtonToggle,\n\n    /** The value assigned to the MatButtonToggle. */\n    public value: any) {}\n}\n\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\n@Directive({\n  selector: 'mat-button-toggle-group',\n  providers: [\n    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n    {provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup},\n  ],\n  host: {\n    'role': 'group',\n    'class': 'mat-button-toggle-group',\n    '[attr.aria-disabled]': 'disabled',\n    '[class.mat-button-toggle-vertical]': 'vertical',\n    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n  },\n  exportAs: 'matButtonToggleGroup',\n})\nexport class MatButtonToggleGroup implements ControlValueAccessor, OnInit, AfterContentInit {\n  private _vertical = false;\n  private _multiple = false;\n  private _disabled = false;\n  private _selectionModel: SelectionModel<MatButtonToggle>;\n\n  /**\n   * Reference to the raw value that the consumer tried to assign. The real\n   * value will exclude any values from this one that don't correspond to a\n   * toggle. Useful for the cases where the value is assigned before the toggles\n   * have been initialized or at the same that they're being swapped out.\n   */\n  private _rawValue: any;\n\n  /**\n   * The method to be called in order to update ngModel.\n   * Now `ngModel` binding is not supported in multiple selection mode.\n   */\n  _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  _onTouched: () => any = () => {};\n\n  /** Child button toggle buttons. */\n  @ContentChildren(forwardRef(() => MatButtonToggle)) _buttonToggles: QueryList<MatButtonToggle>;\n\n  /** The appearance for all the buttons in the group. */\n  @Input() appearance: MatButtonToggleAppearance;\n\n  /** `name` attribute for the underlying `input` element. */\n  @Input()\n  get name(): string { return this._name; }\n  set name(value: string) {\n    this._name = value;\n\n    if (this._buttonToggles) {\n      this._buttonToggles.forEach(toggle => {\n        toggle.name = this._name;\n        toggle._markForCheck();\n      });\n    }\n  }\n  private _name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n\n  /** Whether the toggle group is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n\n  /** Value of the toggle group. */\n  @Input()\n  get value(): any {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n\n    if (this.multiple) {\n      return selected.map(toggle => toggle.value);\n    }\n\n    return selected[0] ? selected[0].value : undefined;\n  }\n  set value(newValue: any) {\n    this._setSelectionByValue(newValue);\n    this.valueChange.emit(this.value);\n  }\n\n  /**\n   * Event that emits whenever the value of the group changes.\n   * Used to facilitate two-way data binding.\n   * @docs-private\n   */\n  @Output() readonly valueChange = new EventEmitter<any>();\n\n  /** Selected button toggles in the group. */\n  get selected() {\n    const selected = this._selectionModel.selected;\n    return this.multiple ? selected : (selected[0] || null);\n  }\n\n  /** Whether multiple button toggles can be selected. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n\n  /** Whether multiple button toggle group is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    if (this._buttonToggles) {\n      this._buttonToggles.forEach(toggle => toggle._markForCheck());\n    }\n  }\n\n  /** Event emitted when the group's value changes. */\n  @Output() readonly change: EventEmitter<MatButtonToggleChange> =\n      new EventEmitter<MatButtonToggleChange>();\n\n  constructor(\n    private _changeDetector: ChangeDetectorRef,\n    @Optional() @Inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS)\n        defaultOptions?: MatButtonToggleDefaultOptions) {\n\n      this.appearance =\n          defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatButtonToggle>(this.multiple, undefined, false);\n  }\n\n  ngAfterContentInit() {\n    this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set to the model.\n   */\n  writeValue(value: any) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent(): void {\n    const selected = this.selected;\n    const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n    const event = new MatButtonToggleChange(source!, this.value);\n    this._controlValueAccessorChangeFn(event.value);\n    this.change.emit(event);\n  }\n\n  /**\n   * Syncs a button toggle's selected state with the model value.\n   * @param toggle Toggle to be synced.\n   * @param select Whether the toggle should be selected.\n   * @param isUserInput Whether the change was a result of a user interaction.\n   * @param deferEvents Whether to defer emitting the change events.\n   */\n  _syncButtonToggle(toggle: MatButtonToggle,\n                    select: boolean,\n                    isUserInput = false,\n                    deferEvents = false) {\n    // Deselect the currently-selected toggle, if we're in single-selection\n    // mode and the button being toggled isn't selected at the moment.\n    if (!this.multiple && this.selected && !toggle.checked) {\n      (this.selected as MatButtonToggle).checked = false;\n    }\n\n    if (select) {\n      this._selectionModel.select(toggle);\n    } else {\n      this._selectionModel.deselect(toggle);\n    }\n\n    // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n    // the side-effect is that we may end up updating the model value out of sequence in others\n    // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n    if (deferEvents) {\n      Promise.resolve(() => this._updateModelValue(isUserInput));\n    } else {\n      this._updateModelValue(isUserInput);\n    }\n  }\n\n  /** Checks whether a button toggle is selected. */\n  _isSelected(toggle: MatButtonToggle) {\n    return this._selectionModel.isSelected(toggle);\n  }\n\n  /** Determines whether a button toggle should be checked on init. */\n  _isPrechecked(toggle: MatButtonToggle) {\n    if (typeof this._rawValue === 'undefined') {\n      return false;\n    }\n\n    if (this.multiple && Array.isArray(this._rawValue)) {\n      return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n    }\n\n    return toggle.value === this._rawValue;\n  }\n\n  /** Updates the selection state of the toggles in the group based on a value. */\n  private _setSelectionByValue(value: any|any[]) {\n    this._rawValue = value;\n\n    if (!this._buttonToggles) {\n      return;\n    }\n\n    if (this.multiple && value) {\n      if (!Array.isArray(value)) {\n        throw Error('Value must be an array in multiple-selection mode.');\n      }\n\n      this._clearSelection();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n    } else {\n      this._clearSelection();\n      this._selectValue(value);\n    }\n  }\n\n  /** Clears the selected toggles. */\n  private _clearSelection() {\n    this._selectionModel.clear();\n    this._buttonToggles.forEach(toggle => toggle.checked = false);\n  }\n\n  /** Selects a value if there's a toggle that corresponds to it. */\n  private _selectValue(value: any) {\n    const correspondingOption = this._buttonToggles.find(toggle => {\n      return toggle.value != null && toggle.value === value;\n    });\n\n    if (correspondingOption) {\n      correspondingOption.checked = true;\n      this._selectionModel.select(correspondingOption);\n    }\n  }\n\n  /** Syncs up the group's value with the model and emits the change event. */\n  private _updateModelValue(isUserInput: boolean) {\n    // Only emit the change event for user input.\n    if (isUserInput) {\n      this._emitChangeEvent();\n    }\n\n    // Note: we emit this one no matter whether it was a user interaction, because\n    // it is used by Angular to sync up the two-way data binding.\n    this.valueChange.emit(this.value);\n  }\n}\n\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nclass MatButtonToggleBase {}\nconst _MatButtonToggleMixinBase: CanDisableRippleCtor & typeof MatButtonToggleBase =\n    mixinDisableRipple(MatButtonToggleBase);\n\n/** Single button inside of a toggle group. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-button-toggle',\n  templateUrl: 'button-toggle.html',\n  styleUrls: ['button-toggle.css'],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matButtonToggle',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disableRipple'],\n  host: {\n    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n    '[class.mat-button-toggle-checked]': 'checked',\n    '[class.mat-button-toggle-disabled]': 'disabled',\n    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n    'class': 'mat-button-toggle',\n    // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n    // but can still receive focus from things like cdkFocusInitial.\n    '[attr.tabindex]': '-1',\n    '[attr.id]': 'id',\n    '[attr.name]': 'null',\n    '(focus)': 'focus()',\n  }\n})\nexport class MatButtonToggle extends _MatButtonToggleMixinBase implements OnInit,\n  CanDisableRipple, OnDestroy {\n\n  private _isSingleSelector = false;\n  private _checked = false;\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** Type of the button toggle. Either 'radio' or 'checkbox'. */\n  _type: ToggleType;\n\n  @ViewChild('button', {static: false}) _buttonElement: ElementRef<HTMLButtonElement>;\n\n  /** The parent button toggle group (exclusive selection). Optional. */\n  buttonToggleGroup: MatButtonToggleGroup;\n\n  /** Unique ID for the underlying `button` element. */\n  get buttonId(): string { return `${this.id}-button`; }\n\n  /** The unique ID for this button toggle. */\n  @Input() id: string;\n\n  /** HTML's 'name' attribute used to group radios for unique selection. */\n  @Input() name: string;\n\n  /** MatButtonToggleGroup reads this to assign its own value. */\n  @Input() value: any;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** The appearance style of the button. */\n  @Input()\n  get appearance(): MatButtonToggleAppearance {\n    return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n  }\n  set appearance(value: MatButtonToggleAppearance) {\n    this._appearance = value;\n  }\n  private _appearance: MatButtonToggleAppearance;\n\n  /** Whether the button is checked. */\n  @Input()\n  get checked(): boolean {\n    return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n  }\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._checked) {\n      this._checked = newValue;\n\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Whether the button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n  }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Event emitted when the group value changes. */\n  @Output() readonly change: EventEmitter<MatButtonToggleChange> =\n      new EventEmitter<MatButtonToggleChange>();\n\n  constructor(@Optional() toggleGroup: MatButtonToggleGroup,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _focusMonitor: FocusMonitor,\n              // @breaking-change 8.0.0 `defaultTabIndex` to be made a required parameter.\n              @Attribute('tabindex') defaultTabIndex: string,\n              @Optional() @Inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS)\n                  defaultOptions?: MatButtonToggleDefaultOptions) {\n    super();\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    this.buttonToggleGroup = toggleGroup;\n    this.appearance =\n        defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n  }\n\n  ngOnInit() {\n    this._isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    this._type = this._isSingleSelector ? 'radio' : 'checkbox';\n    this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n\n    if (this._isSingleSelector) {\n      this.name = this.buttonToggleGroup.name;\n    }\n\n    if (this.buttonToggleGroup && this.buttonToggleGroup._isPrechecked(this)) {\n      this.checked = true;\n    }\n\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n\n  ngOnDestroy() {\n    const group = this.buttonToggleGroup;\n\n    this._focusMonitor.stopMonitoring(this._elementRef);\n\n    // Remove the toggle from the selection once it's destroyed. Needs to happen\n    // on the next tick in order to avoid \"changed after checked\" errors.\n    if (group && group._isSelected(this)) {\n      group._syncButtonToggle(this, false, false, true);\n    }\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._buttonElement.nativeElement.focus();\n  }\n\n  /** Checks the button toggle due to an interaction with the underlying native button. */\n  _onButtonClick() {\n    const newChecked = this._isSingleSelector ? true : !this._checked;\n\n    if (newChecked !== this._checked) {\n      this._checked = newChecked;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n        this.buttonToggleGroup._onTouched();\n      }\n    }\n    // Emit a change event when it's the single selector\n    this.change.emit(new MatButtonToggleChange(this, this.value));\n  }\n\n  /**\n   * Marks the button toggle as needing checking for change detection.\n   * This method is exposed because the parent button toggle group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When the group value changes, the button will not be notified.\n    // Use `markForCheck` to explicit update button toggle's status.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatButtonToggle, MatButtonToggleGroup} from './button-toggle';\n\n\n@NgModule({\n  imports: [MatCommonModule, MatRippleModule],\n  exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n  declarations: [MatButtonToggleGroup, MatButtonToggle],\n})\nexport class MatButtonToggleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n} from '@angular/core';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card'}\n})\nexport class MatCard {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type MatCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MAT_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<MatCheckboxClickAction>('mat-checkbox-click-action');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewChecked,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MAT_CHECKBOX_CLICK_ACTION, MatCheckboxClickAction} from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n  /** The initial state of the component before any user interaction. */\n  Init,\n  /** The state representing the component when it's becoming checked. */\n  Checked,\n  /** The state representing the component when it's becoming unchecked. */\n  Unchecked,\n  /** The state representing the component when it's becoming indeterminate. */\n  Indeterminate\n}\n\n/** Change event object emitted by MatCheckbox. */\nexport class MatCheckboxChange {\n  /** The source MatCheckbox of the event. */\n  source: MatCheckbox;\n  /** The new `checked` value of the checkbox. */\n  checked: boolean;\n}\n\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableRippleCtor &\n    CanDisableCtor &\n    typeof MatCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase)), 'accent'));\n\n\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-checkbox',\n  templateUrl: 'checkbox.html',\n  styleUrls: ['checkbox.css'],\n  exportAs: 'matCheckbox',\n  host: {\n    'class': 'mat-checkbox',\n    '[id]': 'id',\n    '[attr.tabindex]': 'null',\n    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n    '[class.mat-checkbox-checked]': 'checked',\n    '[class.mat-checkbox-disabled]': 'disabled',\n    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n  providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  inputs: ['disableRipple', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatCheckbox extends _MatCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewChecked, OnDestroy, CanColor, CanDisable, HasTabIndex, CanDisableRipple {\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  private _uniqueId: string = `mat-checkbox-${++nextUniqueId}`;\n\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  /** Returns the unique id for the visual hidden input. */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n  private _required: boolean;\n\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /** Name value will be applied to the input element if present */\n  @Input() name: string | null = null;\n\n  /** Event emitted when the checkbox's `checked` value changes. */\n  @Output() readonly change: EventEmitter<MatCheckboxChange> =\n      new EventEmitter<MatCheckboxChange>();\n\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The value attribute of the native input element */\n  @Input() value: string;\n\n  /** The native `<input type=\"checkbox\">` element */\n  @ViewChild('input', {static: false}) _inputElement: ElementRef<HTMLInputElement>;\n\n  /** Reference to the ripple instance of the checkbox. */\n  @ViewChild(MatRipple, {static: false}) ripple: MatRipple;\n\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched: () => any = () => {};\n\n  private _currentAnimationClass: string = '';\n\n  private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _focusMonitor: FocusMonitor,\n              private _ngZone: NgZone,\n              @Attribute('tabindex') tabIndex: string,\n              @Optional() @Inject(MAT_CHECKBOX_CLICK_ACTION)\n                  private _clickAction: MatCheckboxClickAction,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    this._focusMonitor.monitor(elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n          this._onTouched();\n          _changeDetectorRef.markForCheck();\n        });\n      }\n    });\n  }\n\n  // TODO: Delete next major revision.\n  ngAfterViewChecked() {}\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /**\n   * Whether the checkbox is checked.\n   */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _checked: boolean = false;\n\n  /**\n   * Whether the checkbox is disabled. This fully overrides the implementation provided by\n   * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n   */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this.disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  @Input()\n  get indeterminate(): boolean { return this._indeterminate; }\n  set indeterminate(value: boolean) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = value;\n\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(\n          this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n  }\n  private _indeterminate: boolean = false;\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and it's children.\n    this._changeDetectorRef.detectChanges();\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  _getAriaChecked(): 'true' | 'false' | 'mixed' {\n    return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n  }\n\n  private _transitionCheckState(newState: TransitionCheckState) {\n    let oldState = this._currentCheckState;\n    let element: HTMLElement = this._elementRef.nativeElement;\n\n    if (oldState === newState) {\n      return;\n    }\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(\n        oldState, newState);\n    this._currentCheckState = newState;\n\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n\n  private _emitChangeEvent() {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  /**\n   * Event handler for checkbox input element.\n   * Toggles checked state if element is not disabled.\n   * Do not toggle on (change) event since IE doesn't fire change event when\n   *   indeterminate checkbox is clicked.\n   * @param event\n   */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && this._clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && this._clickAction !== 'check') {\n\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n\n      this.toggle();\n      this._transitionCheckState(\n          this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (!this.disabled && this._clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n\n  /** Focuses the checkbox. */\n  focus(): void {\n    this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n  }\n\n  _onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n\n  private _getAnimationClassForCheckStateTransition(\n      oldState: TransitionCheckState, newState: TransitionCheckState): string {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n\n    let animSuffix: string = '';\n\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          animSuffix = 'unchecked-checked';\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          animSuffix = 'unchecked-indeterminate';\n        } else {\n          return '';\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'unchecked-checked' : 'unchecked-indeterminate';\n        break;\n      case TransitionCheckState.Checked:\n        animSuffix = newState === TransitionCheckState.Unchecked ?\n            'checked-unchecked' : 'checked-indeterminate';\n        break;\n      case TransitionCheckState.Indeterminate:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'indeterminate-checked' : 'indeterminate-unchecked';\n        break;\n    }\n\n    return `mat-checkbox-anim-${animSuffix}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport {\n  CheckboxRequiredValidator,\n  NG_VALIDATORS,\n} from '@angular/forms';\n\nexport const MAT_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\n@Directive({\n  selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n  providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n})\nexport class MatCheckboxRequiredValidator extends CheckboxRequiredValidator {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatCheckbox} from './checkbox';\nimport {MatCheckboxRequiredValidator} from './checkbox-required-validator';\n\n/** This module is used by both original and MDC-based checkbox implementations. */\n@NgModule({\n  exports: [MatCheckboxRequiredValidator],\n  declarations: [MatCheckboxRequiredValidator],\n})\n// tslint:disable-next-line:class-name\nexport class _MatCheckboxRequiredValidatorModule {\n}\n\n@NgModule({\n  imports: [\n    CommonModule, MatRippleModule, MatCommonModule, ObserversModule,\n    _MatCheckboxRequiredValidatorModule\n  ],\n  exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n  declarations: [MatCheckbox],\n})\nexport class MatCheckboxModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/** Event object emitted by MatChip when selected or deselected. */\nexport class MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: MatChip,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false) { }\n}\n\n\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase: CanColorCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatChipBase =\n    mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary');\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {'class': 'mat-chip-avatar'}\n})\nexport class MatChipAvatar {}\n\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {'class': 'mat-chip-trailing-icon'}\n})\nexport class MatChipTrailingIcon {}\n\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\n@Directive({\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disabled', 'disableRipple'],\n  exportAs: 'matChip',\n  host: {\n    'class': 'mat-chip',\n    '[attr.tabindex]': 'disabled ? null : -1',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[class.mat-chip-with-avatar]': 'avatar',\n    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-chip-disabled]': 'disabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n    CanDisable, CanDisableRipple, RippleTarget {\n\n  /** Reference to the RippleRenderer for the chip. */\n  private _chipRipple: RippleRenderer;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the chip ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n  }\n\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether the chip list is selectable */\n  chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(MatChipAvatar, {static: false}) avatar: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MatChipTrailingIcon, {static: false}) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's remove toggler. */\n  @ContentChild(forwardRef(() => MatChipRemove), {static: false}) removeIcon: MatChipRemove;\n\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value != undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable && this.chipListSelectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\n      new EventEmitter<MatChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ?\n        this.selected.toString() : null;\n  }\n\n  constructor(public _elementRef: ElementRef,\n              private _ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n              globalRippleOptions: RippleGlobalOptions | null) {\n    super(_elementRef);\n\n    this._addHostClassName();\n\n    this._chipRipple = new RippleRenderer(this, _ngZone, _elementRef, platform);\n    this._chipRipple.setupTriggerEvents(_elementRef.nativeElement);\n    this.rippleConfig = globalRippleOptions || {};\n  }\n\n  _addHostClassName() {\n    const basicChipAttrName = 'mat-basic-chip';\n    const element = this._elementRef.nativeElement as HTMLElement;\n\n    if (element.hasAttribute(basicChipAttrName) ||\n        element.tagName.toLowerCase() === basicChipAttrName) {\n      element.classList.add(basicChipAttrName);\n      return;\n    } else {\n      element.classList.add('mat-standard-chip');\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._chipRipple._removeTriggerEvents();\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({chip: this});\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this._hasFocus = false;\n          this._onBlur.next({chip: this});\n        });\n      });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected\n    });\n  }\n}\n\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove mat-chip-trailing-icon',\n    '(click)': '_handleClick($event)',\n  }\n})\nexport class MatChipRemove {\n  constructor(protected _parentChip: MatChip) {}\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface MatChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MAT_CHIPS_DEFAULT_OPTIONS =\n    new InjectionToken<MatChipsDefaultOptions>('mat-chips-default-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BACKSPACE, END, HOME} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatChipListMixinBase: CanUpdateErrorStateCtor & typeof MatChipListBase =\n    mixinErrorState(MatChipListBase);\n\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class MatChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: MatChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any) { }\n}\n\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'matChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.mat-chip-list-disabled]': 'disabled',\n    '[class.mat-chip-list-invalid]': 'errorState',\n    '[class.mat-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    'class': 'mat-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'mat-chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: MatChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `mat-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatChip>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<MatChip>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): MatChip[] | MatChip {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null { return this.empty ? null : 'listbox'; }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\n    return merge(...this.chips.map(chip => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<MatChipListChange> =\n      new EventEmitter<MatChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(MatChip, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  }) chips: QueryList<MatChip>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() _parentForm: NgForm,\n              @Optional() _parentFormGroup: FormGroupDirective,\n              _defaultErrorStateMatcher: ErrorStateMatcher,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: MatChipTextControl): void {\n    this._chipInput = inputElement;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    } else {\n      this._focusInput();\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput() {\n    if (this._chipInput) {\n      this._chipInput.focus();\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('mat-chip')) {\n      if (event.keyCode === HOME) {\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n      } else if (event.keyCode === END) {\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n\n      this.stateChanges.next();\n    }\n  }\n\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach(chip => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\n\n    const correspondingChip = this.chips.find(chip => {\n      return chip.value != null && this._compareWith(chip.value,  value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: MatChip): void {\n    this._selectionModel.clear();\n    this.chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach(chip => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n      event.source.selected\n        ? this._selectionModel.select(event.source)\n        : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach(chip => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItemIndex(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips.some(chip => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach(chip => {\n        chip.disabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output} from '@angular/core';\nimport {hasModifierKey, TAB} from '@angular/cdk/keycodes';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipList} from './chip-list';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n/** Represents an input event on a `matChipInput`. */\nexport interface MatChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[matChipInputFor]',\n  exportAs: 'matChipInput, matChipInputFor',\n  host: {\n    'class': 'mat-chip-input mat-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n  }\n})\nexport class MatChipInput implements MatChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n  _chipList: MatChipList;\n\n  /** Register input for chip list */\n  @Input('matChipInputFor')\n  set chipList(value: MatChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('matChipInputAddOnBlur')\n  get addOnBlur(): boolean { return this._addOnBlur; }\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  @Input('matChipInputSeparatorKeyCodes')\n  separatorKeyCodes: number[] | Set<number> = this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('matChipInputTokenEnd')\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled || (this._chipList && this._chipList.disabled); }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean { return !this._inputElement.value; }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(MAT_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: MatChipsDefaultOptions) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(): void {\n    this._inputElement.focus();\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    if (hasModifierKey(event)) {\n      return false;\n    }\n\n    const separators = this.separatorKeyCodes;\n    const keyCode = event.keyCode;\n    return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ENTER} from '@angular/cdk/keycodes';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatChip, MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipInput} from './chip-input';\nimport {MatChipList} from './chip-list';\n\nconst CHIP_DECLARATIONS = [\n  MatChipList,\n  MatChip,\n  MatChipInput,\n  MatChipRemove,\n  MatChipAvatar,\n  MatChipTrailingIcon,\n];\n\n@NgModule({\n  exports: CHIP_DECLARATIONS,\n  declarations: CHIP_DECLARATIONS,\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      } as MatChipsDefaultOptions\n    }\n  ]\n})\nexport class MatChipsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from '@angular/cdk/overlay';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class MatDialogConfig<D = any> {\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** The ARIA role of the dialog element. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class for the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop, */\n  backdropClass?: string = '';\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Width of the dialog. */\n  width?: string = '';\n\n  /** Height of the dialog. */\n  height?: string = '';\n\n  /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\n  maxWidth?: number | string = '80vw';\n\n  /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /** Position overrides. */\n  position?: DialogPosition;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Layout direction for the dialog's content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus?: boolean = true;\n\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy?: ScrollStrategy;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\nconst animationBody = [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n  state('enter', style({transform: 'none'})),\n  transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n      style({transform: 'none', opacity: 1}))),\n  transition('* => void, * => exit',\n      animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n];\n\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nexport const matDialogAnimations: {\n  readonly dialogContainer: AnimationTriggerMetadata;\n  readonly slideDialog: AnimationTriggerMetadata;\n} = {\n  /** Animation that is applied on the dialog container by defalt. */\n  dialogContainer: trigger('dialogContainer', animationBody),\n\n  /** @deprecated @breaking-change 8.0.0 Use `matDialogAnimations.dialogContainer` instead. */\n  slideDialog: trigger('slideDialog', animationBody)\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AnimationEvent} from '@angular/animations';\nimport {matDialogAnimations} from './dialog-animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  CdkPortalOutlet,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {MatDialogConfig} from './dialog-config';\n\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nexport function throwMatDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matDialogAnimations.dialogContainer],\n  host: {\n    'class': 'mat-dialog-container',\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '_id',\n    '[attr.role]': '_config.role',\n    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n    '[attr.aria-label]': '_config.ariaLabel',\n    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n    '[@dialogContainer]': '_state',\n    '(@dialogContainer.start)': '_onAnimationStart($event)',\n    '(@dialogContainer.done)': '_onAnimationDone($event)',\n  },\n})\nexport class MatDialogContainer extends BasePortalOutlet {\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** ID of the element that should be considered as the dialog's label. */\n  _ariaLabelledBy: string | null;\n\n  /** ID for the container DOM element. */\n  _id: string;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    /** The dialog configuration. */\n    public _config: MatDialogConfig) {\n\n    super();\n    this._ariaLabelledBy = _config.ariaLabelledBy || null;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the dialog opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Saves a reference to the element that was focused before the dialog was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the dialog immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Callback, invoked when an animation on the host starts. */\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {GlobalPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Location} from '@angular/common';\nimport {Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nexport class MatDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    public _containerInstance: MatDialogContainer,\n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location?: Location,\n    readonly id: string = `mat-dialog-${uniqueId++}`) {\n\n    // Pass the id along to the container.\n    _containerInstance._id = id;\n\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'enter'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'exit'),\n      take(1)\n    ).subscribe(() => this._overlayRef.dispose());\n\n    _overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      this._overlayRef.dispose();\n    });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n      .subscribe(() => this.close());\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'start'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._overlayRef.detachBackdrop();\n    });\n\n    this._containerInstance._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    let strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width: string = '', height: string = ''): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   * @deprecated Use `afterOpened` instead.\n   * @breaking-change 8.0.0\n   */\n  afterOpen(): Observable<void> {\n    return this.afterOpened();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   * @deprecated Use `beforeClosed` instead.\n   * @breaking-change 8.0.0\n   */\n  beforeClose(): Observable<R | undefined> {\n    return this.beforeClosed();\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\nimport {defer, Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MatDialogConfig} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\nimport {MatDialogRef} from './dialog-ref';\n\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const MAT_DIALOG_DATA = new InjectionToken<any>('MatDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const MAT_DIALOG_DEFAULT_OPTIONS =\n    new InjectionToken<MatDialogConfig>('mat-dialog-default-options');\n\n/** Injection token that determines the scroll handling while the dialog is open. */\nexport const MAT_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-dialog-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class MatDialog implements OnDestroy {\n  private _openDialogsAtThisLevel: MatDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<MatDialogRef<any>>();\n  private _ariaHiddenElements = new Map<Element, string|null>();\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): MatDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<MatDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  /**\n   * Stream that emits when a dialog has been opened.\n   * @deprecated Use `afterOpened` instead.\n   * @breaking-change 8.0.0\n   */\n  get afterOpen(): Subject<MatDialogRef<any>> {\n    return this.afterOpened;\n  }\n\n  get _afterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      this._afterAllClosed.pipe(startWith(undefined))) as Observable<any>;\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Optional() private _location: Location,\n      @Optional() @Inject(MAT_DIALOG_DEFAULT_OPTIONS) private _defaultOptions: MatDialogConfig,\n      @Inject(MAT_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() private _parentDialog: MatDialog,\n      private _overlayContainer: OverlayContainer) {\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\n   *     or a TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n\n    config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef,\n                                                      dialogContainer,\n                                                      overlayRef,\n                                                      config);\n\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): MatDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Creates the overlay into which the dialog will be loaded.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the OverlayRef for the created overlay.\n   */\n  private _createOverlay(config: MatDialogConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param dialogConfig The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  private _getOverlayConfig(dialogConfig: MatDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      direction: dialogConfig.direction,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight,\n      disposeOnNavigation: dialogConfig.closeOnNavigation\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  /**\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  private _attachDialogContainer(overlay: OverlayRef, config: MatDialogConfig): MatDialogContainer {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatDialogConfig, config]\n    ]));\n    const containerPortal =\n        new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector);\n    const containerRef = overlay.attach<MatDialogContainer>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created MatDialogContainer.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: MatDialogContainer,\n      overlayRef: OverlayRef,\n      config: MatDialogConfig): MatDialogRef<T, R> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef =\n        new MatDialogRef<T, R>(overlayRef, dialogContainer, this._location, config.id);\n\n    // When the dialog backdrop is clicked, we want to close it.\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\n          <any>{ $implicit: config.data, dialogRef }));\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param container Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: MatDialogConfig,\n      dialogRef: MatDialogRef<T>,\n      dialogContainer: MatDialogContainer): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n    // content are created out of the same ViewContainerRef and as such, are siblings for injector\n    // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n    // added to the injection tokens.\n    const injectionTokens = new WeakMap<any, any>([\n      [MatDialogContainer, dialogContainer],\n      [MAT_DIALOG_DATA, config.data],\n      [MatDialogRef, dialogRef]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: MatDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this._ariaHiddenElements.clear();\n        this._afterAllClosed.next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        let sibling = siblings[i];\n\n        if (sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')) {\n\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: MatDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(\n    config?: MatDialogConfig, defaultOptions?: MatDialogConfig): MatDialogConfig {\n  return {...defaultOptions, ...config};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ElementRef,\n} from '@angular/core';\nimport {MatDialog} from './dialog';\nimport {MatDialogRef} from './dialog-ref';\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: `button[mat-dialog-close], button[matDialogClose]`,\n  exportAs: 'matDialogClose',\n  host: {\n    '(click)': 'dialogRef.close(dialogResult)',\n    '[attr.aria-label]': 'ariaLabel || null',\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class MatDialogClose implements OnInit, OnChanges {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Dialog close input. */\n  @Input('mat-dialog-close') dialogResult: any;\n\n  @Input('matDialogClose') _matDialogClose: any;\n\n  constructor(\n    @Optional() public dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[mat-dialog-title], [matDialogTitle]',\n  exportAs: 'matDialogTitle',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n})\nexport class MatDialogTitle implements OnInit {\n  @Input() id = `mat-dialog-title-${dialogElementUid++}`;\n\n  constructor(\n    @Optional() private _dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this._dialogRef._containerInstance;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n})\nexport class MatDialogContent {}\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n})\nexport class MatDialogActions {}\n\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<HTMLElement>, openDialogs: MatDialogRef<any>[]) {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('mat-dialog-container')) {\n    parent = parent.parentElement;\n  }\n\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog} from './dialog';\nimport {MatDialogContainer} from './dialog-container';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from './dialog-content-directives';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n  ],\n  providers: [\n    MatDialog,\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MatDialogContainer],\n})\nexport class MatDialogModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n  exportAs: 'matTextareaAutosize',\n  inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n  host: {\n    'class': 'cdk-textarea-autosize mat-autosize',\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    'rows': '1',\n    '(input)': '_noopInputHandler()',\n  },\n})\nexport class MatTextareaAutosize extends CdkTextareaAutosize {\n  @Input()\n  get matAutosizeMinRows(): number { return this.minRows; }\n  set matAutosizeMinRows(value: number) { this.minRows = value; }\n\n  @Input()\n  get matAutosizeMaxRows(): number { return this.maxRows; }\n  set matAutosizeMaxRows(value: number) { this.maxRows = value; }\n\n  @Input('mat-autosize')\n  get matAutosize(): boolean { return this.enabled; }\n  set matAutosize(value: boolean) { this.enabled = value; }\n\n  @Input()\n  get matTextareaAutosize(): boolean { return this.enabled; }\n  set matTextareaAutosize(value: boolean) { this.enabled = value; }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatInputUnsupportedTypeError(type: string): Error {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nexport const MAT_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{value: any}>('MAT_INPUT_VALUE_ACCESSOR');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {getSupportedInputTypes, Platform} from '@angular/cdk/platform';\nimport {AutofillMonitor} from '@angular/cdk/text-field';\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n} from '@angular/core';\nimport {FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {Subject} from 'rxjs';\nimport {getMatInputUnsupportedTypeError} from './input-errors';\nimport {MAT_INPUT_VALUE_ACCESSOR} from './input-value-accessor';\n\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n  'button',\n  'checkbox',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit'\n];\n\nlet nextUniqueId = 0;\n\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatInputMixinBase: CanUpdateErrorStateCtor & typeof MatInputBase =\n    mixinErrorState(MatInputBase);\n\n/** Directive that allows a native input to work inside a `MatFormField`. */\n@Directive({\n  selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n  exportAs: 'matInput',\n  host: {\n    /**\n     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n     */\n    'class': 'mat-input-element mat-form-field-autofill-control',\n    '[class.mat-input-server]': '_isServer',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[attr.id]': 'id',\n    '[attr.placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n    '(blur)': '_focusChanged(false)',\n    '(focus)': '_focusChanged(true)',\n    '(input)': '_onInput()',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatInput}],\n})\nexport class MatInput extends _MatInputMixinBase implements MatFormFieldControl<any>, OnChanges,\n    OnDestroy, OnInit, DoCheck, CanUpdateErrorState {\n  protected _uid = `mat-input-${nextUniqueId++}`;\n  protected _previousNativeValue: any;\n  private _inputValueAccessor: {value: any};\n  /** The aria-describedby attribute on the input for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Whether the component is being rendered on the server. */\n  _isServer = false;\n\n  /** Whether the component is a native html select. */\n  _isNativeSelect = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  focused: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType: string = 'mat-input';\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  autofilled = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  protected _disabled = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) { this._id = value || this._uid; }\n  protected _id: string;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n  protected _required = false;\n\n  /** Input type of the element. */\n  @Input()\n  get type(): string { return this._type; }\n  set type(value: string) {\n    this._type = value || 'text';\n    this._validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n      (this._elementRef.nativeElement as HTMLInputElement).type = this._type;\n    }\n  }\n  protected _type = 'text';\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): string { return this._inputValueAccessor.value; }\n  set value(value: string) {\n    if (value !== this.value) {\n      this._inputValueAccessor.value = value;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Whether the element is readonly. */\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\n  private _readonly = false;\n\n  protected _neverEmptyInputTypes = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week'\n  ].filter(t => getSupportedInputTypes().has(t));\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n    protected _platform: Platform,\n    /** @docs-private */\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional() @Self() @Inject(MAT_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n    private _autofillMonitor: AutofillMonitor,\n    ngZone: NgZone) {\n\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n    const element = this._elementRef.nativeElement;\n\n    // If no input value accessor was explicitly specified, use the element as the input value\n    // accessor.\n    this._inputValueAccessor = inputValueAccessor || element;\n\n    this._previousNativeValue = this.value;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          let el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n\n    if (this._isNativeSelect) {\n      this.controlType = (element as HTMLSelectElement).multiple ? 'mat-native-select-multiple' :\n                                                                   'mat-native-select';\n    }\n  }\n\n  ngOnInit() {\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n        this.autofilled = event.isAutofilled;\n        this.stateChanges.next();\n      });\n    }\n  }\n\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this._dirtyCheckNativeValue();\n  }\n\n  /** Focuses the input. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Callback for the cases where the focused state of the input changes. */\n  _focusChanged(isFocused: boolean) {\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n\n  _onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n\n  /** Does some manual dirty checking on the native input `value` property. */\n  protected _dirtyCheckNativeValue() {\n    const newValue = this._elementRef.nativeElement.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Make sure the input is a supported type. */\n  protected _validateType() {\n    if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n      throw getMatInputUnsupportedTypeError(this._type);\n    }\n  }\n\n  /** Checks whether the input type is one of the types that are never empty. */\n  protected _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n\n  /** Checks whether the input is invalid based on the native validation. */\n  protected _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n    return validity && validity.badInput;\n  }\n\n  /** Determines if the component host is a textarea. */\n  protected _isTextarea() {\n    return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n        !this.autofilled;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    if (this._isNativeSelect) {\n      // For a single-selection `<select>`, the label should float when the selected option has\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n      // overlapping the label with the options.\n      const selectElement = this._elementRef.nativeElement as HTMLSelectElement;\n      const firstOption: HTMLOptionElement | undefined = selectElement.options[0];\n\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n      return this.focused || selectElement.multiple || !this.empty ||\n             !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n    } else {\n      return this.focused || !this.empty;\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTextareaAutosize} from './autosize';\nimport {MatInput} from './input';\n\n\n@NgModule({\n  declarations: [MatInput, MatTextareaAutosize],\n  imports: [\n    CommonModule,\n    TextFieldModule,\n    MatFormFieldModule,\n  ],\n  exports: [\n    TextFieldModule,\n    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n    // be used together with `MatFormField`.\n    MatFormFieldModule,\n    MatInput,\n    MatTextareaAutosize,\n  ],\n  providers: [ErrorStateMatcher],\n})\nexport class MatInputModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses?: MatCalendarCellCssClasses) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: MatCalendarCell): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit {\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    if (this._selectedDate != date) {\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1]\n          .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\n        Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    let activeYear = this._dateAdapter.getYear(this._activeDate);\n    let activeOffset = activeYear % yearsPerPage;\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(activeYear - activeOffset + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView, yearsPerPage} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const firstYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n    const lastYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\n        Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView, {static: false}) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView, {static: false}) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView, {static: false}) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n\n    view.ngAfterContentInit();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<D> extends _MatDatepickerContentMixinBase\n  implements AfterViewInit, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar, {static: false}) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDatepicker<D> implements OnDestroy, CanColor {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<MatDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: MatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<MatDatepickerContent<D>>(MatDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats, ThemePalette} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: MatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    'aria-haspopup': 'dialog',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(value: MatDatepicker<D>) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  private _value: D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      this._validatorOnChange();\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': '-1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepicker<D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon, {static: false}) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button', {static: false}) _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {\n  MatDatepicker,\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-divider',\n  host: {\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-divider-vertical]': 'vertical',\n    '[class.mat-divider-horizontal]': '!vertical',\n    '[class.mat-divider-inset]': 'inset',\n    'class': 'mat-divider'\n  },\n  template: '',\n  styleUrls: ['divider.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDivider {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean { return this._inset; }\n  set inset(value: boolean) { this._inset = coerceBooleanProperty(value); }\n  private _inset: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDivider} from './divider';\n\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule],\n  exports: [MatDivider, MatCommonModule],\n  declarations: [MatDivider],\n})\nexport class MatDividerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {CdkAccordion} from '@angular/cdk/accordion';\n\n/** MatAccordion's display modes. */\nexport type MatAccordionDisplayMode = 'default' | 'flat';\n\n/**\n * Base interface for a `MatAccordion`.\n * @docs-private\n */\nexport interface MatAccordionBase extends CdkAccordion {\n  /** Whether the expansion indicator should be hidden. */\n  hideToggle: boolean;\n\n  /** Display mode used for all expansion panels in the accordion. */\n  displayMode: MatAccordionDisplayMode;\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\n\n  /** Handles focus events on the panel headers. */\n  _handleHeaderFocus: (header: any) => void;\n}\n\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nexport const MAT_ACCORDION = new InjectionToken<MatAccordionBase>('MAT_ACCORDION');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  animateChild,\n  group,\n  state,\n  style,\n  transition,\n  trigger,\n  query,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Time and timing curve for expansion panel animations. */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nexport const matExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed, void', style({transform: 'rotate(0deg)'})),\n    state('expanded', style({transform: 'rotate(180deg)'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [\n    state('collapsed, void', style({\n      height: '{{collapsedHeight}}',\n    }), {\n      params: {collapsedHeight: '48px'},\n    }),\n    state('expanded', style({\n      height: '{{expandedHeight}}'\n    }), {\n      params: {expandedHeight: '64px'}\n    }),\n    transition('expanded <=> collapsed, void => collapsed', group([\n      query('@indicatorRotate', animateChild(), {optional: true}),\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ])),\n  ]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    state('expanded', style({height: '*', visibility: 'visible'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[matExpansionPanelContent]'\n})\nexport class MatExpansionPanelContent {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {CdkAccordionItem} from '@angular/cdk/accordion';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Inject,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ViewChild,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {filter, startWith, take, distinctUntilChanged} from 'rxjs/operators';\nimport {matExpansionAnimations} from './expansion-animations';\nimport {MatExpansionPanelContent} from './expansion-panel-content';\nimport {MAT_ACCORDION, MatAccordionBase} from './accordion-base';\n\n/** MatExpansionPanel's states. */\nexport type MatExpansionPanelState = 'expanded' | 'collapsed';\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n */\nexport interface MatExpansionPanelDefaultOptions {\n  /** Height of the header while the panel is expanded. */\n  expandedHeight: string;\n\n  /** Height of the header while the panel is collapsed. */\n  collapsedHeight: string;\n\n  /** Whether the toggle indicator should be hidden. */\n  hideToggle: boolean;\n}\n\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nexport const MAT_EXPANSION_PANEL_DEFAULT_OPTIONS =\n    new InjectionToken<MatExpansionPanelDefaultOptions>('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n@Component({\n  moduleId: module.id,\n  styleUrls: ['./expansion-panel.css'],\n  selector: 'mat-expansion-panel',\n  exportAs: 'matExpansionPanel',\n  templateUrl: './expansion-panel.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled', 'expanded'],\n  outputs: ['opened', 'closed', 'expandedChange'],\n  animations: [matExpansionAnimations.bodyExpansion],\n  providers: [\n    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    {provide: MAT_ACCORDION, useValue: undefined},\n  ],\n  host: {\n    'class': 'mat-expansion-panel',\n    '[class.mat-expanded]': 'expanded',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n  }\n})\nexport class MatExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges,\n  OnDestroy {\n\n  private _document: Document;\n\n  /** Whether the toggle indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean {\n    return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n  }\n  set hideToggle(value: boolean) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  private _hideToggle = false;\n\n  /** An event emitted after the body's expansion animation happens. */\n  @Output() afterExpand = new EventEmitter<void>();\n\n  /** An event emitted after the body's collapse animation happens. */\n  @Output() afterCollapse = new EventEmitter<void>();\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  /** Optionally defined accordion the expansion panel belongs to. */\n  accordion: MatAccordionBase;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(MatExpansionPanelContent, {static: false}) _lazyContent: MatExpansionPanelContent;\n\n  /** Element containing the panel's user-provided content. */\n  @ViewChild('body', {static: false}) _body: ElementRef<HTMLElement>;\n\n  /** Portal holding the user's content. */\n  _portal: TemplatePortal;\n\n  /** ID for the associated header element. Used for a11y labelling. */\n  _headerId = `mat-expansion-panel-header-${uniqueId++}`;\n\n  /** Stream of body animation done events. */\n  _bodyAnimationDone = new Subject<AnimationEvent>();\n\n  constructor(@Optional() @SkipSelf() @Inject(MAT_ACCORDION) accordion: MatAccordionBase,\n              _changeDetectorRef: ChangeDetectorRef,\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(DOCUMENT) _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string,\n              @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\n                  defaultOptions?: MatExpansionPanelDefaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n    this._document = _document;\n\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n  _hasSpacing(): boolean {\n    if (this.accordion) {\n      // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n      // the [displayMode] input changes, the change detection will also cover the host bindings\n      // of this expansion panel.\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n    return false;\n  }\n\n  /** Gets the expanded state string. */\n  _getExpandedState(): MatExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(\n        startWith(null!),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._bodyAnimationDone.complete();\n    this._inputChanges.complete();\n  }\n\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\n  _containsFocus(): boolean {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n}\n\n@Directive({\n  selector: 'mat-action-row',\n  host: {\n    class: 'mat-action-row'\n  }\n})\nexport class MatExpansionPanelActionRow {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {merge, Subscription, EMPTY} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {matExpansionAnimations} from './expansion-animations';\nimport {\n  MatExpansionPanel,\n  MatExpansionPanelDefaultOptions,\n  MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,\n} from './expansion-panel';\n\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-expansion-panel-header',\n  styleUrls: ['./expansion-panel-header.css'],\n  templateUrl: './expansion-panel-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    matExpansionAnimations.indicatorRotate,\n    matExpansionAnimations.expansionHeaderHeight\n  ],\n  host: {\n    'class': 'mat-expansion-panel-header',\n    'role': 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': '_isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.mat-expanded]': '_isExpanded()',\n    '(click)': '_toggle()',\n    '(keydown)': '_keydown($event)',\n    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`,\n  },\n})\nexport class MatExpansionPanelHeader implements OnDestroy, FocusableOption {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n      @Host() public panel: MatExpansionPanel,\n      private _element: ElementRef,\n      private _focusMonitor: FocusMonitor,\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\n          defaultOptions?: MatExpansionPanelDefaultOptions) {\n    const accordionHideToggleChange = panel.accordion ?\n        panel.accordion._stateChanges.pipe(\n            filter(changes => !!changes['hideToggle'])) :\n        EMPTY;\n\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription =\n        merge(\n            panel.opened, panel.closed, accordionHideToggleChange,\n            panel._inputChanges.pipe(filter(\n                changes => !!(changes['hideToggle'] || changes['disabled']))))\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n    // Avoids focus being lost if the panel contained the focused element and was closed.\n    panel.closed\n      .pipe(filter(() => panel._containsFocus()))\n      .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n\n    _focusMonitor.monitor(_element).subscribe(origin => {\n      if (origin && panel.accordion) {\n        panel.accordion._handleHeaderFocus(this);\n      }\n    });\n\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n\n  /** Height of the header while the panel is expanded. */\n  @Input() expandedHeight: string;\n\n  /** Height of the header while the panel is collapsed. */\n  @Input() collapsedHeight: string;\n\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n  get disabled() {\n    return this.panel.disabled;\n  }\n\n  /** Toggles the expanded state of the panel. */\n  _toggle(): void {\n    this.panel.toggle();\n  }\n\n  /** Gets whether the panel is expanded. */\n  _isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** Gets the expanded state string of the panel. */\n  _getExpandedState(): string {\n    return this.panel._getExpandedState();\n  }\n\n  /** Gets the panel id. */\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /** Gets whether the expand indicator should be shown. */\n  _showToggle(): boolean {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n  focus(origin: FocusOrigin = 'program') {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n}\n\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'mat-panel-description',\n  host: {\n    class: 'mat-expansion-panel-header-description'\n  }\n})\nexport class MatExpansionPanelDescription {}\n\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'mat-panel-title',\n  host: {\n    class: 'mat-expansion-panel-header-title'\n  }\n})\nexport class MatExpansionPanelTitle {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, ContentChildren, QueryList, AfterContentInit} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkAccordion} from '@angular/cdk/accordion';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {HOME, END, hasModifierKey} from '@angular/cdk/keycodes';\nimport {MAT_ACCORDION, MatAccordionBase, MatAccordionDisplayMode} from './accordion-base';\nimport {MatExpansionPanelHeader} from './expansion-panel-header';\n\n/**\n * Directive for a Material Design Accordion.\n */\n@Directive({\n  selector: 'mat-accordion',\n  exportAs: 'matAccordion',\n  inputs: ['multi'],\n  providers: [{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }],\n  host: {\n    class: 'mat-accordion'\n  }\n})\nexport class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit {\n  private _keyManager: FocusKeyManager<MatExpansionPanelHeader>;\n\n  @ContentChildren(MatExpansionPanelHeader, {descendants: true})\n  _headers: QueryList<MatExpansionPanelHeader>;\n\n  /** Whether the expansion indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean { return this._hideToggle; }\n  set hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\n  private _hideToggle: boolean = false;\n\n  /**\n   * Display mode used for all expansion panels in the accordion. Currently two display\n   * modes exist:\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n   *     panel at a different elevation from the rest of the accordion.\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\n   *     elevation.\n   */\n  @Input() displayMode: MatAccordionDisplayMode = 'default';\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n    const manager = this._keyManager;\n\n    if (keyCode === HOME) {\n      if (!hasModifierKey(event)) {\n        manager.setFirstItemActive();\n        event.preventDefault();\n      }\n    } else if (keyCode === END) {\n      if (!hasModifierKey(event)) {\n        manager.setLastItemActive();\n        event.preventDefault();\n      }\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  _handleHeaderFocus(header: MatExpansionPanelHeader) {\n    this._keyManager.updateActiveItem(header);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatAccordion} from './accordion';\nimport {MatExpansionPanel, MatExpansionPanelActionRow} from './expansion-panel';\nimport {MatExpansionPanelContent} from './expansion-panel-content';\nimport {\n  MatExpansionPanelDescription,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n} from './expansion-panel-header';\n\n\n@NgModule({\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\n  exports: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n  declarations: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n})\nexport class MatExpansionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nexport const MAT_GRID_LIST = new InjectionToken<MatGridListBase>('MAT_GRID_LIST');\n\n/**\n * Base interface for a `MatGridList`.\n * @docs-private\n */\nexport interface MatGridListBase {\n  cols: number;\n  gutterSize: string;\n  rowHeight: number | string;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  Optional,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Directive,\n  ChangeDetectionStrategy,\n  Inject,\n} from '@angular/core';\nimport {MatLine, setLines} from '@angular/material/core';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {MAT_GRID_LIST, MatGridListBase} from './grid-list-base';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-grid-tile',\n  exportAs: 'matGridTile',\n  host: {\n    'class': 'mat-grid-tile',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    @Optional() @Inject(MAT_GRID_LIST) public _gridList?: MatGridListBase) {}\n\n  /** Amount of rows that the grid tile takes up. */\n  @Input()\n  get rowspan(): number { return this._rowspan; }\n  set rowspan(value: number) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n\n  /** Amount of columns that the grid tile takes up. */\n  @Input()\n  get colspan(): number { return this._colspan; }\n  set colspan(value: number) { this._colspan = Math.round(coerceNumberProperty(value)); }\n\n  /**\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n   * \"Changed after checked\" errors that would occur with HostBinding.\n   */\n  _setStyle(property: string, value: any): void {\n    (this._element.nativeElement.style as any)[property] = value;\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatGridTileText implements AfterContentInit {\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\n\n  constructor(private _element: ElementRef<HTMLElement>) {}\n\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-grid-avatar], [matGridAvatar]',\n  host: {'class': 'mat-grid-avatar'}\n})\nexport class MatGridAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-grid-tile-header',\n  host: {'class': 'mat-grid-tile-header'}\n})\nexport class MatGridTileHeaderCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-grid-tile-footer',\n  host: {'class': 'mat-grid-tile-footer'}\n})\nexport class MatGridTileFooterCssMatStyler {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatGridTile} from './grid-tile';\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nexport class TileCoordinator {\n  /** Tracking array (see class description). */\n  tracker: number[];\n\n  /** Index at which the search for the next gap will start. */\n  columnIndex: number = 0;\n\n  /** The current row index. */\n  rowIndex: number = 0;\n\n  /** Gets the total number of rows occupied by tiles */\n  get rowCount(): number { return this.rowIndex + 1; }\n\n  /**\n   * Gets the total span of rows occupied by tiles.\n   * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n   */\n  get rowspan() {\n    const lastRowMax = Math.max(...this.tracker);\n    // if any of the tiles has a rowspan that pushes it beyond the total row count,\n    // add the difference to the rowcount\n    return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n  }\n\n  /** The computed (row, col) position of each tile (the output). */\n  positions: TilePosition[];\n\n  /**\n   * Updates the tile positions.\n   * @param numColumns Amount of columns in the grid.\n   */\n  update(numColumns: number, tiles: MatGridTile[]) {\n    this.columnIndex = 0;\n    this.rowIndex = 0;\n\n    this.tracker = new Array(numColumns);\n    this.tracker.fill(0, 0, this.tracker.length);\n    this.positions = tiles.map(tile => this._trackTile(tile));\n  }\n\n  /** Calculates the row and col position of a tile. */\n  private _trackTile(tile: MatGridTile): TilePosition {\n    // Find a gap large enough for this tile.\n    const gapStartIndex = this._findMatchingGap(tile.colspan);\n\n    // Place tile in the resulting gap.\n    this._markTilePosition(gapStartIndex, tile);\n\n    // The next time we look for a gap, the search will start at columnIndex, which should be\n    // immediately after the tile that has just been placed.\n    this.columnIndex = gapStartIndex + tile.colspan;\n\n    return new TilePosition(this.rowIndex, gapStartIndex);\n  }\n\n  /** Finds the next available space large enough to fit the tile. */\n  private _findMatchingGap(tileCols: number): number {\n    if (tileCols > this.tracker.length) {\n      throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                      `grid with cols=\"${this.tracker.length}\".`);\n    }\n\n    // Start index is inclusive, end index is exclusive.\n    let gapStartIndex = -1;\n    let gapEndIndex = -1;\n\n    // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n    do {\n      // If we've reached the end of the row, go to the next row.\n      if (this.columnIndex + tileCols > this.tracker.length) {\n        this._nextRow();\n        gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n        gapEndIndex = this._findGapEndIndex(gapStartIndex);\n        continue;\n      }\n\n      gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n\n      // If there are no more empty spaces in this row at all, move on to the next row.\n      if (gapStartIndex == -1) {\n        this._nextRow();\n        gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n        gapEndIndex = this._findGapEndIndex(gapStartIndex);\n        continue;\n      }\n\n      gapEndIndex = this._findGapEndIndex(gapStartIndex);\n\n      // If a gap large enough isn't found, we want to start looking immediately after the current\n      // gap on the next iteration.\n      this.columnIndex = gapStartIndex + 1;\n\n      // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n      // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n    } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n\n    // If we still didn't manage to find a gap, ensure that the index is\n    // at least zero so the tile doesn't get pulled out of the grid.\n    return Math.max(gapStartIndex, 0);\n  }\n\n  /** Move \"down\" to the next row. */\n  private _nextRow(): void {\n    this.columnIndex = 0;\n    this.rowIndex++;\n\n    // Decrement all spaces by one to reflect moving down one row.\n    for (let i = 0; i < this.tracker.length; i++) {\n      this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n    }\n  }\n\n  /**\n   * Finds the end index (exclusive) of a gap given the index from which to start looking.\n   * The gap ends when a non-zero value is found.\n   */\n  private _findGapEndIndex(gapStartIndex: number): number {\n    for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n      if (this.tracker[i] != 0) {\n        return i;\n      }\n    }\n\n    // The gap ends with the end of the row.\n    return this.tracker.length;\n  }\n\n  /** Update the tile tracker to account for the given tile in the given space. */\n  private _markTilePosition(start: number, tile: MatGridTile): void {\n    for (let i = 0; i < tile.colspan; i++) {\n      this.tracker[start + i] = tile.rowspan;\n    }\n  }\n}\n\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nexport class TilePosition {\n  constructor(public row: number, public col: number) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatGridList} from './grid-list';\nimport {MatGridTile} from './grid-tile';\nimport {TileCoordinator} from './tile-coordinator';\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nexport abstract class TileStyler {\n  _gutterSize: string;\n  _rows: number = 0;\n  _rowspan: number = 0;\n  _cols: number;\n  _direction: string;\n\n  /**\n   * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n   * because these properties haven't been calculated by that point.\n   *\n   * @param gutterSize Size of the grid's gutter.\n   * @param tracker Instance of the TileCoordinator.\n   * @param cols Amount of columns in the grid.\n   * @param direction Layout direction of the grid.\n   */\n  init(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string): void {\n    this._gutterSize = normalizeUnits(gutterSize);\n    this._rows = tracker.rowCount;\n    this._rowspan = tracker.rowspan;\n    this._cols = cols;\n    this._direction = direction;\n  }\n\n  /**\n   * Computes the amount of space a single 1x1 tile would take up (width or height).\n   * Used as a basis for other calculations.\n   * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n   * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n   * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n   */\n  getBaseTileSize(sizePercent: number, gutterFraction: number): string {\n    // Take the base size percent (as would be if evenly dividing the size between cells),\n    // and then subtracting the size of one gutter. However, since there are no gutters on the\n    // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n    // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n    // edge evenly among the cells).\n    return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n  }\n\n\n  /**\n   * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n   * @param offset Number of tiles that have already been rendered in the row/column.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @return Position of the tile as a CSS calc() expression.\n   */\n  getTilePosition(baseSize: string, offset: number): string {\n    // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n    // row/column (offset).\n    return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n  }\n\n\n  /**\n   * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @param span The tile's rowspan or colspan.\n   * @return Size of the tile as a CSS calc() expression.\n   */\n  getTileSize(baseSize: string, span: number): string {\n    return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n  }\n\n\n  /**\n   * Sets the style properties to be applied to a tile for the given row and column index.\n   * @param tile Tile to which to apply the styling.\n   * @param rowIndex Index of the tile's row.\n   * @param colIndex Index of the tile's column.\n   */\n  setStyle(tile: MatGridTile, rowIndex: number, colIndex: number): void {\n    // Percent of the available horizontal space that one column takes up.\n    let percentWidthPerTile = 100 / this._cols;\n\n    // Fraction of the vertical gutter size that each column takes up.\n    // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n    let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n\n    this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n  }\n\n  /** Sets the horizontal placement of the tile in the list. */\n  setColStyles(tile: MatGridTile, colIndex: number, percentWidth: number,\n               gutterWidth: number) {\n    // Base horizontal size of a column.\n    let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n\n    // The width and horizontal position of each tile is always calculated the same way, but the\n    // height and vertical position depends on the rowMode.\n    let side = this._direction === 'rtl' ? 'right' : 'left';\n    tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n    tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n  }\n\n  /**\n   * Calculates the total size taken up by gutters across one axis of a list.\n   */\n  getGutterSpan(): string {\n    return `${this._gutterSize} * (${this._rowspan} - 1)`;\n  }\n\n  /**\n   * Calculates the total size taken up by tiles across one axis of a list.\n   * @param tileHeight Height of the tile.\n   */\n  getTileSpan(tileHeight: string): string {\n    return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n  }\n\n  /**\n   * Sets the vertical placement of the tile in the list.\n   * This method will be implemented by each type of TileStyler.\n   * @docs-private\n   */\n  abstract setRowStyles(tile: MatGridTile, rowIndex: number, percentWidth: number,\n                        gutterWidth: number): void;\n\n  /**\n   * Calculates the computed height and returns the correct style property to set.\n   * This method can be implemented by each type of TileStyler.\n   * @docs-private\n   */\n  getComputedHeight(): [string, string] | null { return null; }\n\n  /**\n   * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n   * @param list Grid list that the styler was attached to.\n   * @docs-private\n   */\n  abstract reset(list: MatGridList): void;\n}\n\n\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nexport class FixedTileStyler extends TileStyler {\n\n  constructor(public fixedRowHeight: string) { super(); }\n\n  init(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string) {\n    super.init(gutterSize, tracker, cols, direction);\n    this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n\n    if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n      throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n    }\n  }\n\n  setRowStyles(tile: MatGridTile, rowIndex: number): void {\n    tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n  }\n\n  getComputedHeight(): [string, string] {\n    return [\n      'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n    ];\n  }\n\n  reset(list: MatGridList) {\n    list._setListStyle(['height', null]);\n\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n\n\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nexport class RatioTileStyler extends TileStyler {\n\n  /** Ratio width:height given by user to determine row height. */\n  rowHeightRatio: number;\n  baseTileHeight: string;\n\n  constructor(value: string) {\n    super();\n    this._parseRatio(value);\n  }\n\n  setRowStyles(tile: MatGridTile, rowIndex: number, percentWidth: number,\n               gutterWidth: number): void {\n    let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n    this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n\n    // Use padding-top and margin-top to maintain the given aspect ratio, as\n    // a percentage-based value for these properties is applied versus the *width* of the\n    // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n    tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n    tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n  }\n\n  getComputedHeight(): [string, string] {\n    return [\n      'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n    ];\n  }\n\n  reset(list: MatGridList) {\n    list._setListStyle(['paddingBottom', null]);\n\n    list._tiles.forEach(tile => {\n      tile._setStyle('marginTop', null);\n      tile._setStyle('paddingTop', null);\n    });\n  }\n\n  private _parseRatio(value: string): void {\n    const ratioParts = value.split(':');\n\n    if (ratioParts.length !== 2) {\n      throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n    }\n\n    this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n  }\n}\n\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nexport class FitTileStyler extends TileStyler {\n  setRowStyles(tile: MatGridTile, rowIndex: number): void {\n    // Percent of the available vertical space that one row takes up.\n    let percentHeightPerTile = 100 / this._rowspan;\n\n    // Fraction of the horizontal gutter size that each column takes up.\n    let gutterHeightPerTile = (this._rows - 1) / this._rows;\n\n    // Base vertical size of a column.\n    let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n\n    tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n  }\n\n  reset(list: MatGridList) {\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n\n\n/** Wraps a CSS string in a calc function */\nfunction calc(exp: string): string {\n  return `calc(${exp})`;\n}\n\n\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value: string): string {\n  return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  AfterContentChecked,\n  OnInit,\n  Input,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  Optional,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MatGridTile} from './grid-tile';\nimport {TileCoordinator} from './tile-coordinator';\nimport {TileStyler, FitTileStyler, RatioTileStyler, FixedTileStyler} from './tile-styler';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {MAT_GRID_LIST, MatGridListBase} from './grid-list-base';\n\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n\nconst MAT_FIT_MODE = 'fit';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-grid-list',\n  exportAs: 'matGridList',\n  templateUrl: 'grid-list.html',\n  styleUrls: ['grid-list.css'],\n  host: {\n    'class': 'mat-grid-list',\n  },\n  providers: [{\n    provide: MAT_GRID_LIST,\n    useExisting: MatGridList\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatGridList implements MatGridListBase, OnInit, AfterContentChecked {\n  /** Number of columns being rendered. */\n  private _cols: number;\n\n  /** Used for determiningthe position of each tile in the grid. */\n  private _tileCoordinator: TileCoordinator;\n\n  /**\n   * Row height value passed in by user. This can be one of three types:\n   * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n   * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n   * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n   */\n  private _rowHeight: string;\n\n  /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n  private _gutter: string = '1px';\n\n  /** Sets position and size styles for a tile */\n  private _tileStyler: TileStyler;\n\n  /** Query list of tiles that are being rendered. */\n  @ContentChildren(MatGridTile, {descendants: true}) _tiles: QueryList<MatGridTile>;\n\n  constructor(private _element: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality) {}\n\n  /** Amount of columns in the grid list. */\n  @Input()\n  get cols(): number { return this._cols; }\n  set cols(value: number) {\n    this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n  }\n\n  /** Size of the grid list's gutter in pixels. */\n  @Input()\n  get gutterSize(): string { return this._gutter; }\n  set gutterSize(value: string) { this._gutter = `${value == null ? '' : value}`; }\n\n  /** Set internal representation of row height from the user-provided value. */\n  @Input()\n  get rowHeight(): string | number { return this._rowHeight; }\n  set rowHeight(value: string | number) {\n    const newValue = `${value == null ? '' : value}`;\n\n    if (newValue !== this._rowHeight) {\n      this._rowHeight = newValue;\n      this._setTileStyler(this._rowHeight);\n    }\n  }\n\n  ngOnInit() {\n    this._checkCols();\n    this._checkRowHeight();\n  }\n\n  /**\n   * The layout calculation is fairly cheap if nothing changes, so there's little cost\n   * to run it frequently.\n   */\n  ngAfterContentChecked() {\n    this._layoutTiles();\n  }\n\n  /** Throw a friendly error if cols property is missing */\n  private _checkCols() {\n    if (!this.cols) {\n      throw Error(`mat-grid-list: must pass in number of columns. ` +\n                  `Example: <mat-grid-list cols=\"3\">`);\n    }\n  }\n\n  /** Default to equal width:height if rowHeight property is missing */\n  private _checkRowHeight(): void {\n    if (!this._rowHeight) {\n      this._setTileStyler('1:1');\n    }\n  }\n\n  /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n  private _setTileStyler(rowHeight: string): void {\n    if (this._tileStyler) {\n      this._tileStyler.reset(this);\n    }\n\n    if (rowHeight === MAT_FIT_MODE) {\n      this._tileStyler = new FitTileStyler();\n    } else if (rowHeight && rowHeight.indexOf(':') > -1) {\n      this._tileStyler = new RatioTileStyler(rowHeight);\n    } else {\n      this._tileStyler = new FixedTileStyler(rowHeight);\n    }\n  }\n\n  /** Computes and applies the size and position for all children grid tiles. */\n  private _layoutTiles(): void {\n    if (!this._tileCoordinator) {\n      this._tileCoordinator = new TileCoordinator();\n    }\n\n\n    const tracker = this._tileCoordinator;\n    const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n    const direction = this._dir ? this._dir.value : 'ltr';\n\n    this._tileCoordinator.update(this.cols, tiles);\n    this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n\n    tiles.forEach((tile, index) => {\n      const pos = tracker.positions[index];\n      this._tileStyler.setStyle(tile, pos.row, pos.col);\n    });\n\n    this._setListStyle(this._tileStyler.getComputedHeight());\n  }\n\n  /** Sets style on the main grid-list element, given the style name and value. */\n  _setListStyle(style: [string, string | null] | null): void {\n    if (style) {\n      (this._element.nativeElement.style as any)[style[0]] = style[1];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatLineModule, MatCommonModule} from '@angular/material/core';\nimport {\n  MatGridTile, MatGridTileText, MatGridTileFooterCssMatStyler,\n  MatGridTileHeaderCssMatStyler, MatGridAvatarCssMatStyler\n} from './grid-tile';\nimport {MatGridList} from './grid-list';\n\n\n@NgModule({\n  imports: [MatLineModule, MatCommonModule],\n  exports: [\n    MatGridList,\n    MatGridTile,\n    MatGridTileText,\n    MatLineModule,\n    MatCommonModule,\n    MatGridTileHeaderCssMatStyler,\n    MatGridTileFooterCssMatStyler,\n    MatGridAvatarCssMatStyler\n  ],\n  declarations: [\n    MatGridList,\n    MatGridTile,\n    MatGridTileText,\n    MatGridTileHeaderCssMatStyler,\n    MatGridTileFooterCssMatStyler,\n    MatGridAvatarCssMatStyler\n  ],\n})\nexport class MatGridListModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  SecurityContext,\n  SkipSelf,\n  OnDestroy,\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeHtml} from '@angular/platform-browser';\nimport {forkJoin, Observable, of as observableOf, throwError as observableThrow} from 'rxjs';\nimport {catchError, finalize, map, share, tap} from 'rxjs/operators';\n\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nexport function getMatIconNameNotFoundError(iconName: string): Error {\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n\n\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nexport function getMatIconNoHttpProviderError(): Error {\n  return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n               'Please include the HttpClientModule from @angular/common/http in your ' +\n               'app imports.');\n}\n\n\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nexport function getMatIconFailedToSanitizeUrlError(url: SafeResourceUrl): Error {\n  return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n               `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nexport function getMatIconFailedToSanitizeLiteralError(literal: SafeHtml): Error {\n  return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n               `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n\n\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n  url: SafeResourceUrl | null;\n  svgElement: SVGElement | null;\n\n  constructor(url: SafeResourceUrl);\n  constructor(svgElement: SVGElement);\n  constructor(data: SafeResourceUrl | SVGElement) {\n    // Note that we can't use `instanceof SVGElement` here,\n    // because it'll break during server-side rendering.\n    if (!!(data as any).nodeName) {\n      this.svgElement = data as SVGElement;\n    } else {\n      this.url = data as SafeResourceUrl;\n    }\n  }\n}\n\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\n@Injectable({providedIn: 'root'})\nexport class MatIconRegistry implements OnDestroy {\n  private _document: Document;\n\n  /**\n   * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n   */\n  private _svgIconConfigs = new Map<string, SvgIconConfig>();\n\n  /**\n   * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n   * Multiple icon sets can be registered under the same namespace.\n   */\n  private _iconSetConfigs = new Map<string, SvgIconConfig[]>();\n\n  /** Cache for icons loaded by direct URLs. */\n  private _cachedIconsByUrl = new Map<string, SVGElement>();\n\n  /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n  private _inProgressUrlFetches = new Map<string, Observable<string>>();\n\n  /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n  private _fontCssClassesByAlias = new Map<string, string>();\n\n  /**\n   * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n   * The default 'material-icons' value assumes that the material icon font has been loaded as\n   * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n   */\n  private _defaultFontSetClass = 'material-icons';\n\n  constructor(\n    @Optional() private _httpClient: HttpClient,\n    private _sanitizer: DomSanitizer,\n    @Optional() @Inject(DOCUMENT) document: any) {\n      this._document = document;\n    }\n\n  /**\n   * Registers an icon by URL in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIcon(iconName: string, url: SafeResourceUrl): this {\n    return this.addSvgIconInNamespace('', iconName, url);\n  }\n\n  /**\n   * Registers an icon using an HTML string in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteral(iconName: string, literal: SafeHtml): this {\n    return this.addSvgIconLiteralInNamespace('', iconName, literal);\n  }\n\n  /**\n   * Registers an icon by URL in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIconInNamespace(namespace: string, iconName: string, url: SafeResourceUrl): this {\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url));\n  }\n\n  /**\n   * Registers an icon using an HTML string in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteralInNamespace(namespace: string, iconName: string, literal: SafeHtml): this {\n    const sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n\n    if (!sanitizedLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n\n    const svgElement = this._createSvgElementForSingleIcon(sanitizedLiteral);\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement));\n  }\n\n  /**\n   * Registers an icon set by URL in the default namespace.\n   * @param url\n   */\n  addSvgIconSet(url: SafeResourceUrl): this {\n    return this.addSvgIconSetInNamespace('', url);\n  }\n\n  /**\n   * Registers an icon set using an HTML string in the default namespace.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteral(literal: SafeHtml): this {\n    return this.addSvgIconSetLiteralInNamespace('', literal);\n  }\n\n  /**\n   * Registers an icon set by URL in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param url\n   */\n  addSvgIconSetInNamespace(namespace: string, url: SafeResourceUrl): this {\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url));\n  }\n\n  /**\n   * Registers an icon set using an HTML string in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteralInNamespace(namespace: string, literal: SafeHtml): this {\n    const sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n\n    if (!sanitizedLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n\n    const svgElement = this._svgElementFromString(sanitizedLiteral);\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement));\n  }\n\n  /**\n   * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n   * component with the alias as the fontSet input will cause the class name to be applied\n   * to the `<mat-icon>` element.\n   *\n   * @param alias Alias for the font.\n   * @param className Class name override to be used instead of the alias.\n   */\n  registerFontClassAlias(alias: string, className: string = alias): this {\n    this._fontCssClassesByAlias.set(alias, className);\n    return this;\n  }\n\n  /**\n   * Returns the CSS class name associated with the alias by a previous call to\n   * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n   */\n  classNameForFontAlias(alias: string): string {\n    return this._fontCssClassesByAlias.get(alias) || alias;\n  }\n\n  /**\n   * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   *\n   * @param className\n   */\n  setDefaultFontSetClass(className: string): this {\n    this._defaultFontSetClass = className;\n    return this;\n  }\n\n  /**\n   * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   */\n  getDefaultFontSetClass(): string {\n    return this._defaultFontSetClass;\n  }\n\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\n   * it will not contain any modifications made to elements previously returned).\n   *\n   * @param safeUrl URL from which to fetch the SVG icon.\n   */\n  getSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n\n    const cachedIcon = this._cachedIconsByUrl.get(url);\n\n    if (cachedIcon) {\n      return observableOf(cloneSvg(cachedIcon));\n    }\n\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(\n      tap(svg => this._cachedIconsByUrl.set(url!, svg)),\n      map(svg => cloneSvg(svg)),\n    );\n  }\n\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n   * if not, the Observable will throw an error.\n   *\n   * @param name Name of the icon to be retrieved.\n   * @param namespace Namespace in which to look for the icon.\n   */\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\n    // Return (copy of) cached icon if possible.\n    const key = iconKey(namespace, name);\n    const config = this._svgIconConfigs.get(key);\n\n    if (config) {\n      return this._getSvgFromConfig(config);\n    }\n\n    // See if we have any icon sets registered for the namespace.\n    const iconSetConfigs = this._iconSetConfigs.get(namespace);\n\n    if (iconSetConfigs) {\n      return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n    }\n\n    return observableThrow(getMatIconNameNotFoundError(key));\n  }\n\n  ngOnDestroy() {\n   this._svgIconConfigs.clear();\n   this._iconSetConfigs.clear();\n   this._cachedIconsByUrl.clear();\n  }\n\n  /**\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n   */\n  private _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    if (config.svgElement) {\n      // We already have the SVG element for this icon, return a copy.\n      return observableOf(cloneSvg(config.svgElement));\n    } else {\n      // Fetch the icon from the config's URL, cache it, and return a copy.\n      return this._loadSvgIconFromConfig(config).pipe(\n        tap(svg => config.svgElement = svg),\n        map(svg => cloneSvg(svg)),\n      );\n    }\n  }\n\n  /**\n   * Attempts to find an icon with the specified name in any of the SVG icon sets.\n   * First searches the available cached icons for a nested element with a matching name, and\n   * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n   * that have not been cached, and searches again after all fetches are completed.\n   * The returned Observable produces the SVG element if possible, and throws\n   * an error if no icon with the specified name can be found.\n   */\n  private _getSvgFromIconSetConfigs(name: string, iconSetConfigs: SvgIconConfig[]):\n      Observable<SVGElement> {\n    // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n    // requested name.\n    const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n    if (namedIcon) {\n      // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n      // time anyway, there's probably not much advantage compared to just always extracting\n      // it from the icon set.\n      return observableOf(namedIcon);\n    }\n\n    // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n    // fetched, fetch them now and look for iconName in the results.\n    const iconSetFetchRequests: Observable<SVGElement | null>[] = iconSetConfigs\n      .filter(iconSetConfig => !iconSetConfig.svgElement)\n      .map(iconSetConfig => {\n        return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(\n          catchError((err: HttpErrorResponse): Observable<SVGElement | null> => {\n            const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n\n            // Swallow errors fetching individual URLs so the\n            // combined Observable won't necessarily fail.\n            console.error(`Loading icon set URL: ${url} failed: ${err.message}`);\n            return observableOf(null);\n          })\n        );\n      });\n\n    // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n    // cached SVG element (unless the request failed), and we can check again for the icon.\n    return forkJoin(iconSetFetchRequests).pipe(map(() => {\n      const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n      if (!foundIcon) {\n        throw getMatIconNameNotFoundError(name);\n      }\n\n      return foundIcon;\n    }));\n  }\n\n  /**\n   * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  private _extractIconWithNameFromAnySet(iconName: string, iconSetConfigs: SvgIconConfig[]):\n      SVGElement | null {\n    // Iterate backwards, so icon sets added later have precedence.\n    for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n      const config = iconSetConfigs[i];\n      if (config.svgElement) {\n        const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n        if (foundIcon) {\n          return foundIcon;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n   * from it.\n   */\n  private _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    return this._fetchUrl(config.url)\n        .pipe(map(svgText => this._createSvgElementForSingleIcon(svgText)));\n  }\n\n  /**\n   * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n   * from it.\n   */\n  private _loadSvgIconSetFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    // If the SVG for this icon set has already been parsed, do nothing.\n    if (config.svgElement) {\n      return observableOf(config.svgElement);\n    }\n\n    return this._fetchUrl(config.url).pipe(map(svgText => {\n      // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n      // only needs to occur if the cache is yet unset.\n      if (!config.svgElement) {\n        config.svgElement = this._svgElementFromString(svgText);\n      }\n\n      return config.svgElement;\n    }));\n  }\n\n  /**\n   * Creates a DOM element from the given SVG string, and adds default attributes.\n   */\n  private _createSvgElementForSingleIcon(responseText: string): SVGElement {\n    const svg = this._svgElementFromString(responseText);\n    this._setSvgAttributes(svg);\n    return svg;\n  }\n\n  /**\n   * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  private _extractSvgIconFromSet(iconSet: SVGElement, iconName: string): SVGElement | null {\n    // Use the `id=\"iconName\"` syntax in order to escape special\n    // characters in the ID (versus using the #iconName syntax).\n    const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n\n    if (!iconSource) {\n      return null;\n    }\n\n    // Clone the element and remove the ID to prevent multiple elements from being added\n    // to the page with the same ID.\n    const iconElement = iconSource.cloneNode(true) as Element;\n    iconElement.removeAttribute('id');\n\n    // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n    // the content of a new <svg> node.\n    if (iconElement.nodeName.toLowerCase() === 'svg') {\n      return this._setSvgAttributes(iconElement as SVGElement);\n    }\n\n    // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n    // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n    // tag is problematic on Firefox, because it needs to include the current page path.\n    if (iconElement.nodeName.toLowerCase() === 'symbol') {\n      return this._setSvgAttributes(this._toSvgElement(iconElement));\n    }\n\n    // createElement('SVG') doesn't work as expected; the DOM ends up with\n    // the correct nodes, but the SVG content doesn't render. Instead we\n    // have to create an empty SVG node using innerHTML and append its content.\n    // Elements created using DOMParser.parseFromString have the same problem.\n    // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n    const svg = this._svgElementFromString('<svg></svg>');\n    // Clone the node so we don't remove it from the parent icon set element.\n    svg.appendChild(iconElement);\n\n    return this._setSvgAttributes(svg);\n  }\n\n  /**\n   * Creates a DOM element from the given SVG string.\n   */\n  private _svgElementFromString(str: string): SVGElement {\n    const div = this._document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n\n    if (!svg) {\n      throw Error('<svg> tag not found');\n    }\n\n    return svg;\n  }\n\n  /**\n   * Converts an element into an SVG node by cloning all of its children.\n   */\n  private _toSvgElement(element: Element): SVGElement {\n    let svg = this._svgElementFromString('<svg></svg>');\n\n    for (let i = 0; i < element.childNodes.length; i++) {\n      if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n        svg.appendChild(element.childNodes[i].cloneNode(true));\n      }\n    }\n\n    return svg;\n  }\n\n  /**\n   * Sets the default attributes for an SVG element to be used as an icon.\n   */\n  private _setSvgAttributes(svg: SVGElement): SVGElement {\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n    return svg;\n  }\n\n  /**\n   * Returns an Observable which produces the string contents of the given URL. Results may be\n   * cached, so future calls with the same URL may not cause another HTTP request.\n   */\n  private _fetchUrl(safeUrl: SafeResourceUrl | null): Observable<string> {\n    if (!this._httpClient) {\n      throw getMatIconNoHttpProviderError();\n    }\n\n    if (safeUrl == null) {\n      throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n    }\n\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n    // already a request in progress for that URL. It's necessary to call share() on the\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\n\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n\n    // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n    // Observable. Figure out why and fix it.\n    const req = this._httpClient.get(url, {responseType: 'text'}).pipe(\n      finalize(() => this._inProgressUrlFetches.delete(url)),\n      share(),\n    );\n\n    this._inProgressUrlFetches.set(url, req);\n    return req;\n  }\n\n  /**\n   * Registers an icon config by name in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param iconName Name under which to register the config.\n   * @param config Config to be registered.\n   */\n  private _addSvgIconConfig(namespace: string, iconName: string, config: SvgIconConfig): this {\n    this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n    return this;\n  }\n\n  /**\n   * Registers an icon set config in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param config Config to be registered.\n   */\n  private _addSvgIconSetConfig(namespace: string, config: SvgIconConfig): this {\n    const configNamespace = this._iconSetConfigs.get(namespace);\n\n    if (configNamespace) {\n      configNamespace.push(config);\n    } else {\n      this._iconSetConfigs.set(namespace, [config]);\n    }\n\n    return this;\n  }\n}\n\n/** @docs-private */\nexport function ICON_REGISTRY_PROVIDER_FACTORY(\n  parentRegistry: MatIconRegistry,\n  httpClient: HttpClient,\n  sanitizer: DomSanitizer,\n  document?: any) {\n  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document);\n}\n\n/** @docs-private */\nexport const ICON_REGISTRY_PROVIDER = {\n  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n  provide: MatIconRegistry,\n  deps: [\n    [new Optional(), new SkipSelf(), MatIconRegistry],\n    [new Optional(), HttpClient],\n    DomSanitizer,\n    [new Optional(), DOCUMENT as InjectionToken<any>],\n  ],\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace: string, name: string) {\n  return namespace + ':' + name;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {take} from 'rxjs/operators';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n  Optional,\n  InjectionToken,\n  inject,\n  Inject,\n  OnDestroy,\n  AfterViewChecked,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatIconRegistry} from './icon-registry';\n\n\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatIconMixinBase: CanColorCtor & typeof MatIconBase = mixinColor(MatIconBase);\n\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nexport const MAT_ICON_LOCATION = new InjectionToken<MatIconLocation>('mat-icon-location', {\n  providedIn: 'root',\n  factory: MAT_ICON_LOCATION_FACTORY\n});\n\n/**\n * Stubbed out location for `MatIcon`.\n * @docs-private\n */\nexport interface MatIconLocation {\n  getPathname: () => string;\n}\n\n/** @docs-private */\nexport function MAT_ICON_LOCATION_FACTORY(): MatIconLocation {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? (_location.pathname + _location.search) : ''\n  };\n}\n\n\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n  'clip-path',\n  'color-profile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'marker-start',\n  'marker-mid',\n  'marker-end',\n  'mask',\n  'stroke'\n];\n\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\n@Component({\n  moduleId: module.id,\n  template: '<ng-content></ng-content>',\n  selector: 'mat-icon',\n  exportAs: 'matIcon',\n  styleUrls: ['icon.css'],\n  inputs: ['color'],\n  host: {\n    'role': 'img',\n    'class': 'mat-icon notranslate',\n    '[class.mat-icon-inline]': 'inline',\n    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatIcon extends _MatIconMixinBase implements OnChanges, OnInit, AfterViewChecked,\n  CanColor, OnDestroy {\n\n  /**\n   * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n   * the element the icon is contained in.\n   */\n  @Input()\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(inline: boolean) {\n    this._inline = coerceBooleanProperty(inline);\n  }\n  private _inline: boolean = false;\n\n  /** Name of the icon in the SVG icon set. */\n  @Input() svgIcon: string;\n\n  /** Font set that the icon is a part of. */\n  @Input()\n  get fontSet(): string { return this._fontSet; }\n  set fontSet(value: string) {\n    this._fontSet = this._cleanupFontValue(value);\n  }\n  private _fontSet: string;\n\n  /** Name of an icon within a font set. */\n  @Input()\n  get fontIcon(): string { return this._fontIcon; }\n  set fontIcon(value: string) {\n    this._fontIcon = this._cleanupFontValue(value);\n  }\n  private _fontIcon: string;\n\n  private _previousFontSetClass: string;\n  private _previousFontIconClass: string;\n\n  /** Keeps track of the current page path. */\n  private _previousPath?: string;\n\n  /** Keeps track of the elements and attributes that we've prefixed with the current path. */\n  private _elementsWithExternalReferences?: Map<Element, {name: string, value: string}[]>;\n\n  constructor(\n      elementRef: ElementRef<HTMLElement>,\n      private _iconRegistry: MatIconRegistry,\n      @Attribute('aria-hidden') ariaHidden: string,\n      /**\n       * @deprecated `location` parameter to be made required.\n       * @breaking-change 8.0.0\n       */\n      @Optional() @Inject(MAT_ICON_LOCATION) private _location?: MatIconLocation) {\n    super(elementRef);\n\n    // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n    // the right thing to do for the majority of icon use-cases.\n    if (!ariaHidden) {\n      elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  /**\n   * Splits an svgIcon binding value into its icon set and icon name components.\n   * Returns a 2-element array of [(icon set), (icon name)].\n   * The separator for the two fields is ':'. If there is no separator, an empty\n   * string is returned for the icon set and the entire value is returned for\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\n   * Throws an error if the name contains two or more ':' separators.\n   * Examples:\n   *   `'social:cake' -> ['social', 'cake']\n   *   'penguin' -> ['', 'penguin']\n   *   null -> ['', '']\n   *   'a:b:c' -> (throws Error)`\n   */\n  private _splitIconName(iconName: string): [string, string] {\n    if (!iconName) {\n      return ['', ''];\n    }\n    const parts = iconName.split(':');\n    switch (parts.length) {\n      case 1: return ['', parts[0]]; // Use default namespace.\n      case 2: return <[string, string]>parts;\n      default: throw Error(`Invalid icon name: \"${iconName}\"`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n    const svgIconChanges = changes['svgIcon'];\n\n    if (svgIconChanges) {\n      if (this.svgIcon) {\n        const [namespace, iconName] = this._splitIconName(this.svgIcon);\n\n        this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(\n          svg => this._setSvgElement(svg),\n          (err: Error) => console.log(`Error retrieving icon: ${err.message}`)\n        );\n      } else if (svgIconChanges.previousValue) {\n        this._clearSvgElement();\n      }\n    }\n\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n\n  ngOnInit() {\n    // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n    // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n\n  ngAfterViewChecked() {\n    const cachedElements = this._elementsWithExternalReferences;\n\n    if (cachedElements && this._location && cachedElements.size) {\n      const newPath = this._location.getPathname();\n\n      // We need to check whether the URL has changed on each change detection since\n      // the browser doesn't have an API that will let us react on link clicks and\n      // we can't depend on the Angular router. The references need to be updated,\n      // because while most browsers don't care whether the URL is correct after\n      // the first render, Safari will break if the user navigates to a different\n      // page and the SVG isn't re-rendered.\n      if (newPath !== this._previousPath) {\n        this._previousPath = newPath;\n        this._prependPathToReferences(newPath);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n  }\n\n  private _usingFontIcon(): boolean {\n    return !this.svgIcon;\n  }\n\n  private _setSvgElement(svg: SVGElement) {\n    this._clearSvgElement();\n\n    // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n    // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n    // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n    const styleTags = svg.querySelectorAll('style') as NodeListOf<HTMLStyleElement>;\n\n    for (let i = 0; i < styleTags.length; i++) {\n      styleTags[i].textContent += ' ';\n    }\n\n    // Note: we do this fix here, rather than the icon registry, because the\n    // references have to point to the URL at the time that the icon was created.\n    if (this._location) {\n      const path = this._location.getPathname();\n      this._previousPath = path;\n      this._cacheChildrenWithExternalReferences(svg);\n      this._prependPathToReferences(path);\n    }\n\n    this._elementRef.nativeElement.appendChild(svg);\n  }\n\n  private _clearSvgElement() {\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n\n    // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n    // we can't use innerHTML, because IE will throw if the element has a data binding.\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n\n      // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n      // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n        layoutElement.removeChild(child);\n      }\n    }\n  }\n\n  private _updateFontIconClasses() {\n    if (!this._usingFontIcon()) {\n      return;\n    }\n\n    const elem: HTMLElement = this._elementRef.nativeElement;\n    const fontSetClass = this.fontSet ?\n        this._iconRegistry.classNameForFontAlias(this.fontSet) :\n        this._iconRegistry.getDefaultFontSetClass();\n\n    if (fontSetClass != this._previousFontSetClass) {\n      if (this._previousFontSetClass) {\n        elem.classList.remove(this._previousFontSetClass);\n      }\n      if (fontSetClass) {\n        elem.classList.add(fontSetClass);\n      }\n      this._previousFontSetClass = fontSetClass;\n    }\n\n    if (this.fontIcon != this._previousFontIconClass) {\n      if (this._previousFontIconClass) {\n        elem.classList.remove(this._previousFontIconClass);\n      }\n      if (this.fontIcon) {\n        elem.classList.add(this.fontIcon);\n      }\n      this._previousFontIconClass = this.fontIcon;\n    }\n  }\n\n  /**\n   * Cleans up a value to be used as a fontIcon or fontSet.\n   * Since the value ends up being assigned as a CSS class, we\n   * have to trim the value and omit space-separated values.\n   */\n  private _cleanupFontValue(value: string) {\n    return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n  }\n\n  /**\n   * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n   * reference. This is required because WebKit browsers require references to be prefixed with\n   * the current path, if the page has a `base` tag.\n   */\n  private _prependPathToReferences(path: string) {\n    const elements = this._elementsWithExternalReferences;\n\n    if (elements) {\n      elements.forEach((attrs, element) => {\n        attrs.forEach(attr => {\n          element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n        });\n      });\n    }\n  }\n\n  /**\n   * Caches the children of an SVG element that have `url()`\n   * references that we need to prefix with the current path.\n   */\n  private _cacheChildrenWithExternalReferences(element: SVGElement) {\n    const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n    const elements = this._elementsWithExternalReferences =\n        this._elementsWithExternalReferences || new Map();\n\n    for (let i = 0; i < elementsWithFuncIri.length; i++) {\n      funcIriAttributes.forEach(attr => {\n        const elementWithReference = elementsWithFuncIri[i];\n        const value = elementWithReference.getAttribute(attr);\n        const match = value ? value.match(funcIriPattern) : null;\n\n        if (match) {\n          let attributes = elements.get(elementWithReference);\n\n          if (!attributes) {\n            attributes = [];\n            elements.set(elementWithReference, attributes);\n          }\n\n          attributes!.push({name: attr, value: match[1]});\n        }\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatIcon} from './icon';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatIcon, MatCommonModule],\n  declarations: [MatIcon],\n})\nexport class MatIconModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Optional,\n  QueryList,\n  ViewEncapsulation,\n  OnChanges,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MatLine,\n  setLines,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nclass MatListBase {}\nconst _MatListMixinBase: CanDisableRippleCtor & typeof MatListBase =\n    mixinDisableRipple(MatListBase);\n\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nclass MatListItemBase {}\nconst _MatListItemMixinBase: CanDisableRippleCtor & typeof MatListItemBase =\n    mixinDisableRipple(MatListItemBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-nav-list',\n  exportAs: 'matNavList',\n  host: {\n    'role': 'navigation',\n    'class': 'mat-nav-list mat-list-base'\n  },\n  templateUrl: 'list.html',\n  styleUrls: ['list.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatNavList extends _MatListMixinBase implements CanDisableRipple, OnChanges,\n  OnDestroy {\n  /** Emits when the state of the list changes. */\n  _stateChanges = new Subject<void>();\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-list, mat-action-list',\n  exportAs: 'matList',\n  templateUrl: 'list.html',\n  host: {\n    'class': 'mat-list mat-list-base'\n  },\n  styleUrls: ['list.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatList extends _MatListMixinBase implements CanDisableRipple, OnChanges, OnDestroy {\n  /** Emits when the state of the list changes. */\n  _stateChanges = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>) {\n    super();\n\n    if (this._getListType() === 'action-list') {\n      _elementRef.nativeElement.classList.add('mat-action-list');\n    }\n  }\n\n  _getListType(): 'list' | 'action-list' | null {\n    const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n\n    if (nodeName === 'mat-list') {\n      return 'list';\n    }\n\n    if (nodeName === 'mat-action-list') {\n      return 'action-list';\n    }\n\n    return null;\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-avatar], [matListAvatar]',\n  host: {'class': 'mat-list-avatar'}\n})\nexport class MatListAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-icon], [matListIcon]',\n  host: {'class': 'mat-list-icon'}\n})\nexport class MatListIconCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-subheader], [matSubheader]',\n  host: {'class': 'mat-subheader'}\n})\nexport class MatListSubheaderCssMatStyler {}\n\n/** An item within a Material Design list. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n  exportAs: 'matListItem',\n  host: {\n    'class': 'mat-list-item',\n    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n    '[class.mat-list-item-avatar]': '_avatar || _icon',\n    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n  },\n  inputs: ['disableRipple'],\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatListItem extends _MatListItemMixinBase implements AfterContentInit,\n    CanDisableRipple, OnDestroy {\n  private _isInteractiveList: boolean = false;\n  private _list?: MatNavList | MatList;\n  private _destroyed = new Subject<void>();\n\n  @ContentChildren(MatLine, {descendants: true}) _lines: QueryList<MatLine>;\n  @ContentChild(MatListAvatarCssMatStyler, {static: false}) _avatar: MatListAvatarCssMatStyler;\n  @ContentChild(MatListIconCssMatStyler, {static: false}) _icon: MatListIconCssMatStyler;\n\n  constructor(private _element: ElementRef<HTMLElement>,\n              _changeDetectorRef: ChangeDetectorRef,\n              @Optional() navList?: MatNavList,\n              @Optional() list?: MatList) {\n    super();\n    this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n    this._list = navList || list;\n\n    // If no type attributed is specified for <button>, set it to \"button\".\n    // If a type attribute is already specified, do nothing.\n    const element = this._getHostElement();\n\n    if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n      element.setAttribute('type', 'button');\n    }\n\n    if (this._list) {\n      // React to changes in the state of the parent list since\n      // some of the item's properties depend on it (e.g. `disableRipple`).\n      this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        _changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Whether this list item should show a ripple effect when clicked. */\n  _isRippleDisabled() {\n    return !this._isInteractiveList || this.disableRipple ||\n           !!(this._list && this._list.disableRipple);\n  }\n\n  /** Retrieves the DOM element of the component host. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  SPACE,\n  ENTER,\n  HOME,\n  END,\n  UP_ARROW,\n  DOWN_ARROW,\n  A,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport {\n  CanDisableRipple, CanDisableRippleCtor,\n  MatLine,\n  setLines,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {MatListAvatarCssMatStyler, MatListIconCssMatStyler} from './list';\n\n\n/** @docs-private */\nclass MatSelectionListBase {}\nconst _MatSelectionListMixinBase: CanDisableRippleCtor & typeof MatSelectionListBase =\n    mixinDisableRipple(MatSelectionListBase);\n\n/** @docs-private */\nclass MatListOptionBase {}\nconst _MatListOptionMixinBase: CanDisableRippleCtor & typeof MatListOptionBase =\n    mixinDisableRipple(MatListOptionBase);\n\n/** @docs-private */\nexport const MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSelectionList),\n  multi: true\n};\n\n/** Change event that is being fired whenever the selected state of an option changes. */\nexport class MatSelectionListChange {\n  constructor(\n    /** Reference to the selection list that emitted the event. */\n    public source: MatSelectionList,\n    /** Reference to the option that has been changed. */\n    public option: MatListOption) {}\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-list-option',\n  exportAs: 'matListOption',\n  inputs: ['disableRipple'],\n  host: {\n    'role': 'option',\n    'class': 'mat-list-item mat-list-option',\n    '(focus)': '_handleFocus()',\n    '(blur)': '_handleBlur()',\n    '(click)': '_handleClick()',\n    'tabindex': '-1',\n    '[class.mat-list-item-disabled]': 'disabled',\n    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n    // its theme. The accent theme palette is the default and doesn't need to be set.\n    '[class.mat-primary]': 'color === \"primary\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  },\n  templateUrl: 'list-option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatListOption extends _MatListOptionMixinBase\n    implements AfterContentInit, OnDestroy, OnInit, FocusableOption, CanDisableRipple {\n\n  private _selected = false;\n  private _disabled = false;\n  private _hasFocus = false;\n\n  @ContentChild(MatListAvatarCssMatStyler, {static: false}) _avatar: MatListAvatarCssMatStyler;\n  @ContentChild(MatListIconCssMatStyler, {static: false}) _icon: MatListIconCssMatStyler;\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\n\n  /** DOM element containing the item's text. */\n  @ViewChild('text', {static: false}) _text: ElementRef;\n\n  /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n  @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n  /** Theme color of the list option. This sets the color of the checkbox. */\n  @Input()\n  get color(): ThemePalette { return this._color || this.selectionList.color; }\n  set color(newValue: ThemePalette) { this._color = newValue; }\n  private _color: ThemePalette;\n\n  /** Value of the option */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (this.selected && newValue !== this.value) {\n      this.selected = false;\n    }\n\n    this._value = newValue;\n  }\n  private _value: any;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n  set disabled(value: any) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /** Whether the option is selected. */\n  @Input()\n  get selected(): boolean { return this.selectionList.selectedOptions.isSelected(this); }\n  set selected(value: boolean) {\n    const isSelected = coerceBooleanProperty(value);\n\n    if (isSelected !== this._selected) {\n      this._setSelected(isSelected);\n      this.selectionList._reportValueChange();\n    }\n  }\n\n  constructor(private _element: ElementRef<HTMLElement>,\n              private _changeDetector: ChangeDetectorRef,\n              /** @docs-private */\n              @Inject(forwardRef(() => MatSelectionList)) public selectionList: MatSelectionList) {\n    super();\n  }\n\n  ngOnInit() {\n    // List options that are selected at initialization can't be reported properly to the form\n    // control. This is because it takes some time until the selection-list knows about all\n    // available options. Also it can happen that the ControlValueAccessor has an initial value\n    // that should be used instead. Deferring the value change report to the next tick ensures\n    // that the form control value is not being overwritten.\n    const wasSelected = this._selected;\n\n    Promise.resolve().then(() => {\n      if (this._selected || wasSelected) {\n        this.selected = true;\n        this._changeDetector.markForCheck();\n      }\n    });\n  }\n\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n\n  ngOnDestroy(): void {\n    if (this.selected) {\n      // We have to delay this until the next tick in order\n      // to avoid changed after checked errors.\n      Promise.resolve().then(() => {\n        this.selected = false;\n      });\n    }\n\n    const hadFocus = this._hasFocus;\n    const newActiveItem = this.selectionList._removeOptionFromList(this);\n\n    // Only move focus if this option was focused at the time it was destroyed.\n    if (hadFocus && newActiveItem) {\n      newActiveItem.focus();\n    }\n  }\n\n  /** Toggles the selection state of the option. */\n  toggle(): void {\n    this.selected = !this.selected;\n  }\n\n  /** Allows for programmatic focusing of the option. */\n  focus(): void {\n    this._element.nativeElement.focus();\n  }\n\n  /**\n   * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n   * @docs-private\n   */\n  getLabel() {\n    return this._text ? (this._text.nativeElement.textContent || '') : '';\n  }\n\n  /** Whether this list item should show a ripple effect when clicked. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n  }\n\n  _handleClick() {\n    if (!this.disabled) {\n      this.toggle();\n\n      // Emit a change event if the selected state of the option changed through user interaction.\n      this.selectionList._emitChangeEvent(this);\n    }\n  }\n\n  _handleFocus() {\n    this.selectionList._setFocusedOption(this);\n    this._hasFocus = true;\n  }\n\n  _handleBlur() {\n    this.selectionList._onTouched();\n    this._hasFocus = false;\n  }\n\n  /** Retrieves the DOM element of the component host. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  /** Sets the selected state of the option. Returns whether the value has changed. */\n  _setSelected(selected: boolean): boolean {\n    if (selected === this._selected) {\n      return false;\n    }\n\n    this._selected = selected;\n\n    if (selected) {\n      this.selectionList.selectedOptions.select(this);\n    } else {\n      this.selectionList.selectedOptions.deselect(this);\n    }\n\n    this._changeDetector.markForCheck();\n    return true;\n  }\n\n  /**\n   * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n   * used to trigger an update of the list option if the disabled state of the selection list\n   * changed.\n   */\n  _markForCheck() {\n    this._changeDetector.markForCheck();\n  }\n}\n\n\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-selection-list',\n  exportAs: 'matSelectionList',\n  inputs: ['disableRipple'],\n  host: {\n    'role': 'listbox',\n    '[tabIndex]': 'tabIndex',\n    'class': 'mat-selection-list mat-list-base',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_keydown($event)',\n    'aria-multiselectable': 'true',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  },\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatSelectionList extends _MatSelectionListMixinBase implements FocusableOption,\n    CanDisableRipple, AfterContentInit, ControlValueAccessor, OnDestroy, OnChanges {\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatListOption>;\n\n  /** The option components contained within this selection-list. */\n  @ContentChildren(MatListOption, {descendants: true}) options: QueryList<MatListOption>;\n\n  /** Emits a change event whenever the selected state of an option changes. */\n  @Output() readonly selectionChange: EventEmitter<MatSelectionListChange> =\n      new EventEmitter<MatSelectionListChange>();\n\n  /** Tabindex of the selection list. */\n  @Input() tabIndex: number = 0;\n\n  /** Theme color of the selection list. This sets the checkbox color for all list options. */\n  @Input() color: ThemePalette = 'accent';\n\n  /**\n   * Function used for comparing an option against the selected value when determining which\n   * options should appear as selected. The first argument is the value of an options. The second\n   * one is a value from the selected value. A boolean must be returned.\n   */\n  @Input() compareWith: (o1: any, o2: any) => boolean;\n\n  /** Whether the selection list is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n    // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n    // changed its state. Since we know that a change to `disabled` property of the list affects\n    // the state of the options, we manually mark each option for check.\n    this._markOptionsForCheck();\n  }\n  private _disabled: boolean = false;\n\n  /** The currently selected options. */\n  selectedOptions: SelectionModel<MatListOption> = new SelectionModel<MatListOption>(true);\n\n  /** View to model callback that should be called whenever the selected options change. */\n  private _onChange: (value: any) => void = (_: any) => {};\n\n  /** Used for storing the values that were assigned before the options were initialized. */\n  private _tempValues: string[]|null;\n\n  /** Subscription to sync value changes in the SelectionModel back to the SelectionList. */\n  private _modelChanges = Subscription.EMPTY;\n\n  /** View to model callback that should be called if the list or its options lost focus. */\n  _onTouched: () => void = () => {};\n\n  /** Whether the list has been destroyed. */\n  private _destroyed: boolean;\n\n  constructor(private _element: ElementRef<HTMLElement>, @Attribute('tabindex') tabIndex: string) {\n    super();\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngAfterContentInit(): void {\n    this._keyManager = new FocusKeyManager<MatListOption>(this.options)\n      .withWrap()\n      .withTypeAhead()\n      // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n      // screenreader users, that allows reading the different options of the list.\n      .skipPredicate(() => false)\n      .withAllowedModifierKeys(['shiftKey']);\n\n    if (this._tempValues) {\n      this._setOptionsFromValues(this._tempValues);\n      this._tempValues = null;\n    }\n\n    // Sync external changes to the model back to the options.\n    this._modelChanges = this.selectedOptions.onChange.subscribe(event => {\n      if (event.added) {\n        for (let item of event.added) {\n          item.selected = true;\n        }\n      }\n\n      if (event.removed) {\n        for (let item of event.removed) {\n          item.selected = false;\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const disableRippleChanges = changes['disableRipple'];\n    const colorChanges = changes['color'];\n\n    if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n        (colorChanges && !colorChanges.firstChange)) {\n      this._markOptionsForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._modelChanges.unsubscribe();\n  }\n\n  /** Focuses the selection list. */\n  focus() {\n    this._element.nativeElement.focus();\n  }\n\n  /** Selects all of the options. */\n  selectAll() {\n    this._setAllOptionsSelected(true);\n  }\n\n  /** Deselects all of the options. */\n  deselectAll() {\n    this._setAllOptionsSelected(false);\n  }\n\n  /** Sets the focused option of the selection-list. */\n  _setFocusedOption(option: MatListOption) {\n    this._keyManager.updateActiveItem(option);\n  }\n\n  /**\n   * Removes an option from the selection list and updates the active item.\n   * @returns Currently-active item.\n   */\n  _removeOptionFromList(option: MatListOption): MatListOption | null {\n    const optionIndex = this._getOptionIndex(option);\n\n    if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n      // Check whether the option is the last item\n      if (optionIndex > 0) {\n        this._keyManager.updateActiveItem(optionIndex - 1);\n      } else if (optionIndex === 0 && this.options.length > 1) {\n        this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n      }\n    }\n\n    return this._keyManager.activeItem;\n  }\n\n  /** Passes relevant key presses to our key manager. */\n  _keydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    const previousFocusIndex = manager.activeItemIndex;\n    const hasModifier = hasModifierKey(event);\n\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        if (!hasModifier) {\n          this._toggleFocusedOption();\n          // Always prevent space from scrolling the page since the list has focus\n          event.preventDefault();\n        }\n        break;\n      case HOME:\n      case END:\n        if (!hasModifier) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n        break;\n      case A:\n        if (hasModifierKey(event, 'ctrlKey')) {\n          this.options.find(option => !option.selected) ? this.selectAll() : this.deselectAll();\n          event.preventDefault();\n        }\n        break;\n      default:\n        manager.onKeydown(event);\n    }\n\n    if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n        manager.activeItemIndex !== previousFocusIndex) {\n      this._toggleFocusedOption();\n    }\n  }\n\n  /** Reports a value change to the ControlValueAccessor */\n  _reportValueChange() {\n    // Stop reporting value changes after the list has been destroyed. This avoids\n    // cases where the list might wrongly reset its value once it is removed, but\n    // the form control is still live.\n    if (this.options && !this._destroyed) {\n      this._onChange(this._getSelectedOptionValues());\n    }\n  }\n\n  /** Emits a change event if the selected state of an option changed. */\n  _emitChangeEvent(option: MatListOption) {\n    this.selectionChange.emit(new MatSelectionListChange(this, option));\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(values: string[]): void {\n    if (this.options) {\n      this._setOptionsFromValues(values || []);\n    } else {\n      this._tempValues = values;\n    }\n  }\n\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  /** Sets the selected options based on the specified values. */\n  private _setOptionsFromValues(values: string[]) {\n    this.options.forEach(option => option._setSelected(false));\n\n    values.forEach(value => {\n      const correspondingOption = this.options.find(option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        if (option.selected) {\n          return false;\n        }\n\n        return this.compareWith ? this.compareWith(option.value, value) : option.value === value;\n      });\n\n      if (correspondingOption) {\n        correspondingOption._setSelected(true);\n      }\n    });\n  }\n\n  /** Returns the values of the selected options. */\n  private _getSelectedOptionValues(): string[] {\n    return this.options.filter(option => option.selected).map(option => option.value);\n  }\n\n  /** Toggles the state of the currently focused option if enabled. */\n  private _toggleFocusedOption(): void {\n    let focusedIndex = this._keyManager.activeItemIndex;\n\n    if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n      let focusedOption: MatListOption = this.options.toArray()[focusedIndex];\n\n      if (focusedOption && !focusedOption.disabled) {\n        focusedOption.toggle();\n\n        // Emit a change event because the focused option changed its state through user\n        // interaction.\n        this._emitChangeEvent(focusedOption);\n      }\n    }\n  }\n\n  /**\n   * Sets the selected state on all of the options\n   * and emits an event if anything changed.\n   */\n  private _setAllOptionsSelected(isSelected: boolean) {\n    // Keep track of whether anything changed, because we only want to\n    // emit the changed event when something actually changed.\n    let hasChanged = false;\n\n    this.options.forEach(option => {\n      if (option._setSelected(isSelected)) {\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      this._reportValueChange();\n    }\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of options.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.options.length;\n  }\n\n  /** Returns the index of the specified list option. */\n  private _getOptionIndex(option: MatListOption): number {\n    return this.options.toArray().indexOf(option);\n  }\n\n  /** Marks all the options to be checked in the next change detection run. */\n  private _markOptionsForCheck() {\n    if (this.options) {\n      this.options.forEach(option => option._markForCheck());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n  MatCommonModule,\n  MatLineModule,\n  MatPseudoCheckboxModule,\n  MatRippleModule,\n} from '@angular/material/core';\nimport {\n  MatList,\n  MatNavList,\n  MatListAvatarCssMatStyler,\n  MatListIconCssMatStyler,\n  MatListItem,\n  MatListSubheaderCssMatStyler,\n} from './list';\nimport {MatListOption, MatSelectionList} from './selection-list';\nimport {MatDividerModule} from '@angular/material/divider';\n\n\n@NgModule({\n  imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n  exports: [\n    MatList,\n    MatNavList,\n    MatListItem,\n    MatListAvatarCssMatStyler,\n    MatLineModule,\n    MatCommonModule,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatPseudoCheckboxModule,\n    MatSelectionList,\n    MatListOption,\n    MatDividerModule\n  ],\n  declarations: [\n    MatList,\n    MatNavList,\n    MatListItem,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatSelectionList,\n    MatListOption\n  ],\n})\nexport class MatListModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const matMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(0.8)'\n    })),\n    transition('void => enter', group([\n      query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n        opacity: 1\n      }))),\n      animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'})),\n    ])),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ]),\n\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    // TODO(crisbeto): this is inside the `transformMenu`\n    // now. Remove next time we do breaking changes.\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const fadeInItems = matMenuAnimations.fadeInItems;\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const transformMenu = matMenuAnimations.transformMenu;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {Subject} from 'rxjs';\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n@Directive({\n  selector: 'ng-template[matMenuContent]'\n})\nexport class MatMenuContent implements OnDestroy {\n  private _portal: TemplatePortal<any>;\n  private _outlet: DomPortalOutlet;\n\n  /** Emits when the menu content has been attached. */\n  _attached = new Subject<void>();\n\n  constructor(\n    private _template: TemplateRef<any>,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context: any = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n          this._componentFactoryResolver, this._appRef, this._injector);\n    }\n\n    const element: HTMLElement = this._template.elementRef.nativeElement;\n\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {Direction} from '@angular/cdk/bidi';\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {MatMenuContent} from './menu-content';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nexport const MAT_MENU_PANEL = new InjectionToken<MatMenuPanel>('MAT_MENU_PANEL');\n\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * @docs-private\n */\nexport interface MatMenuPanel<T = any> {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n  templateRef: TemplateRef<any>;\n  close: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n  parentMenu?: MatMenuPanel | undefined;\n  direction?: Direction;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  resetActiveItem: () => void;\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\n  setElevation?(depth: number): void;\n  lazyContent?: MatMenuContent;\n  backdropClass?: string;\n  hasBackdrop?: boolean;\n  addItem?: (item: T) => void;\n  removeItem?: (item: T) => void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  Input,\n  HostListener,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {}\nconst _MatMenuItemMixinBase: CanDisableRippleCtor & CanDisableCtor & typeof MatMenuItemBase =\n    mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    '[attr.role]': 'role',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n})\nexport class MatMenuItem extends _MatMenuItemMixinBase\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\n\n  /** ARIA role for the menu item. */\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n  private _document: Document;\n\n  /** Stream that emits when the menu item is hovered. */\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\n\n  /** Whether the menu item is highlighted. */\n  _highlighted: boolean = false;\n\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu: boolean = false;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) document?: any,\n    private _focusMonitor?: FocusMonitor,\n    @Inject(MAT_MENU_PANEL) @Optional() private _parentMenu?: MatMenuPanel<MatMenuItem>) {\n\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._elementRef, false);\n    }\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n\n    this._document = document;\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program'): void {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n\n    this._hovered.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  _checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('mouseenter')\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    let output = '';\n\n    if (element.childNodes) {\n      const length = element.childNodes.length;\n\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  UP_ARROW,\n  HOME,\n  END,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnInit,\n} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, switchMap, take} from 'rxjs/operators';\nimport {matMenuAnimations} from './menu-animations';\nimport {MatMenuContent} from './menu-content';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\nimport {AnimationEvent} from '@angular/animations';\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  /** The x-axis position of the menu. */\n  xPosition: MenuPositionX;\n\n  /** The y-axis position of the menu. */\n  yPosition: MenuPositionY;\n\n  /** Whether the menu should overlap the menu trigger. */\n  overlapTrigger: boolean;\n\n  /** Class to be applied to the menu's backdrop. */\n  backdropClass: string;\n\n  /** Whether the menu has a backdrop. */\n  hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\n      providedIn: 'root',\n      factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_MENU_DEFAULT_OPTIONS_FACTORY(): MatMenuDefaultOptions {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n  };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n\n/** Base class with all of the `MatMenu` functionality. */\n// tslint:disable-next-line:class-name\nexport class _MatMenuBase implements AfterContentInit, MatMenuPanel<MatMenuItem>, OnInit,\n  OnDestroy {\n  private _keyManager: FocusKeyManager<MatMenuItem>;\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\n  private _previousElevation: string;\n\n  /** Menu items inside the current menu. */\n  private _items: MatMenuItem[] = [];\n\n  /** Emits whenever the amount of menu items changes. */\n  private _itemChanges = new Subject<MatMenuItem[]>();\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: {[key: string]: boolean} = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  /** Emits whenever an animation on the menu completes. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  /** Whether the menu is animating. */\n  _isAnimating: boolean;\n\n  /** Parent menu of the current menu panel. */\n  parentMenu: MatMenuPanel | undefined;\n\n  /** Layout direction of the menu. */\n  direction: Direction;\n\n  /** Class to be added to the backdrop element. */\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX { return this._xPosition; }\n  set xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY { return this._yPosition; }\n  set yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** @docs-private */\n  @ViewChild(TemplateRef, {static: false}) templateRef: TemplateRef<any>;\n\n  /**\n   * List of the items inside of a menu.\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n\n  /**\n   * Menu content that will be rendered lazily.\n   * @docs-private\n   */\n  @ContentChild(MatMenuContent, {static: false}) lazyContent: MatMenuContent;\n\n  /** Whether the menu should overlap its trigger. */\n  @Input()\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n\n  /** Whether the menu has a backdrop. */\n  @Input()\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n  set hasBackdrop(value: boolean | undefined) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set panelClass(classes: string) {\n    const previousPanelClass = this._previousPanelClass;\n\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach((className: string) => {\n        this._classList[className] = false;\n      });\n    }\n\n    this._previousPanelClass = classes;\n\n    if (classes && classes.length) {\n      classes.split(' ').forEach((className: string) => {\n        this._classList[className] = true;\n      });\n\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  private _previousPanelClass: string;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  @Input()\n  get classList(): string { return this.panelClass; }\n  set classList(classes: string) { this.panelClass = classes; }\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @breaking-change 8.0.0\n   */\n  @Output() close = this.closed;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this._items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n  }\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered(): Observable<MatMenuItem> {\n    return this._itemChanges.pipe(\n      startWith(this._items),\n      switchMap(items => merge(...items.map(item => item._hovered)))\n    );\n  }\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case HOME:\n      case END:\n        if (!hasModifierKey(event)) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n      break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable()\n        .pipe(take(1))\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n    }\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /**\n   * Registers a menu item with the menu.\n   * @docs-private\n   */\n  addItem(item: MatMenuItem) {\n    // We register the items through this method, rather than picking them up through\n    // `ContentChildren`, because we need the items to be picked up by their closest\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n    // all descendant items will bleed into the top-level menu in the case where the consumer\n    // has `mat-menu` instances nested inside each other.\n    if (this._items.indexOf(item) === -1) {\n      this._items.push(item);\n      this._itemChanges.next(this._items);\n    }\n  }\n\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   */\n  removeItem(item: MatMenuItem) {\n    const index = this._items.indexOf(item);\n\n    if (this._items.indexOf(item) > -1) {\n      this._items.splice(index, 1);\n      this._itemChanges.next(this._items);\n    }\n  }\n\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n\n  _onAnimationStart(event: AnimationEvent) {\n    this._isAnimating = true;\n\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n}\n\nexport class MatMenu extends _MatMenuBase {}\n\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matMenu',\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  providers: [\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu},\n    {provide: MatMenu, useExisting: _MatMenu}\n  ]\n})\n// tslint:disable-next-line:class-name\nexport class _MatMenu extends MatMenu {\n\n  constructor(elementRef: ElementRef<HTMLElement>, ngZone: NgZone,\n      @Inject(MAT_MENU_DEFAULT_OPTIONS) defaultOptions: MatMenuDefaultOptions) {\n    super(elementRef, ngZone, defaultOptions);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  VerticalConnectionPos,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\nimport {MatMenu} from './menu';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n/** Injection token that determines the scroll handling while the menu is open. */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default top padding of the menu panel. */\nexport const MENU_PANEL_TOP_PADDING = 8;\n\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\n@Directive({\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'menuOpen || null',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n})\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen: boolean = false;\n  private _closingActionsSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n  private _menuCloseSubscription = Subscription.EMPTY;\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /**\n   * Handles touch start events on the trigger.\n   * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n   */\n  private _handleTouchStart = () => this._openedBy = 'touch';\n\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  _openedBy: 'mouse' | 'touch' | null = null;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @Input('mat-menu-trigger-for')\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel { return this.menu; }\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('matMenuTriggerFor')\n  get menu() { return this._menu; }\n  set menu(menu: MatMenuPanel) {\n    if (menu === this._menu) {\n      return;\n    }\n\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      this._menuCloseSubscription = menu.close.asObservable().subscribe(reason => {\n        this._destroyMenu();\n\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n          this._parentMenu.closed.emit(reason);\n        }\n      });\n    }\n  }\n  private _menu: MatMenuPanel;\n\n  /** Data to be passed along to any lazily-rendered content. */\n  @Input('matMenuTriggerData') menuData: any;\n\n  /**\n   * Whether focus should be restored when the menu is closed.\n   * Note that disabling this option can have accessibility implications\n   * and it's up to you to manage focus, if you decide to turn it off.\n   */\n  @Input('matMenuTriggerRestoreFocus') restoreFocus: boolean = true;\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\n\n  constructor(private _overlay: Overlay,\n              private _element: ElementRef<HTMLElement>,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_MENU_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _parentMenu: MatMenu,\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\n              @Optional() private _dir: Directionality,\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n              // @breaking-change 8.0.0\n              private _focusMonitor?: FocusMonitor) {\n\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart,\n        passiveEventListenerOptions);\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n    this._handleHover();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart,\n        passiveEventListenerOptions);\n\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    const overlayRef = this._createOverlay();\n    const overlayConfig = overlayRef.getConfig();\n\n    this._setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n        this.menu.hasBackdrop;\n    overlayRef.attach(this._getPortal());\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu();\n\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin: FocusOrigin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone\n          .pipe(\n            filter(event => event.toState === 'void'),\n            take(1),\n            // Interrupt if the content got re-attached.\n            takeUntil(menu.lazyContent._attached)\n          )\n          .subscribe(() => menu.lazyContent!.detach(), undefined, () => {\n            // No matter whether the content got re-attached, reset the menu.\n            this._resetMenu();\n          });\n      } else {\n        this._resetMenu();\n      }\n    } else {\n      this._resetMenu();\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   */\n  private _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (this.restoreFocus) {\n      if (!this._openedBy) {\n        // Note that the focus style will show up both for `program` and\n        // `keyboard` so we don't have to specify which one it is.\n        this.focus();\n      } else if (!this.triggersSubmenu()) {\n        this.focus(this._openedBy);\n      }\n    }\n\n    this._openedBy = null;\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n  private _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._overlayRef = this._overlay.create(config);\n\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position()\n          .flexibleConnectedTo(this._element)\n          .withLockedPosition()\n          .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n        this.menu.setPositionClasses!(posX, posY);\n      });\n    }\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([\n      {originX, originY, overlayX, overlayY, offsetY},\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }\n    ]);\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef!.backdropClick();\n    const detachments = this._overlayRef!.detachments();\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\n      filter(active => active !== this._menuItemInstance),\n      filter(() => this._menuOpen)\n    ) : observableOf();\n\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  /** Handles the cases where the user hovers over the trigger. */\n  private _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMenu._hovered()\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(\n        filter(active => active === this._menuItemInstance && !active.disabled),\n        delay(0, asapScheduler)\n      )\n      .subscribe(() => {\n        this._openedBy = 'mouse';\n\n        // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          this.menu._animationDone\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n            .subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n  }\n\n  /** Gets the portal that should be attached to the overlay. */\n  private _getPortal(): TemplatePortal {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n    }\n\n    return this._portal;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatMenuContent} from './menu-content';\nimport {_MatMenu} from './menu';\nimport {MatMenuItem} from './menu-item';\nimport {\n  MatMenuTrigger,\n  MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './menu-trigger';\n\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n@NgModule({\n  exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n  declarations: [MatMenuTrigger, MatMenuContent],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\n// tslint:disable-next-line:class-name\nexport class _MatMenuDirectivesModule {}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    MatRippleModule,\n    OverlayModule,\n    _MatMenuDirectivesModule,\n  ],\n  exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n  declarations: [_MatMenu, MatMenuItem],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  animate,\n  animateChild,\n  AnimationTriggerMetadata,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nexport const matSelectAnimations: {\n  readonly transformPanelWrap: AnimationTriggerMetadata;\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: trigger('transformPanelWrap', [\n      transition('* => void', query('@transformPanel', [animateChild()],\n          {optional: true}))\n  ]),\n\n  /**\n   * This animation transforms the select's overlay panel on and off the page.\n   *\n   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n   * side to ensure the option text correctly overlaps the trigger text.\n   *\n   * When the panel is removed from the DOM, it simply fades out linearly.\n   */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      transform: 'scaleY(0.8)',\n      minWidth: '100%',\n      opacity: 0\n    })),\n    state('showing', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\n      transform: 'scaleY(1)'\n    })),\n    state('showing-multiple', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\n      transform: 'scaleY(1)'\n    })),\n    transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ]),\n\n  /**\n   * This animation fades in the background color and text content of the\n   * select's options. It is time delayed to occur 100ms after the overlay\n   * panel has transformed in.\n   * @deprecated Not used anymore. To be removed.\n   * @breaking-change 8.0.0\n   */\n  fadeInContent: trigger('fadeInContent', [\n    state('showing', style({opacity: 1})),\n    transition('void => showing', [\n      style({opacity: 0}),\n      animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const transformPanel = matSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const fadeInContent = matSelectAnimations.fadeInContent;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMatSelectDynamicMultipleError(): Error {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMatSelectNonArrayValueError(): Error {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMatSelectNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveDescendantKeyManager, LiveAnnouncer} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  A,\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {CdkConnectedOverlay, Overlay, ScrollStrategy} from '@angular/cdk/overlay';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  isDevMode,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n  MatOptionSelectionChange,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinErrorState,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {MatFormField, MatFormFieldControl} from '@angular/material/form-field';\nimport {defer, merge, Observable, Subject} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\nimport {matSelectAnimations} from './select-animations';\nimport {\n  getMatSelectDynamicMultipleError,\n  getMatSelectNonArrayValueError,\n  getMatSelectNonFunctionValueError,\n} from './select-errors';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 16;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 3;\n\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nexport let SELECT_MULTIPLE_PANEL_PADDING_X = 0;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MAT_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-select-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class MatSelectChange {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: MatSelect,\n    /** Current value of the select that emitted the event. */\n    public value: any) { }\n}\n\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n  constructor(public _elementRef: ElementRef,\n              public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              public ngControl: NgControl) {}\n}\nconst _MatSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanDisableRippleCtor &\n    CanUpdateErrorStateCtor &\n    typeof MatSelectBase =\n        mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({\n  selector: 'mat-select-trigger'\n})\nexport class MatSelectTrigger {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-select',\n  exportAs: 'matSelect',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'listbox',\n    '[attr.id]': 'id',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-label]': '_getAriaLabel()',\n    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select-invalid]': 'errorState',\n    '[class.mat-select-required]': 'required',\n    '[class.mat-select-empty]': 'empty',\n    'class': 'mat-select',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    matSelectAnimations.transformPanelWrap,\n    matSelectAnimations.transformPanel\n  ],\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatSelect},\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect}\n  ],\n})\nexport class MatSelect extends _MatSelectMixinBase implements AfterContentInit, OnChanges,\n    OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable, HasTabIndex,\n    MatFormFieldControl<any>, CanUpdateErrorState, CanDisableRipple {\n  private _scrollStrategyFactory: () => ScrollStrategy;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** Whether filling out the select is required in the form. */\n  private _required: boolean = false;\n\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\n  private _scrollTop = 0;\n\n  /** The placeholder displayed in the trigger of the select. */\n  private _placeholder: string;\n\n  /** Whether the component is in multiple selection mode. */\n  private _multiple: boolean = false;\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /** Unique id for this input. */\n  private _uid = `mat-select-${nextUniqueId++}`;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** The aria-describedby attribute on the select for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** The cached font-size of the trigger element. */\n  _triggerFontSize = 0;\n\n  /** Deals with the selection logic. */\n  _selectionModel: SelectionModel<MatOption>;\n\n  /** Manages keyboard events for options in the panel. */\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** The value of the select panel's transform-origin property. */\n  _transformOrigin: string = 'top';\n\n  /** Emits when the panel element is finished transforming in. */\n  _panelDoneAnimatingStream = new Subject<string>();\n\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\n  _scrollStrategy: ScrollStrategy;\n\n  /**\n   * The y-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text.\n   * when the panel opens. Will change based on the y-position of the selected option.\n   */\n  _offsetY = 0;\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n\n  /** Whether the component is disabling centering of the active option over the trigger. */\n  private _disableOptionCentering: boolean = false;\n\n  /** Whether the select is focused. */\n  get focused(): boolean {\n    return this._focused || this._panelOpen;\n  }\n  /**\n   * @deprecated Setter to be removed as this property is intended to be readonly.\n   * @breaking-change 8.0.0\n   */\n  set focused(value: boolean) {\n    this._focused = value;\n  }\n  private _focused = false;\n\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mat-select';\n\n  /** Trigger that opens the select. */\n  @ViewChild('trigger', {static: false}) trigger: ElementRef;\n\n  /** Panel containing the select options. */\n  @ViewChild('panel', {static: false}) panel: ElementRef;\n\n  /** Overlay pane containing the options. */\n  @ViewChild(CdkConnectedOverlay, {static: false}) overlayDir: CdkConnectedOverlay;\n\n  /** All of the defined select options. */\n  @ContentChildren(MatOption, { descendants: true }) options: QueryList<MatOption>;\n\n  /** All of the defined groups of options. */\n  @ContentChildren(MatOptgroup) optionGroups: QueryList<MatOptgroup>;\n\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** User-supplied override of the trigger element. */\n  @ContentChild(MatSelectTrigger, {static: false}) customTrigger: MatSelectTrigger;\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /** Whether the component is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    if (this._selectionModel) {\n      throw getMatSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n\n  /** Whether to center the active option over the trigger. */\n  @Input()\n  get disableOptionCentering(): boolean { return this._disableOptionCentering; }\n  set disableOptionCentering(value: boolean) {\n    this._disableOptionCentering = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  /** Value of the select control. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n    }\n  }\n  private _value: any;\n\n  /** Aria label of the select. If not specified, the placeholder will be used as label. */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /**\n   * Function used to sort the values in a select in multiple mode.\n   * Follows the same logic as `Array.prototype.sort`.\n   */\n  @Input() sortComparator: (a: MatOption, b: MatOption, options: MatOption[]) => number;\n\n  /** Unique id of the element. */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  private _id: string;\n\n  /** Combined stream of all of the child options' change events. */\n  readonly optionSelectionChanges: Observable<MatOptionSelectionChange> = defer(() => {\n    const options = this.options;\n\n    if (options) {\n      return options.changes.pipe(\n        startWith(options),\n        switchMap(() => merge(...options.map(option => option.onSelectionChange)))\n      );\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  }) as Observable<MatOptionSelectionChange>;\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => o), map(() => {}));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => !o), map(() => {}));\n\n   /** Event emitted when the selected value has been changed by the user. */\n  @Output() readonly selectionChange: EventEmitter<MatSelectChange> =\n      new EventEmitter<MatSelectChange>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private _viewportRuler: ViewportRuler,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _ngZone: NgZone,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    elementRef: ElementRef,\n    @Optional() private _dir: Directionality,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() private _parentFormField: MatFormField,\n    @Self() @Optional() public ngControl: NgControl,\n    @Attribute('tabindex') tabIndex: string,\n    @Inject(MAT_SELECT_SCROLL_STRATEGY) scrollStrategyFactory: any,\n    /**\n     * @deprecated _liveAnnouncer to be turned into a required parameter.\n     * @breaking-change 8.0.0\n     */\n    private _liveAnnouncer?: LiveAnnouncer) {\n    super(elementRef, _defaultErrorStateMatcher, _parentForm,\n          _parentFormGroup, ngControl);\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatOption>(this.multiple);\n    this.stateChanges.next();\n\n    // We need `distinctUntilChanged` here, because some browsers will\n    // fire the animation end event twice for the same animation. See:\n    // https://github.com/angular/angular/issues/24084\n    this._panelDoneAnimatingStream\n      .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this.panelOpen) {\n          this._scrollTop = 0;\n          this.openedChange.emit(true);\n        } else {\n          this.openedChange.emit(false);\n          this.overlayDir.offsetX = 0;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n\n    this._viewportRuler.change()\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this._panelOpen) {\n          this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n  }\n\n  ngAfterContentInit() {\n    this._initKeyManager();\n\n    this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled']) {\n      this.stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n  }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n    // `parseInt` ignores the trailing 'px' and converts this to a number.\n    this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n\n    this._panelOpen = true;\n    this._keyManager.withHorizontalOrientation(null);\n    this._calculateOverlayPosition();\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n\n    // Set the font size on the panel element once it exists.\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      if (this._triggerFontSize && this.overlayDir.overlayRef &&\n          this.overlayDir.overlayRef.overlayElement) {\n        this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n      }\n    });\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n    }\n  }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  /** The currently selected option. */\n  get selected(): MatOption | MatOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The value displayed in the trigger. */\n  get triggerValue(): string {\n    if (this.empty) {\n      return '';\n    }\n\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /** Whether the element is in RTL mode. */\n  _isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n\n  /** Handles keyboard events while the select is closed. */\n  private _handleClosedKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n                       keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n\n      if (keyCode === HOME || keyCode === END) {\n        keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n\n      const selectedOption = this.selected;\n\n      // Since the value has changed, we need to announce it ourselves.\n      // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n      if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce((selectedOption as MatOption).viewValue, 10000);\n      }\n    }\n  }\n\n  /** Handles keyboard events when the selected is open. */\n  private _handleOpenKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const manager = this._keyManager;\n\n    if (keyCode === HOME || keyCode === END) {\n      event.preventDefault();\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n    } else if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n    } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n      !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n\n      manager.onKeydown(event);\n\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n          manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._setPseudoCheckboxPaddingSize();\n      this._changeDetectorRef.detectChanges();\n      this._calculateOverlayOffsetX();\n      this.panel.nativeElement.scrollTop = this._scrollTop;\n    });\n  }\n\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme(): string {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n\n  // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n  /** Sets the pseudo checkbox padding size based on the width of the pseudo checkbox. */\n  private _setPseudoCheckboxPaddingSize() {\n    if (!SELECT_MULTIPLE_PANEL_PADDING_X && this.multiple) {\n      const pseudoCheckbox = this.panel.nativeElement.querySelector('.mat-pseudo-checkbox');\n      if (pseudoCheckbox) {\n        SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + pseudoCheckbox.offsetWidth;\n      }\n    }\n  }\n\n  /** Whether the select has a value. */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.multiple && value) {\n      if (!Array.isArray(value)) {\n        throw getMatSelectNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(correspondingOption);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): MatOption | undefined {\n    const correspondingOption = this.options.find((option: MatOption) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value,  value);\n      } catch (error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options)\n      .withTypeAhead()\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n      .withAllowedModifierKeys(['shiftKey']);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      // Restore focus to the trigger before closing. Ensures that the focus\n      // position won't be lost if the user got focus into the overlay.\n      this.focus();\n      this.close();\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollActiveOptionIntoView();\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      });\n\n    this._setOptionIds();\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: MatOption, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n      this._propagateChanges(option.value);\n    } else {\n      option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.multiple) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) :\n                                     options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.multiple) {\n      valueToEmit = (this.selected as MatOption[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as MatOption).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n    const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options,\n        this.optionGroups);\n\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n      activeOptionIndex + labelCount,\n      this._getItemHeight(),\n      this.panel.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  /** Focuses the select element. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Gets the index of the provided option in the option list. */\n  private _getOptionIndex(option: MatOption): number | undefined {\n    return this.options.reduce((result: number | undefined, current: MatOption, index: number) => {\n      return result === undefined ? (option === current ? index : undefined) : result;\n    }, undefined);\n  }\n\n  /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n  private _calculateOverlayPosition(): void {\n    const itemHeight = this._getItemHeight();\n    const items = this._getItemCount();\n    const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const scrollContainerHeight = items * itemHeight;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const maxScroll = scrollContainerHeight - panelHeight;\n\n    // If no value is selected we open the popup to the first item.\n    let selectedOptionOffset =\n        this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n    selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n        this.optionGroups);\n\n    // We must maintain a scroll buffer so the selected option will be scrolled to the\n    // center of the overlay panel rather than the top.\n    const scrollBuffer = panelHeight / 2;\n    this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n    this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n\n  /**\n   * Calculates the scroll position of the select's overlay panel.\n   *\n   * Attempts to center the selected option in the panel. If the option is\n   * too high or too low in the panel to be scrolled to the center, it clamps the\n   * scroll position to the min or max scroll positions respectively.\n   */\n  _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n    const halfOptionHeight = itemHeight / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n  }\n\n  /** Returns the aria-label of the select component. */\n  _getAriaLabel(): string | null {\n    // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n  }\n\n  /** Returns the aria-labelledby of the select component. */\n  _getAriaLabelledby(): string | null {\n    if (this.ariaLabelledby) {\n      return this.ariaLabelledby;\n    }\n\n    // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n    // computed label. `this.ariaLabel` is only the user-specified label.\n    if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n      this._getAriaLabel()) {\n      return null;\n    }\n\n    return this._parentFormField._labelId || null;\n  }\n\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n\n  /**\n   * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text when\n   * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n   * can't be calculated until the panel has been attached, because we need to know the\n   * content width in order to constrain the panel within the viewport.\n   */\n  private _calculateOverlayOffsetX(): void {\n    const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const viewportSize = this._viewportRuler.getViewportSize();\n    const isRtl = this._isRtl();\n    const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                                         SELECT_PANEL_PADDING_X * 2;\n    let offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else {\n      let selected = this._selectionModel.selected[0] || this.options.first;\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n    const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n                          + (isRtl ? 0 : paddingWidth);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n    // blurry content in some browsers.\n    this.overlayDir.offsetX = Math.round(offsetX);\n    this.overlayDir.overlayRef.updatePosition();\n  }\n\n  /**\n   * Calculates the y-offset of the select's overlay panel in relation to the\n   * top start corner of the trigger. It has to be adjusted in order for the\n   * selected option to be aligned over the trigger when the panel opens.\n   */\n  private _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n    let optionOffsetFromPanelTop: number;\n\n    // Disable offset if requested by user by returning 0 as value to offset\n    if (this._disableOptionCentering) {\n      return 0;\n    }\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * itemHeight;\n    } else if (this._scrollTop === maxScroll) {\n      const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n      const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // The first item is partially out of the viewport. Therefore we need to calculate what\n      // portion of it is shown in the viewport and account for it in our offset.\n      let partialItemHeight =\n          itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height difference,\n    // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n    // The value is rounded to prevent some browsers from blurring the content.\n    return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n  }\n\n  /**\n   * Checks that the attempted overlay position will fit within the viewport.\n   * If it will not fit, tries to adjust the scroll position and the associated\n   * y-offset so the panel can open fully on-screen. If it still won't fit,\n   * sets the offset back to 0 to allow the fallback position to take over.\n   */\n  private _checkOverlayWithinViewport(maxScroll: number): void {\n    const itemHeight = this._getItemHeight();\n    const viewportSize = this._viewportRuler.getViewportSize();\n\n    const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const bottomSpaceAvailable =\n        viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const panelHeightTop = Math.abs(this._offsetY);\n    const totalPanelHeight =\n        Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n\n  /** Adjusts the overlay panel up to fit in the viewport. */\n  private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n\n  /** Adjusts the overlay panel down to fit in the viewport. */\n  private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n\n  /** Sets the transform origin point based on the selected option. */\n  private _getOriginBasedOnOption(): string {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n    return `50% ${originY}px 0px`;\n  }\n\n  /** Calculates the amount of items in the select. This includes options and group labels. */\n  private _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\n\n  /** Calculates the height of the select's options. */\n  private _getItemHeight(): number {\n    return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    return this._panelOpen || !this.empty;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatOptionModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelect, MatSelectTrigger} from './select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatOptionModule,\n    MatCommonModule,\n  ],\n  exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n  declarations: [MatSelect, MatSelectTrigger],\n  providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class MatSelectModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\n    ]))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {HAMMER_LOADER, HammerLoader} from '@angular/platform-browser';\nimport {Observable, Subject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\n\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\n      providedIn: 'root',\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n  };\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy, OnInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _portal: ComponentPortal<TooltipComponent>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance!.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: MatTooltipDefaultOptions,\n    @Optional() @Inject(HAMMER_LOADER) hammerLoader?: HammerLoader) {\n\n    this._scrollStrategy = scrollStrategy;\n    const element: HTMLElement = _elementRef.nativeElement;\n    const hasGestures = typeof window === 'undefined' || (window as any).Hammer || hammerLoader;\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!platform.IOS && !platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide());\n    } else if (!hasGestures) {\n      // If Hammerjs isn't loaded, fall back to showing on `touchstart`, otherwise\n      // there's no way for the user to trigger the tooltip on a touch device.\n      this._manualListeners.set('touchstart', () => this.show());\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n\n    if (_defaultOptions && _defaultOptions.position) {\n      this.position = _defaultOptions.position;\n    }\n  }\n\n  /**\n   * Setup styling-specific things\n   */\n  ngOnInit() {\n    const element = this._elementRef.nativeElement;\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\n\n    if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n      // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n      // behavior for text fields, we always clear the `user-select` to avoid such issues.\n      elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = '';\n    }\n\n    // Hammer applies `-webkit-user-drag: none` on all elements by default,\n    // which breaks the native drag&drop. If the consumer explicitly made\n    // the element draggable, clear the `-webkit-user-drag`.\n    if (element.draggable && elementStyle.webkitUserDrag === 'none') {\n      elementStyle.webkitUserDrag = '';\n    }\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this._elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance!._showTimeoutId && !this._tooltipInstance!._hideTimeoutId)) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withTransformOriginOn('.mat-tooltip')\n                         .withFlexibleDimensions(false)\n                         .withViewportMargin(8)\n                         .withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {...origin.main, ...overlay.main},\n      {...origin.fallback, ...overlay.fallback}\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n    return {\n      main: originPosition,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n    return {\n      main: overlayPosition,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent implements OnDestroy {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number | null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number | null;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  ngOnDestroy() {\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {\n  MatTooltip,\n  TooltipComponent,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [\n    MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},\n  ]\n})\nexport class MatTooltipModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n@Injectable({providedIn: 'root'})\nexport class MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the page size selector. */\n  itemsPerPageLabel: string = 'Items per page:';\n\n  /** A label for the button that increments the current page. */\n  nextPageLabel: string = 'Next page';\n\n  /** A label for the button that decrements the current page. */\n  previousPageLabel: string = 'Previous page';\n\n  /** A label for the button that moves to the first page. */\n  firstPageLabel: string = 'First page';\n\n  /** A label for the button that moves to the last page. */\n  lastPageLabel: string = 'Last page';\n\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n}\n\n/** @docs-private */\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n\n/** @docs-private */\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatPaginatorIntl} from './paginator-intl';\nimport {\n  HasInitialized,\n  HasInitializedCtor,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisableCtor,\n  CanDisable,\n} from '@angular/material/core';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n// Boilerplate for applying mixins to MatPaginator.\n/** @docs-private */\nclass MatPaginatorBase {}\nconst _MatPaginatorBase: CanDisableCtor & HasInitializedCtor & typeof MatPaginatorBase =\n    mixinDisabled(mixinInitialized(MatPaginatorBase));\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-paginator',\n  exportAs: 'matPaginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatPaginator extends _MatPaginatorBase implements OnInit, OnDestroy, CanDisable,\n  HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number { return this._pageIndex; }\n  set pageIndex(value: number) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number { return this._length; }\n  set length(value: number) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number { return this._pageSize; }\n  set pageSize(value: number) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\n  set showFirstLastButtons(value: boolean) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  constructor(public _intl: MatPaginatorIntl,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex++;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex--;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatPaginator} from './paginator';\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n  ],\n  exports: [MatPaginator],\n  declarations: [MatPaginator],\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\n})\nexport class MatPaginatorModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Inject,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  NgZone,\n  ViewEncapsulation,\n  AfterViewInit,\n  ViewChild,\n  OnDestroy,\n  InjectionToken,\n  inject,\n} from '@angular/core';\nimport {fromEvent, Subscription, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\nimport {DOCUMENT} from '@angular/common';\n\n// TODO(josephperrott): Benchpress tests.\n// TODO(josephperrott): Add ARIA attributes for progress bar \"for\".\n\n/** Last animation end data. */\nexport interface ProgressAnimationEnd {\n  value: number;\n}\n\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nclass MatProgressBarBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\nconst _MatProgressBarMixinBase: CanColorCtor & typeof MatProgressBarBase =\n    mixinColor(MatProgressBarBase, 'primary');\n\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nexport const MAT_PROGRESS_BAR_LOCATION = new InjectionToken<MatProgressBarLocation>(\n  'mat-progress-bar-location',\n  {providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY}\n);\n\n/**\n * Stubbed out location for `MatProgressBar`.\n * @docs-private\n */\nexport interface MatProgressBarLocation {\n  getPathname: () => string;\n}\n\n/** @docs-private */\nexport function MAT_PROGRESS_BAR_LOCATION_FACTORY(): MatProgressBarLocation {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? (_location.pathname + _location.search) : ''\n  };\n}\n\n\n/** Counter used to generate unique IDs for progress bars. */\nlet progressbarId = 0;\n\n/**\n * `<mat-progress-bar>` component.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-progress-bar',\n  exportAs: 'matProgressBar',\n  host: {\n    'role': 'progressbar',\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n    '[attr.mode]': 'mode',\n    'class': 'mat-progress-bar',\n    '[class._mat-animation-noopable]': '_isNoopAnimation',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-bar.html',\n  styleUrls: ['progress-bar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatProgressBar extends _MatProgressBarMixinBase implements CanColor,\n                                                      AfterViewInit, OnDestroy {\n  constructor(public _elementRef: ElementRef, private _ngZone: NgZone,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              /**\n               * @deprecated `location` parameter to be made required.\n               * @breaking-change 8.0.0\n               */\n              @Optional() @Inject(MAT_PROGRESS_BAR_LOCATION) location?: MatProgressBarLocation) {\n    super(_elementRef);\n\n    // We need to prefix the SVG reference with the current path, otherwise they won't work\n    // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n\n    // because named route URLs can contain parentheses (see #12338). Also we don't use since\n    // we can't tell the difference between whether\n    // the consumer is using the hash location strategy or not, because `Location` normalizes\n    // both `/#/foo/bar` and `/foo/bar` to the same thing.\n    const path = location ? location.getPathname().split('#')[0] : '';\n    this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n    this._isNoopAnimation = _animationMode === 'NoopAnimations';\n  }\n\n  /** Flag that indicates whether NoopAnimations mode is set to true. */\n  _isNoopAnimation = false;\n\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  @Input()\n  get value(): number { return this._value; }\n  set value(v: number) {\n    this._value = clamp(v || 0);\n\n    // When noop animation is set to true, trigger animationEnd directly.\n    if (this._isNoopAnimation) {\n      this._emitAnimationEnd();\n    }\n  }\n  private _value: number = 0;\n\n  /** Buffer value of the progress bar. Defaults to zero. */\n  @Input()\n  get bufferValue(): number { return this._bufferValue; }\n  set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n  private _bufferValue: number = 0;\n\n  @ViewChild('primaryValueBar', {static: false}) _primaryValueBar: ElementRef;\n\n  /**\n   * Event emitted when animation of the primary progress bar completes. This event will not\n   * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n   * animations (indeterminate and query).\n   */\n  @Output() animationEnd = new EventEmitter<ProgressAnimationEnd>();\n\n  /** Reference to animation end subscription to be unsubscribed on destroy. */\n  private _animationEndSubscription: Subscription = Subscription.EMPTY;\n\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  @Input() mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\n\n  /** ID of the progress bar. */\n  progressbarId = `mat-progress-bar-${progressbarId++}`;\n\n  /** Attribute to be used for the `fill` attribute on the internal `rect` element. */\n  _rectangleFillValue: string;\n\n  /** Gets the current transform value for the progress bar's primary indicator. */\n  _primaryTransform() {\n    const scale = this.value / 100;\n    return {transform: `scaleX(${scale})`};\n  }\n\n  /**\n   * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n   * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n   */\n  _bufferTransform() {\n    if (this.mode === 'buffer') {\n      const scale = this.bufferValue / 100;\n      return {transform: `scaleX(${scale})`};\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this._isNoopAnimation) {\n      // Run outside angular so change detection didn't get triggered on every transition end\n      // instead only on the animation that we care about (primary value bar's transitionend)\n      this._ngZone.runOutsideAngular((() => {\n        const element = this._primaryValueBar.nativeElement;\n\n        this._animationEndSubscription =\n            (fromEvent(element, 'transitionend') as Observable<TransitionEvent>)\n              .pipe(filter(((e: TransitionEvent) => e.target === element)))\n              .subscribe(() => this._ngZone.run(() => this._emitAnimationEnd()));\n      }));\n    }\n  }\n\n  ngOnDestroy() {\n    this._animationEndSubscription.unsubscribe();\n  }\n\n  /** Emit an animationEnd event if in determinate or buffer mode. */\n  private _emitAnimationEnd(): void {\n    if (this.mode === 'determinate' || this.mode === 'buffer') {\n      this.animationEnd.next({value: this.value});\n    }\n  }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatProgressBar} from './progress-bar';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatProgressBar, MatCommonModule],\n  declarations: [MatProgressBar],\n})\nexport class MatProgressBarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Possible mode for a progress spinner. */\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatProgressSpinnerMixinBase: CanColorCtor & typeof MatProgressSpinnerBase =\n    mixinColor(MatProgressSpinnerBase, 'primary');\n\n/** Default `mat-progress-spinner` options that can be overridden. */\nexport interface MatProgressSpinnerDefaultOptions {\n  /** Diameter of the spinner. */\n  diameter?: number;\n  /** Width of the spinner's stroke. */\n  strokeWidth?: number;\n  /**\n   * Whether the animations should be force to be enabled, ignoring if the current environment is\n   * using NoopAnimationsModule.\n   */\n  _forceAnimations?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nexport const MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS =\n    new InjectionToken<MatProgressSpinnerDefaultOptions>('mat-progress-spinner-default-options', {\n      providedIn: 'root',\n      factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY(): MatProgressSpinnerDefaultOptions {\n  return {diameter: BASE_SIZE};\n}\n\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n\n/**\n * `<mat-progress-spinner>` component.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-progress-spinner',\n  exportAs: 'matProgressSpinner',\n  host: {\n    'role': 'progressbar',\n    'class': 'mat-progress-spinner',\n    '[class._mat-animation-noopable]': `_noopAnimations`,\n    '[style.width.px]': 'diameter',\n    '[style.height.px]': 'diameter',\n    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n    '[attr.mode]': 'mode',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-spinner.html',\n  styleUrls: ['progress-spinner.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatProgressSpinner extends _MatProgressSpinnerMixinBase implements CanColor {\n\n  private _value = 0;\n  private _strokeWidth: number;\n  private _fallbackAnimation = false;\n\n  /** Tracks diameters of existing instances to de-dupe generated styles (default d = 100) */\n  private static _diameters = new Set<number>([BASE_SIZE]);\n\n  /**\n   * Used for storing all of the generated keyframe animations.\n   * @dynamic\n   */\n  private static _styleTag: HTMLStyleElement|null = null;\n\n  /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n  _noopAnimations: boolean;\n\n  /** The diameter of the progress spinner (will set width and height of svg). */\n  @Input()\n  get diameter(): number { return this._diameter; }\n  set diameter(size: number) {\n    this._diameter = coerceNumberProperty(size);\n\n    if (!this._fallbackAnimation && !MatProgressSpinner._diameters.has(this._diameter)) {\n      this._attachStyleNode();\n    }\n  }\n  private _diameter = BASE_SIZE;\n\n  /** Stroke width of the progress spinner. */\n  @Input()\n  get strokeWidth(): number {\n    return this._strokeWidth || this.diameter / 10;\n  }\n  set strokeWidth(value: number) {\n    this._strokeWidth = coerceNumberProperty(value);\n  }\n\n  /** Mode of the progress circle */\n  @Input() mode: ProgressSpinnerMode = 'determinate';\n\n  /** Value of the progress circle. */\n  @Input()\n  get value(): number {\n    return this.mode === 'determinate' ? this._value : 0;\n  }\n  set value(newValue: number) {\n    this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n  }\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              platform: Platform,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode: string,\n              @Inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)\n                  defaults?: MatProgressSpinnerDefaultOptions) {\n\n    super(_elementRef);\n    this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n    this._noopAnimations = animationMode === 'NoopAnimations' &&\n        (!!defaults && !defaults._forceAnimations);\n\n    if (defaults) {\n      if (defaults.diameter) {\n        this.diameter = defaults.diameter;\n      }\n\n      if (defaults.strokeWidth) {\n        this.strokeWidth = defaults.strokeWidth;\n      }\n    }\n\n    // On IE and Edge, we can't animate the `stroke-dashoffset`\n    // reliably so we fall back to a non-spec animation.\n    const animationClass =\n      `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n\n    _elementRef.nativeElement.classList.add(animationClass);\n  }\n\n  /** The radius of the spinner, adjusted for stroke width. */\n  get _circleRadius() {\n    return (this.diameter - BASE_STROKE_WIDTH) / 2;\n  }\n\n  /** The view box of the spinner's svg element. */\n  get _viewBox() {\n    const viewBox = this._circleRadius * 2 + this.strokeWidth;\n    return `0 0 ${viewBox} ${viewBox}`;\n  }\n\n  /** The stroke circumference of the svg circle. */\n  get _strokeCircumference(): number {\n    return 2 * Math.PI * this._circleRadius;\n  }\n\n  /** The dash offset of the svg circle. */\n  get _strokeDashOffset() {\n    if (this.mode === 'determinate') {\n      return this._strokeCircumference * (100 - this._value) / 100;\n    }\n\n    // In fallback mode set the circle to 80% and rotate it with CSS.\n    if (this._fallbackAnimation && this.mode === 'indeterminate') {\n      return this._strokeCircumference * 0.2;\n    }\n\n    return null;\n  }\n\n  /** Stroke width of the circle in percent. */\n  get _circleStrokeWidth() {\n    return this.strokeWidth / this.diameter * 100;\n  }\n\n  /** Dynamically generates a style tag containing the correct animation for this diameter. */\n  private _attachStyleNode(): void {\n    let styleTag = MatProgressSpinner._styleTag;\n\n    if (!styleTag) {\n      styleTag = this._document.createElement('style');\n      this._document.head.appendChild(styleTag);\n      MatProgressSpinner._styleTag = styleTag;\n    }\n\n    if (styleTag && styleTag.sheet) {\n      (styleTag.sheet as CSSStyleSheet).insertRule(this._getAnimationText(), 0);\n    }\n\n    MatProgressSpinner._diameters.add(this.diameter);\n  }\n\n  /** Generates animation styles adjusted for the spinner's diameter. */\n  private _getAnimationText(): string {\n    return INDETERMINATE_ANIMATION_TEMPLATE\n        // Animation should begin at 5% and end at 80%\n        .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n        .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n        .replace(/DIAMETER/g, `${this.diameter}`);\n  }\n}\n\n\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-spinner',\n  host: {\n    'role': 'progressbar',\n    'mode': 'indeterminate',\n    'class': 'mat-spinner mat-progress-spinner',\n    '[class._mat-animation-noopable]': `_noopAnimations`,\n    '[style.width.px]': 'diameter',\n    '[style.height.px]': 'diameter',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-spinner.html',\n  styleUrls: ['progress-spinner.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatSpinner extends MatProgressSpinner {\n  constructor(elementRef: ElementRef<HTMLElement>, platform: Platform,\n              @Optional() @Inject(DOCUMENT) document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode: string,\n              @Inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)\n                  defaults?: MatProgressSpinnerDefaultOptions) {\n    super(elementRef, platform, document, animationMode, defaults);\n    this.mode = 'indeterminate';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatProgressSpinner, MatSpinner} from './progress-spinner';\n\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule],\n  exports: [\n    MatProgressSpinner,\n    MatSpinner,\n    MatCommonModule\n  ],\n  declarations: [\n    MatProgressSpinner,\n    MatSpinner\n  ],\n})\nclass MatProgressSpinnerModule {}\n\nexport {MatProgressSpinnerModule};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinDisableRipple,\n  mixinTabIndex,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatRadioGroup),\n  multi: true\n};\n\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nexport class MatRadioChange {\n  constructor(\n    /** The MatRadioButton that emits the change event. */\n    public source: MatRadioButton,\n    /** The value of the MatRadioButton. */\n    public value: any) {}\n}\n\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\n@Directive({\n  selector: 'mat-radio-group',\n  exportAs: 'matRadioGroup',\n  providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n  host: {\n    'role': 'radiogroup',\n    'class': 'mat-radio-group',\n  },\n})\nexport class MatRadioGroup implements AfterContentInit, ControlValueAccessor {\n  /** Selected value for the radio group. */\n  private _value: any = null;\n\n  /** The HTML name attribute applied to radio buttons in this group. */\n  private _name: string = `mat-radio-group-${nextUniqueId++}`;\n\n  /** The currently selected radio button. Should match value. */\n  private _selected: MatRadioButton | null = null;\n\n  /** Whether the `value` has been set to its initial value. */\n  private _isInitialized: boolean = false;\n\n  /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n  private _labelPosition: 'before' | 'after' = 'after';\n\n  /** Whether the radio group is disabled. */\n  private _disabled: boolean = false;\n\n  /** Whether the radio group is required. */\n  private _required: boolean = false;\n\n  /** The method to be called in order to update ngModel */\n  _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /**\n   * onTouch function registered via registerOnTouch (ControlValueAccessor).\n   * @docs-private\n   */\n  onTouched: () => any = () => {};\n\n  /**\n   * Event emitted when the group value changes.\n   * Change events are only emitted when the value changes due to user interaction with\n   * a radio button (the same behavior as `<input type-\"radio\">`).\n   */\n  @Output() readonly change: EventEmitter<MatRadioChange> = new EventEmitter<MatRadioChange>();\n\n  /** Child radio buttons. */\n  @ContentChildren(forwardRef(() => MatRadioButton), { descendants: true })\n  _radios: QueryList<MatRadioButton>;\n\n  /** Theme color for all of the radio buttons in the group. */\n  @Input() color: ThemePalette;\n\n  /** Name of the radio button group. All radio buttons inside this group will use this name. */\n  @Input()\n  get name(): string { return this._name; }\n  set name(value: string) {\n    this._name = value;\n    this._updateRadioButtonNames();\n  }\n\n  /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n  @Input()\n  get labelPosition(): 'before' | 'after' {\n    return this._labelPosition;\n  }\n  set labelPosition(v) {\n    this._labelPosition = v === 'before' ? 'before' : 'after';\n    this._markRadiosForCheck();\n  }\n\n  /**\n   * Value for the radio-group. Should equal the value of the selected radio button if there is\n   * a corresponding radio button with a matching value. If there is not such a corresponding\n   * radio button, this value persists to be applied in case a new radio button is added with a\n   * matching value.\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (this._value !== newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n\n  _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n  /**\n   * The currently selected radio button. If set to a new radio button, the radio group value\n   * will be updated to match the new selected button.\n   */\n  @Input()\n  get selected() { return this._selected; }\n  set selected(selected: MatRadioButton | null) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n    this._checkSelectedRadioButton();\n  }\n\n  /** Whether the radio group is disabled */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._markRadiosForCheck();\n  }\n\n  /** Whether the radio group is required */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this._markRadiosForCheck();\n  }\n\n  constructor(private _changeDetector: ChangeDetectorRef) { }\n\n  /**\n   * Initialize properties once content children are available.\n   * This allows us to propagate relevant attributes to associated buttons.\n   */\n  ngAfterContentInit() {\n    // Mark this component as initialized in AfterContentInit because the initial value can\n    // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n    // NgModel occurs *after* the OnInit of the MatRadioGroup.\n    this._isInitialized = true;\n  }\n\n  /**\n   * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n   * radio buttons upon their blur.\n   */\n  _touch() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  private _updateRadioButtonNames(): void {\n    if (this._radios) {\n      this._radios.forEach(radio => {\n        radio.name = this.name;\n        radio._markForCheck();\n      });\n    }\n  }\n\n  /** Updates the `selected` radio button from the internal _value state. */\n  private _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n    if (this._radios && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent(): void {\n    if (this._isInitialized) {\n      this.change.emit(new MatRadioChange(this._selected!, this._value));\n    }\n  }\n\n  _markRadiosForCheck() {\n    if (this._radios) {\n      this._radios.forEach(radio => radio._markForCheck());\n    }\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n\n  /**\n   * Registers a callback to be triggered when the model value changes.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the control is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n   * @param isDisabled Whether the control should be disabled.\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this._changeDetector.markForCheck();\n  }\n}\n\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n  // Since the disabled property is manually defined for the MatRadioButton and isn't set up in\n  // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n  // defined to properly work.\n  disabled: boolean;\n\n  constructor(public _elementRef: ElementRef) {}\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase:\n    CanDisableRippleCtor & HasTabIndexCtor & typeof MatRadioButtonBase =\n        mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-radio-button',\n  templateUrl: 'radio.html',\n  styleUrls: ['radio.css'],\n  inputs: ['disableRipple', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matRadioButton',\n  host: {\n    'class': 'mat-radio-button',\n    '[class.mat-radio-checked]': 'checked',\n    '[class.mat-radio-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '[class.mat-primary]': 'color === \"primary\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n    // Needs to be -1 so the `focus` event still fires.\n    '[attr.tabindex]': '-1',\n    '[attr.id]': 'id',\n    // Note: under normal conditions focus shouldn't land on this element, however it may be\n    // programmatically set, for example inside of a focus trap, in this case we want to forward\n    // the focus to the native element.\n    '(focus)': '_inputElement.nativeElement.focus()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatRadioButton extends _MatRadioButtonMixinBase\n    implements OnInit, AfterViewInit, OnDestroy, CanDisableRipple, HasTabIndex {\n\n  private _uniqueId: string = `mat-radio-${++nextUniqueId}`;\n\n  /** The unique ID for the radio button. */\n  @Input() id: string = this._uniqueId;\n\n  /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n  @Input() name: string;\n\n  /** Used to set the 'aria-label' attribute on the underlying input element. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  @Input('aria-describedby') ariaDescribedby: string;\n\n  /** Whether this radio button is checked. */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    const newCheckedState = coerceBooleanProperty(value);\n    if (this._checked !== newCheckedState) {\n      this._checked = newCheckedState;\n      if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n        this.radioGroup.selected = this;\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n\n        // When unchecking the selected radio button, update the selected radio\n        // property on the group.\n        this.radioGroup.selected = null;\n      }\n\n      if (newCheckedState) {\n        // Notify all radio buttons with the same name to un-check.\n        this._radioDispatcher.notify(this.id, this.name);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /** The value of this radio button. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    if (this._value !== value) {\n      this._value = value;\n      if (this.radioGroup !== null) {\n        if (!this.checked) {\n          // Update checked when the value changed to match the radio group's value\n          this.checked = this.radioGroup.value === value;\n        }\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n      }\n    }\n  }\n\n  /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n  @Input()\n  get labelPosition(): 'before' | 'after' {\n    return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n  }\n  set labelPosition(value) {\n    this._labelPosition = value;\n  }\n  private _labelPosition: 'before' | 'after';\n\n  /** Whether the radio button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n  }\n  set disabled(value: boolean) {\n    const newDisabledState = coerceBooleanProperty(value);\n    if (this._disabled !== newDisabledState) {\n      this._disabled = newDisabledState;\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /** Whether the radio button is required. */\n  @Input()\n  get required(): boolean {\n    return this._required || (this.radioGroup && this.radioGroup.required);\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  /** Theme color of the radio button. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color || (this.radioGroup && this.radioGroup.color) || 'accent';\n  }\n  set color(newValue: ThemePalette) { this._color = newValue; }\n  private _color: ThemePalette;\n\n  /**\n   * Event emitted when the checked state of this radio button changes.\n   * Change events are only emitted when the value changes due to user interaction with\n   * the radio button (the same behavior as `<input type-\"radio\">`).\n   */\n  @Output() readonly change: EventEmitter<MatRadioChange> = new EventEmitter<MatRadioChange>();\n\n  /** The parent radio group. May or may not be present. */\n  radioGroup: MatRadioGroup;\n\n  /** ID of the native input element inside `<mat-radio-button>` */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Whether this radio is checked. */\n  private _checked: boolean = false;\n\n  /** Whether this radio is disabled. */\n  private _disabled: boolean;\n\n  /** Whether this radio is required. */\n  private _required: boolean;\n\n  /** Value assigned to this radio. */\n  private _value: any = null;\n\n  /** Unregister function for _radioDispatcher */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  /** The native `<input type=radio>` element */\n  @ViewChild('input', {static: false}) _inputElement: ElementRef<HTMLInputElement>;\n\n  constructor(@Optional() radioGroup: MatRadioGroup,\n              elementRef: ElementRef,\n              private _changeDetector: ChangeDetectorRef,\n              private _focusMonitor: FocusMonitor,\n              private _radioDispatcher: UniqueSelectionDispatcher,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n\n    // Assertions. Ideally these should be stripped out by the compiler.\n    // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n    this.radioGroup = radioGroup;\n\n    this._removeUniqueSelectionListener =\n      _radioDispatcher.listen((id: string, name: string) => {\n        if (id !== this.id && name === this.name) {\n          this.checked = false;\n        }\n      });\n  }\n\n  /** Focuses the radio button. */\n  focus(): void {\n    this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n  }\n\n  /**\n   * Marks the radio button as needing checking for change detection.\n   * This method is exposed because the parent radio group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n    // update radio button's status\n    this._changeDetector.markForCheck();\n  }\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      // If the radio is inside a radio group, determine if it should be checked\n      this.checked = this.radioGroup.value === this._value;\n      // Copy name from parent radio group\n      this.name = this.radioGroup.name;\n    }\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor\n      .monitor(this._elementRef, true)\n      .subscribe(focusOrigin => {\n        if (!focusOrigin && this.radioGroup) {\n          this.radioGroup._touch();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._removeUniqueSelectionListener();\n  }\n\n  /** Dispatch change event with current value. */\n  private _emitChangeEvent(): void {\n    this.change.emit(new MatRadioChange(this, this._value));\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `radio-button` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  /**\n   * Triggered when the radio button received a click or the input recognized any change.\n   * Clicking on a label element, will trigger a change event on the associated input.\n   */\n  _onInputChange(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n\n    const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n    this.checked = true;\n    this._emitChangeEvent();\n\n    if (this.radioGroup) {\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\n      if (groupValueChanged) {\n        this.radioGroup._emitChangeEvent();\n      }\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatRadioButton, MatRadioGroup} from './radio';\n\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatCommonModule],\n  exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n  declarations: [MatRadioGroup, MatRadioButton],\n})\nexport class MatRadioModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nexport const matDrawerAnimations: {\n  readonly transformDrawer: AnimationTriggerMetadata;\n} = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [\n    // We remove the `transform` here completely, rather than setting it to zero, because:\n    // 1. Having a transform can cause elements with ripples or an animated\n    //    transform to shift around in Chrome with an RTL layout (see #10023).\n    // 2. 3d transforms causes text to appear blurry on IE and Edge.\n    state('open, open-instant', style({\n      'transform': 'none',\n      'visibility': 'visible',\n    })),\n    state('void', style({\n      // Avoids the shadow showing up when closed in SSR.\n      'box-shadow': 'none',\n      'visibility': 'hidden',\n    })),\n    transition('void => open-instant', animate('0ms')),\n    transition('void <=> open, open-instant => void',\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {FocusMonitor, FocusOrigin, FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {CdkScrollable, ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  HostListener,\n  HostBinding,\n} from '@angular/core';\nimport {fromEvent, merge, Observable, Subject} from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  map,\n  startWith,\n  take,\n  takeUntil,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport {matDrawerAnimations} from './drawer-animations';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nexport function throwMatDuplicatedDrawerError(position: string) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n\n\n/** Result of the toggle promise that indicates the state of the drawer. */\nexport type MatDrawerToggleResult = 'open' | 'close';\n\n/** Configures whether drawers should use auto sizing by default. */\nexport const MAT_DRAWER_DEFAULT_AUTOSIZE =\n    new InjectionToken<boolean>('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n      providedIn: 'root',\n      factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY(): boolean {\n  return false;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-drawer-content',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-drawer-content',\n    '[style.margin-left.px]': '_container._contentMargins.left',\n    '[style.margin-right.px]': '_container._contentMargins.right',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDrawerContent extends CdkScrollable implements AfterContentInit {\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Inject(forwardRef(() => MatDrawerContainer)) public _container: MatDrawerContainer,\n      elementRef: ElementRef<HTMLElement>,\n      scrollDispatcher: ScrollDispatcher,\n      ngZone: NgZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n\n\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-drawer',\n  exportAs: 'matDrawer',\n  templateUrl: 'drawer.html',\n  animations: [matDrawerAnimations.transformDrawer],\n  host: {\n    'class': 'mat-drawer',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.mat-drawer-end]': 'position === \"end\"',\n    '[class.mat-drawer-over]': 'mode === \"over\"',\n    '[class.mat-drawer-push]': 'mode === \"push\"',\n    '[class.mat-drawer-side]': 'mode === \"side\"',\n    'tabIndex': '-1',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDrawer implements AfterContentInit, AfterContentChecked, OnDestroy {\n  private _focusTrap: FocusTrap;\n  private _elementFocusedBeforeDrawerWasOpened: HTMLElement | null = null;\n\n  /** Whether the drawer is initialized. Used for disabling the initial animation. */\n  private _enableAnimations = false;\n\n  /** The side that the drawer is attached to. */\n  @Input()\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value != this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  private _position: 'start' | 'end' = 'start';\n\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  @Input()\n  get mode(): 'over' | 'push' | 'side' { return this._mode; }\n  set mode(value: 'over' | 'push' | 'side') {\n    this._mode = value;\n    this._modeChanged.next();\n  }\n  private _mode: 'over' | 'push' | 'side' = 'over';\n\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  @Input()\n  get disableClose(): boolean { return this._disableClose; }\n  set disableClose(value: boolean) { this._disableClose = coerceBooleanProperty(value); }\n  private _disableClose: boolean = false;\n\n  /** Whether the drawer should focus the first focusable element automatically when opened. */\n  @Input()\n  get autoFocus(): boolean { return this._autoFocus; }\n  set autoFocus(value: boolean) { this._autoFocus = coerceBooleanProperty(value); }\n  private _autoFocus: boolean = true;\n\n  /** How the sidenav was opened (keypress, mouse click etc.) */\n  private _openedVia: FocusOrigin | null;\n\n  /** Emits whenever the drawer has started animating. */\n  _animationStarted = new Subject<AnimationEvent>();\n\n  /** Emits whenever the drawer is done animating. */\n  _animationEnd = new Subject<AnimationEvent>();\n\n  /** Current state of the sidenav animation. */\n  // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n  // metadata is not inherited by child classes, instead the host binding data is defined in a way\n  // that can be inherited.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostBinding('@transform')\n  _animationState: 'open-instant' | 'open' | 'void' = 'void';\n\n  /** Event emitted when the drawer open state is changed. */\n  @Output() readonly openedChange: EventEmitter<boolean> =\n      // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n      new EventEmitter<boolean>(/* isAsync */true);\n\n  /** Event emitted when the drawer has been opened. */\n  @Output('opened')\n  get _openedStream(): Observable<void> {\n    return this.openedChange.pipe(filter(o => o), map(() => {}));\n  }\n\n  /** Event emitted when the drawer has started opening. */\n  @Output()\n  get openedStart(): Observable<void> {\n    return this._animationStarted.pipe(\n      filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0),\n      map(() => {})\n    );\n  }\n\n  /** Event emitted when the drawer has been closed. */\n  @Output('closed')\n  get _closedStream(): Observable<void> {\n    return this.openedChange.pipe(filter(o => !o), map(() => {}));\n  }\n\n  /** Event emitted when the drawer has started closing. */\n  @Output()\n  get closedStart(): Observable<void> {\n    return this._animationStarted.pipe(\n      filter(e => e.fromState !== e.toState && e.toState === 'void'),\n      map(() => {})\n    );\n  }\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Event emitted when the drawer's position changes. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output('positionChanged') onPositionChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\n   * to know when to when the mode changes so it can adapt the margins on the content.\n   */\n  readonly _modeChanged = new Subject();\n\n  get _isFocusTrapEnabled(): boolean {\n    // The focus trap is only enabled when the drawer is open in any mode other than side.\n    return this.opened && this.mode !== 'side';\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _focusTrapFactory: FocusTrapFactory,\n              private _focusMonitor: FocusMonitor,\n              private _platform: Platform,\n              private _ngZone: NgZone,\n              @Optional() @Inject(DOCUMENT) private _doc: any) {\n\n    this.openedChange.subscribe((opened: boolean) => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement as HTMLElement;\n        }\n\n        if (this._isFocusTrapEnabled && this._focusTrap) {\n          this._trapFocus();\n        }\n      } else {\n        this._restoreFocus();\n      }\n    });\n\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n        (fromEvent(this._elementRef.nativeElement, 'keydown') as Observable<KeyboardEvent>).pipe(\n            filter(event => event.keyCode === ESCAPE && !this.disableClose),\n            takeUntil(this._destroyed)\n        ).subscribe(event => this._ngZone.run(() => {\n            this.close();\n            event.stopPropagation();\n        }));\n    });\n\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe((event: AnimationEvent) => {\n      const {fromState, toState} = event;\n\n      if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n          (toState === 'void' && fromState.indexOf('open') === 0)) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n\n  /** Traps focus inside the drawer. */\n  private _trapFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n\n  /**\n   * If focus is currently inside the drawer, restores it to where it was before the drawer\n   * opened.\n   */\n  private _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n\n    const activeEl = this._doc && this._doc.activeElement;\n\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n      if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._focusTrap.enabled = this._isFocusTrapEnabled;\n  }\n\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  private _opened: boolean = false;\n\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia?: FocusOrigin): Promise<MatDrawerToggleResult> {\n    return this.toggle(true, openedVia);\n  }\n\n  /** Close the drawer. */\n  close(): Promise<MatDrawerToggleResult> {\n    return this.toggle(false);\n  }\n\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen: boolean = !this.opened, openedVia: FocusOrigin = 'program'):\n    Promise<MatDrawerToggleResult> {\n\n    this._opened = isOpen;\n\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n      this._restoreFocus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n\n    return new Promise<MatDrawerToggleResult>(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n\n  get _width(): number {\n    return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('@transform.start', ['$event'])\n  _animationStartListener(event: AnimationEvent) {\n    this._animationStarted.next(event);\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritte.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('@transform.done', ['$event'])\n  _animationDoneListener(event: AnimationEvent) {\n    this._animationEnd.next(event);\n  }\n}\n\n\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-drawer-container',\n  exportAs: 'matDrawerContainer',\n  templateUrl: 'drawer-container.html',\n  styleUrls: ['drawer.css'],\n  host: {\n    'class': 'mat-drawer-container',\n    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDrawerContainer implements AfterContentInit, DoCheck, OnDestroy {\n  @ContentChildren(MatDrawer) _drawers: QueryList<MatDrawer>;\n  @ContentChild(MatDrawerContent, {static: false}) _content: MatDrawerContent;\n  @ViewChild(MatDrawerContent, {static: false}) _userContent: MatDrawerContent;\n\n  /** The drawer child with the `start` position. */\n  get start(): MatDrawer | null { return this._start; }\n\n  /** The drawer child with the `end` position. */\n  get end(): MatDrawer | null { return this._end; }\n\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  @Input()\n  get autosize(): boolean { return this._autosize; }\n  set autosize(value: boolean) { this._autosize = coerceBooleanProperty(value); }\n  private _autosize: boolean;\n\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  @Input()\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n\n    return this._backdropOverride;\n  }\n  set hasBackdrop(value: any) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  _backdropOverride: boolean | null;\n\n  /** Event emitted when the drawer backdrop is clicked. */\n  @Output() readonly backdropClick: EventEmitter<void> = new EventEmitter<void>();\n\n  /** The drawer at the start/end position, independent of direction. */\n  private _start: MatDrawer | null;\n  private _end: MatDrawer | null;\n\n  /**\n   * The drawer at the left/right. When direction changes, these will change as well.\n   * They're used as aliases for the above to set the left/right style properly.\n   * In LTR, _left == _start and _right == _end.\n   * In RTL, _left == _end and _right == _start.\n   */\n  private _left: MatDrawer | null;\n  private _right: MatDrawer | null;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\n  private readonly _doCheckSubject = new Subject<void>();\n\n  /**\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\n   * fixed position elements inside of the transformed element.\n   */\n  _contentMargins: {left: number|null, right: number|null} = {left: null, right: null};\n\n  readonly _contentMarginChanges = new Subject<{left: number|null, right: number|null}>();\n\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable(): CdkScrollable {\n    return this._userContent || this._content;\n  }\n\n  constructor(@Optional() private _dir: Directionality,\n              private _element: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Inject(MAT_DRAWER_DEFAULT_AUTOSIZE) defaultAutosize = false,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) private _animationMode?: string) {\n\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this.updateContentMargins());\n\n    this._autosize = defaultAutosize;\n  }\n\n  ngAfterContentInit() {\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n\n      this._drawers.forEach((drawer: MatDrawer) => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n\n      if (!this._drawers.length ||\n          this._isDrawerOpen(this._start) ||\n          this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n\n    this._doCheckSubject.pipe(\n      debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)\n    ).subscribe(() => this.updateContentMargins());\n  }\n\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Calls `open` of both start and end drawers */\n  open(): void {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n\n  /** Calls `close` of both start and end drawers */\n  close(): void {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._width;\n      } else if (this._left.mode == 'push') {\n        const width = this._left._width;\n        left += width;\n        right -= width;\n      }\n    }\n\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._width;\n      } else if (this._right.mode == 'push') {\n        const width = this._right._width;\n        right += width;\n        left -= width;\n      }\n    }\n\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null!;\n    right = right || null!;\n\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {left, right};\n\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  private _watchDrawerToggle(drawer: MatDrawer): void {\n    drawer._animationStarted.pipe(\n      filter((event: AnimationEvent) => event.fromState !== event.toState),\n      takeUntil(this._drawers.changes),\n    )\n    .subscribe((event: AnimationEvent) => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() =>\n          this._setContainerClass(drawer.opened));\n    }\n  }\n\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  private _watchDrawerPosition(drawer: MatDrawer): void {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  private _watchDrawerMode(drawer: MatDrawer): void {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n        .subscribe(() => {\n          this.updateContentMargins();\n          this._changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  private _setContainerClass(isAdd: boolean): void {\n    if (isAdd) {\n      this._element.nativeElement.classList.add('mat-drawer-opened');\n    } else {\n      this._element.nativeElement.classList.remove('mat-drawer-opened');\n    }\n  }\n\n  /** Validate the state of the drawer children components. */\n  private _validateDrawers() {\n    this._start = this._end = null;\n\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n\n    this._right = this._left = null;\n\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  private _isPushed() {\n    return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n           (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n  }\n\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawer();\n  }\n\n  _closeModalDrawer() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end]\n      .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n      .forEach(drawer => drawer!.close());\n  }\n\n  _isShowingBackdrop(): boolean {\n    return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n           (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n  }\n\n  private _canHaveBackdrop(drawer: MatDrawer): boolean {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n\n  private _isDrawerOpen(drawer: MatDrawer | null): drawer is MatDrawer {\n    return drawer != null && drawer.opened;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  forwardRef,\n  Inject,\n  Input,\n  ViewEncapsulation,\n  QueryList,\n  ElementRef,\n  NgZone,\n} from '@angular/core';\nimport {MatDrawer, MatDrawerContainer, MatDrawerContent} from './drawer';\nimport {matDrawerAnimations} from './drawer-animations';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-sidenav-content',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-drawer-content mat-sidenav-content',\n    '[style.margin-left.px]': '_container._contentMargins.left',\n    '[style.margin-right.px]': '_container._contentMargins.right',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatSidenavContent extends MatDrawerContent {\n  constructor(\n      changeDetectorRef: ChangeDetectorRef,\n      @Inject(forwardRef(() => MatSidenavContainer)) container: MatSidenavContainer,\n      elementRef: ElementRef<HTMLElement>,\n      scrollDispatcher: ScrollDispatcher,\n      ngZone: NgZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-sidenav',\n  exportAs: 'matSidenav',\n  templateUrl: 'drawer.html',\n  animations: [matDrawerAnimations.transformDrawer],\n  host: {\n    'class': 'mat-drawer mat-sidenav',\n    'tabIndex': '-1',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.mat-drawer-end]': 'position === \"end\"',\n    '[class.mat-drawer-over]': 'mode === \"over\"',\n    '[class.mat-drawer-push]': 'mode === \"push\"',\n    '[class.mat-drawer-side]': 'mode === \"side\"',\n    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatSidenav extends MatDrawer {\n  /** Whether the sidenav is fixed in the viewport. */\n  @Input()\n  get fixedInViewport(): boolean { return this._fixedInViewport; }\n  set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n  private _fixedInViewport = false;\n\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  @Input()\n  get fixedTopGap(): number { return this._fixedTopGap; }\n  set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n  private _fixedTopGap = 0;\n\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  @Input()\n  get fixedBottomGap(): number { return this._fixedBottomGap; }\n  set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n  private _fixedBottomGap = 0;\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-sidenav-container',\n  exportAs: 'matSidenavContainer',\n  templateUrl: 'sidenav-container.html',\n  styleUrls: ['drawer.css'],\n  host: {\n    'class': 'mat-drawer-container mat-sidenav-container',\n    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatSidenavContainer extends MatDrawerContainer {\n  @ContentChildren(MatSidenav) _drawers: QueryList<MatSidenav>;\n  @ContentChild(MatSidenavContent, {static: false}) _content: MatSidenavContent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDrawer, MatDrawerContainer, MatDrawerContent} from './drawer';\nimport {MatSidenav, MatSidenavContainer, MatSidenavContent} from './sidenav';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    ScrollingModule,\n    PlatformModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatDrawer,\n    MatDrawerContainer,\n    MatDrawerContent,\n    MatSidenav,\n    MatSidenavContainer,\n    MatSidenavContent,\n  ],\n  declarations: [\n    MatDrawer,\n    MatDrawerContainer,\n    MatDrawerContent,\n    MatSidenav,\n    MatSidenavContainer,\n    MatSidenavContent,\n  ],\n})\nexport class MatSidenavModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n\n/** Default `mat-slide-toggle` options that can be overridden. */\nexport interface MatSlideToggleDefaultOptions {\n  /** Whether toggle action triggers value changes in slide toggle. */\n  disableToggleValue?: boolean;\n  /** Whether drag action triggers value changes in slide toggle. */\n  disableDragValue?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nexport const MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS =\n  new InjectionToken<MatSlideToggleDefaultOptions>('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({disableToggleValue: false, disableDragValue: false})\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HammerInput,\n  HasTabIndex, HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {\n  MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,\n  MatSlideToggleDefaultOptions\n} from './slide-toggle-config';\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n\n/** @docs-private */\nexport const MAT_SLIDE_TOGGLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlideToggle),\n  multi: true\n};\n\n/** Change event object emitted by a MatSlideToggle. */\nexport class MatSlideToggleChange {\n  constructor(\n    /** The source MatSlideToggle of the event. */\n    public source: MatSlideToggle,\n    /** The new `checked` value of the MatSlideToggle. */\n    public checked: boolean) { }\n}\n\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSlideToggleMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableRippleCtor &\n    CanDisableCtor &\n    typeof MatSlideToggleBase =\n        mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-slide-toggle',\n  exportAs: 'matSlideToggle',\n  host: {\n    'class': 'mat-slide-toggle',\n    '[id]': 'id',\n    // Needs to be `-1` so it can still receive programmatic focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.mat-checked]': 'checked',\n    '[class.mat-disabled]': 'disabled',\n    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '(focus)': '_inputElement.nativeElement.focus()',\n  },\n  templateUrl: 'slide-toggle.html',\n  styleUrls: ['slide-toggle.css'],\n  providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n  inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlideToggle extends _MatSlideToggleMixinBase implements OnDestroy, AfterContentInit,\n                                                                        ControlValueAccessor,\n                                                                        CanDisable, CanColor,\n                                                                        HasTabIndex,\n                                                                        CanDisableRipple {\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  private _uniqueId: string = `mat-slide-toggle-${++nextUniqueId}`;\n  private _required: boolean = false;\n  private _checked: boolean = false;\n\n  /** Whether the thumb is currently being dragged. */\n  private _dragging = false;\n\n  /** Previous checked state before drag started. */\n  private _previousChecked: boolean;\n\n  /** Width of the thumb bar of the slide-toggle. */\n  private _thumbBarWidth: number;\n\n  /** Percentage of the thumb while dragging. Percentage as fraction of 100. */\n  private _dragPercentage: number;\n\n  /** Reference to the thumb HTMLElement. */\n  @ViewChild('thumbContainer', {static: false}) _thumbEl: ElementRef;\n\n  /** Reference to the thumb bar HTMLElement. */\n  @ViewChild('toggleBar', {static: false}) _thumbBarEl: ElementRef;\n\n  /** Name value will be applied to the input element if present. */\n  @Input() name: string | null = null;\n\n  /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /** Used to set the aria-label attribute on the underlying input element. */\n  @Input('aria-label') ariaLabel: string | null = null;\n\n  /** Used to set the aria-labelledby attribute on the underlying input element. */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** Whether the slide-toggle is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the slide-toggle element is checked or not. */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value) {\n    this._checked = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** An event will be dispatched each time the slide-toggle changes its value. */\n  @Output() readonly change: EventEmitter<MatSlideToggleChange> =\n      new EventEmitter<MatSlideToggleChange>();\n\n  /**\n   * An event will be dispatched each time the slide-toggle input is toggled.\n   * This event is always emitted when the user toggles the slide toggle, but this does not mean\n   * the slide toggle's value has changed. The event does not fire when the user drags to change\n   * the slide toggle value.\n   */\n  @Output() readonly toggleChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * An event will be dispatched each time the slide-toggle is dragged.\n   * This event is always emitted when the user drags the slide toggle to make a change greater\n   * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n   * the user toggles the slide toggle to change its value.\n   */\n  @Output() readonly dragChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Returns the unique id for the visual hidden input. */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Reference to the underlying input element. */\n  @ViewChild('input', {static: false}) _inputElement: ElementRef<HTMLInputElement>;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex: string,\n              private _ngZone: NgZone,\n              @Inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS)\n                  public defaults: MatSlideToggleDefaultOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              @Optional() private _dir?: Directionality) {\n    super(elementRef);\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngAfterContentInit() {\n    this._focusMonitor\n      .monitor(this._elementRef, true)\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n          // error. See https://github.com/angular/angular/issues/17793. To work around this,\n          // we defer telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => this._onTouched());\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Method being called whenever the underlying input emits a change event. */\n  _onChangeEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the component's `change` output.\n    event.stopPropagation();\n\n    if (!this._dragging) {\n      this.toggleChange.emit();\n    }\n    // Releasing the pointer over the `<label>` element while dragging triggers another\n    // click event on the `<label>` element. This means that the checked state of the underlying\n    // input changed unintentionally and needs to be changed back. Or when the slide toggle's config\n    // disabled toggle change event by setting `disableToggleValue: true`, the slide toggle's value\n    // does not change, and the checked state of the underlying input needs to be changed back.\n    if (this._dragging || this.defaults.disableToggleValue) {\n      this._inputElement.nativeElement.checked = this.checked;\n      return;\n    }\n\n    // Sync the value from the underlying input element with the component instance.\n    this.checked = this._inputElement.nativeElement.checked;\n\n    // Emit our custom change event only if the underlying input emitted one. This ensures that\n    // there is no change event, when the checked state changes programmatically.\n    this._emitChangeEvent();\n  }\n\n  /** Method being called whenever the slide-toggle has been clicked. */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `slide-toggle` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the slide-toggle. */\n  focus(): void {\n    this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n  }\n\n  /** Toggles the checked state of the slide-toggle. */\n  toggle(): void {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n\n  /**\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n   */\n  private _emitChangeEvent() {\n    this._onChange(this.checked);\n    this.change.emit(new MatSlideToggleChange(this, this.checked));\n  }\n\n  /** Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100. */\n  private _getDragPercentage(distance: number) {\n    let percentage = (distance / this._thumbBarWidth) * 100;\n\n    // When the toggle was initially checked, then we have to start the drag at the end.\n    if (this._previousChecked) {\n      percentage += 100;\n    }\n\n    return Math.max(0, Math.min(percentage, 100));\n  }\n\n  _onDragStart() {\n    if (!this.disabled && !this._dragging) {\n      const thumbEl = this._thumbEl.nativeElement;\n      this._thumbBarWidth = this._thumbBarEl.nativeElement.clientWidth - thumbEl.clientWidth;\n      thumbEl.classList.add('mat-dragging');\n\n      this._previousChecked = this.checked;\n      this._dragging = true;\n    }\n  }\n\n  _onDrag(event: HammerInput) {\n    if (this._dragging) {\n      const direction = this._dir && this._dir.value === 'rtl' ? -1 : 1;\n      this._dragPercentage = this._getDragPercentage(event.deltaX * direction);\n      // Calculate the moved distance based on the thumb bar width.\n      const dragX = (this._dragPercentage / 100) * this._thumbBarWidth * direction;\n      this._thumbEl.nativeElement.style.transform = `translate3d(${dragX}px, 0, 0)`;\n    }\n  }\n\n  _onDragEnd() {\n    if (this._dragging) {\n      const newCheckedValue = this._dragPercentage > 50;\n\n      if (newCheckedValue !== this.checked) {\n        this.dragChange.emit();\n        if (!this.defaults.disableDragValue) {\n          this.checked = newCheckedValue;\n          this._emitChangeEvent();\n        }\n      }\n\n      // The drag should be stopped outside of the current event handler, otherwise the\n      // click event will be fired before it and will revert the drag change.\n      this._ngZone.runOutsideAngular(() => setTimeout(() => {\n        if (this._dragging) {\n          this._dragging = false;\n          this._thumbEl.nativeElement.classList.remove('mat-dragging');\n\n          // Reset the transform because the component will take care\n          // of the thumb position after drag.\n          this._thumbEl.nativeElement.style.transform = '';\n        }\n      }));\n    }\n  }\n\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n    // slide-toggle component will be only marked for check, but no actual change detection runs\n    // automatically. Instead of going back into the zone in order to trigger a change detection\n    // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n    // we only trigger an explicit change detection for the slide-toggle view and it's children.\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {NgModule} from '@angular/core';\nimport {GestureConfig, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {MatSlideToggle} from './slide-toggle';\n\n\n@NgModule({\n  imports: [MatRippleModule, MatCommonModule, ObserversModule],\n  exports: [MatSlideToggle, MatCommonModule],\n  declarations: [MatSlideToggle],\n  providers: [\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}\n  ],\n})\nexport class MatSlideToggleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  HammerInput,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subscription} from 'rxjs';\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number | null;\n}\n\n\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSliderMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof MatSliderBase =\n        mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-slider',\n  exportAs: 'matSlider',\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(mousedown)': '_onMousedown($event)',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n    '(slide)': '_onSlide($event)',\n    '(slideend)': '_onSlideEnd()',\n    '(slidestart)': '_onSlideStart($event)',\n    'class': 'mat-slider',\n    'role': 'slider',\n    '[tabIndex]': 'tabIndex',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlider extends _MatSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\n  /** Whether the slider is inverted. */\n  @Input()\n  get invert(): boolean { return this._invert; }\n  set invert(value: boolean) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  private _invert = false;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _max: number = 100;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _min: number = 0;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number { return this._step; }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _step: number = 1;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean { return this._thumbLabel; }\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\n  private _thumbLabel: boolean = false;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() { return this._tickInterval; }\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: 'auto' | number = 0;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number | null {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v: number | null) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v);\n\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _value: number | null = null;\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number | null) => string | number;\n\n  /** Whether the slider is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical = false;\n\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  /** The value to be used for display purposes. */\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      return this.displayWith(this.value);\n    }\n\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  /** set focus to the host element */\n  focus() {\n    this._focusHostElement();\n  }\n\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /** The percentage of the slider that coincides with the value. */\n  get percent(): number { return this._clamp(this._percent); }\n  private _percent: number = 0;\n\n  /**\n   * Whether or not the thumb is sliding.\n   * Used to determine if there should be a transition for the thumb and fill track.\n   */\n  _isSliding: boolean = false;\n\n  /**\n   * Whether or not the slider is active (clicked or sliding).\n   * Used to shrink and grow the thumb as according to the Material Design spec.\n   */\n  _isActive: boolean = false;\n\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n\n  /** Whether the slider is at its minimum value. */\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n\n  /** CSS styles for the track background element. */\n  get _trackBackgroundStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the track fill element. */\n  get _trackFillStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the ticks container element. */\n  get _ticksContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n\n  /** CSS styles for the ticks element. */\n  get _ticksStyles(): { [key: string]: string } {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let side = this.vertical ?\n          (this._invertAxis ? 'Bottom' : 'Top') :\n          (this._invertAxis ? 'Right' : 'Left');\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n\n  get _thumbContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset =\n        (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n\n  /** The size of a tick interval as a percentage of the size of the track. */\n  private _tickIntervalPercent: number = 0;\n\n  /** The dimensions of the slider. */\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** Decimal places to round to, based on the step amount. */\n  private _roundToDecimal: number;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** The value of the slider when the slide start event fires. */\n  private _valueOnSlideStart: number | null;\n\n  /** Reference to the inner slider wrapper element. */\n  @ViewChild('sliderWrapper', {static: false}) private _sliderWrapper: ElementRef;\n\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  private _shouldInvertMouseCoords() {\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n\n  /** The language direction for this slider element. */\n  private _getDirection() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Attribute('tabindex') tabIndex: string,\n              // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngOnInit() {\n    this._focusMonitor\n        .monitor(this._elementRef, true)\n        .subscribe((origin: FocusOrigin) => {\n          this._isActive = !!origin && origin !== 'keyboard';\n          this._changeDetectorRef.detectChanges();\n        });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onMousedown(event: MouseEvent) {\n    // Don't do anything if the slider is disabled or the\n    // user is using anything other than the main mouse button.\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n\n    const oldValue = this.value;\n    this._isSliding = false;\n    this._focusHostElement();\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\n\n    // Emit a change and input event if the value changed.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n  }\n\n  _onSlide(event: HammerInput) {\n    if (this.disabled) {\n      return;\n    }\n\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n    // state, call the slide start handler manually.\n    if (!this._isSliding) {\n      this._onSlideStart(null);\n    }\n\n    // Prevent the slide from selecting anything else.\n    event.preventDefault();\n\n    let oldValue = this.value;\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n\n    // Native range elements always emit `input` events when the value changed while sliding.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n    }\n  }\n\n  _onSlideStart(event: HammerInput | null) {\n    if (this.disabled || this._isSliding) {\n      return;\n    }\n\n    // Simulate mouseenter in case this is a mobile device.\n    this._onMouseenter();\n\n    this._isSliding = true;\n    this._focusHostElement();\n    this._valueOnSlideStart = this.value;\n\n    if (event) {\n      this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n      event.preventDefault();\n    }\n  }\n\n  _onSlideEnd() {\n    this._isSliding = false;\n\n    if (this._valueOnSlideStart != this.value && !this.disabled) {\n      this._emitChangeEvent();\n    }\n    this._valueOnSlideStart = null;\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (this.disabled || hasModifierKey(event)) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    this._isSliding = false;\n  }\n\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  private _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  /** Emits a change event if the current value is different from the last emitted value. */\n  private _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  /** Emits an input event when the current value is different from the last emitted value. */\n  private _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  private _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(value = this.value): MatSliderChange {\n    let event = new MatSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  /** Calculates the percentage of the slider that a value is. */\n  private _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  /** Calculates the value a percentage of the slider corresponds to. */\n  private _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  /** Return a number between two numbers. */\n  private _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  private _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  private _focusHostElement() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Blurs the native element. */\n  private _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {MatSlider} from './slider';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\n})\nexport class MatSliderModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface MatSnackBarDismiss {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n}\n\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MatSnackBarRef<T> {\n  /** The instance of the component making up the content of the snack bar. */\n  instance: T;\n\n  /**\n   * The instance of the component making up the content of the snack bar.\n   * @docs-private\n   */\n  containerInstance: MatSnackBarContainer;\n\n  /** Subject for notifying the user that the snack bar has been dismissed. */\n  private readonly _afterDismissed = new Subject<MatSnackBarDismiss>();\n\n  /** Subject for notifying the user that the snack bar has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the snack bar action was called. */\n  private readonly _onAction = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: number;\n\n  /** Whether the snack bar was dismissed using the action button. */\n  private _dismissedByAction = false;\n\n  constructor(containerInstance: MatSnackBarContainer,\n              private _overlayRef: OverlayRef) {\n    this.containerInstance = containerInstance;\n    // Dismiss snackbar on action.\n    this.onAction().subscribe(() => this.dismiss());\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Marks the snackbar action clicked. */\n  dismissWithAction(): void {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n    }\n  }\n\n\n  /**\n   * Marks the snackbar action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction(): void {\n    this.dismissWithAction();\n  }\n\n  /** Dismisses the snack bar after some duration */\n  _dismissAfter(duration: number): void {\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), duration);\n  }\n\n  /** Marks the snackbar as opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n\n    this._afterDismissed.next({dismissedByAction: this._dismissedByAction});\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.containerInstance._onEnter;\n  }\n\n  /** Gets an observable that is notified when the snack bar action is called. */\n  onAction(): Observable<void> {\n    return this._onAction.asObservable();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nexport const MAT_SNACK_BAR_DATA = new InjectionToken<any>('MatSnackBarData');\n\n/** Possible values for horizontalPosition on MatSnackBarConfig. */\nexport type MatSnackBarHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\n\n/** Possible values for verticalPosition on MatSnackBarConfig. */\nexport type MatSnackBarVerticalPosition = 'top' | 'bottom';\n\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MatSnackBarConfig<D = any> {\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n  politeness?: AriaLivePoliteness = 'assertive';\n\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n   * component or template, the announcement message will default to the specified message.\n   */\n  announcementMessage?: string = '';\n\n  /** The view container to place the overlay for the snack bar into. */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n  duration?: number = 0;\n\n  /** Extra CSS classes to be added to the snack bar container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the snack bar. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** The horizontal position to place the snack bar. */\n  horizontalPosition?: MatSnackBarHorizontalPosition = 'center';\n\n  /** The vertical position to place the snack bar. */\n  verticalPosition?: MatSnackBarVerticalPosition = 'bottom';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ViewEncapsulation, Inject, ChangeDetectionStrategy} from '@angular/core';\nimport {MatSnackBarRef} from './snack-bar-ref';\nimport {MAT_SNACK_BAR_DATA} from './snack-bar-config';\n\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-simple-snackbar',\n  }\n})\nexport class SimpleSnackBar {\n  /** Data that was injected into the snack bar. */\n  data: {message: string, action: string};\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<SimpleSnackBar>,\n    @Inject(MAT_SNACK_BAR_DATA) data: any) {\n    this.data = data;\n  }\n\n  /** Performs the action on the snack bar. */\n  action(): void {\n    this.snackBarRef.dismissWithAction();\n  }\n\n  /** If the action button should be shown. */\n  get hasAction(): boolean {\n    return !!this.data.action;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nexport const matSnackBarAnimations: {\n  readonly snackBarState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a snack bar. */\n  snackBarState: trigger('state', [\n    state('void, hidden', style({\n      transform: 'scale(0.8)',\n      opacity: 0,\n    })),\n    state('visible', style({\n      transform: 'scale(1)',\n      opacity: 1,\n    })),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n      opacity: 0\n    }))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {matSnackBarAnimations} from './snack-bar-animations';\nimport {MatSnackBarConfig} from './snack-bar-config';\n\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'snack-bar-container',\n  templateUrl: 'snack-bar-container.html',\n  styleUrls: ['snack-bar-container.css'],\n  // In Ivy embedded views will be change detected from their declaration place, rather than\n  // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n  // because it might cause snack bars that were opened from a template not to be out of date.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  animations: [matSnackBarAnimations.snackBarState],\n  host: {\n    '[attr.role]': '_role',\n    'class': 'mat-snack-bar-container',\n    '[@state]': '_animationState',\n    '(@state.done)': 'onAnimationEnd($event)'\n  },\n})\nexport class MatSnackBarContainer extends BasePortalOutlet implements OnDestroy {\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the snack bar content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** Subject for notifying that the snack bar has exited from view. */\n  readonly _onExit: Subject<any> = new Subject();\n\n  /** Subject for notifying that the snack bar has finished entering the view. */\n  readonly _onEnter: Subject<any> = new Subject();\n\n  /** The state of the snack bar animations. */\n  _animationState = 'void';\n\n  /** ARIA role for the snack bar container. */\n  _role: 'alert' | 'status' | null;\n\n  constructor(\n    private _ngZone: NgZone,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    /** The snack bar configuration. */\n    public snackBarConfig: MatSnackBarConfig) {\n\n    super();\n\n    // Based on the ARIA spec, `alert` and `status` roles have an\n    // implicit `assertive` and `polite` politeness respectively.\n    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n      this._role = 'alert';\n    } else if (snackBarConfig.politeness === 'off') {\n      this._role = null;\n    } else {\n      this._role = 'status';\n    }\n  }\n\n  /** Attach a component portal as content to this snack bar container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this snack bar container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Handle end of animations, updating the state of the snackbar. */\n  onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n      this._completeExit();\n    }\n\n    if (toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this._onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  /** Begin animation of snack bar entrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the snack bar exiting from view. */\n  exit(): Observable<void> {\n    // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n    // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n    // `MatSnackBar.open`).\n    this._animationState = 'hidden';\n    return this._onExit;\n  }\n\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  /**\n   * Waits for the zone to settle before removing the element. Helps prevent\n   * errors where we end up removing an element which is in the middle of an animation.\n   */\n  private _completeExit() {\n    this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n\n  /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n  private _applySnackBarClasses() {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const panelClasses = this.snackBarConfig.panelClass;\n\n    if (panelClasses) {\n      if (Array.isArray(panelClasses)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClasses.forEach(cssClass => element.classList.add(cssClass));\n      } else {\n        element.classList.add(panelClasses);\n      }\n    }\n\n    if (this.snackBarConfig.horizontalPosition === 'center') {\n      element.classList.add('mat-snack-bar-center');\n    }\n\n    if (this.snackBarConfig.verticalPosition === 'top') {\n      element.classList.add('mat-snack-bar-top');\n    }\n  }\n\n  /** Asserts that no content is already attached to the container. */\n  private _assertNotAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n  ],\n  exports: [MatSnackBarContainer, MatCommonModule],\n  declarations: [MatSnackBarContainer, SimpleSnackBar],\n  entryComponents: [MatSnackBarContainer, SimpleSnackBar],\n})\nexport class MatSnackBarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  OnDestroy,\n} from '@angular/core';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MAT_SNACK_BAR_DATA, MatSnackBarConfig} from './snack-bar-config';\nimport {MatSnackBarContainer} from './snack-bar-container';\nimport {MatSnackBarModule} from './snack-bar-module';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/** Injection token that can be used to specify default snack bar. */\nexport const MAT_SNACK_BAR_DEFAULT_OPTIONS =\n    new InjectionToken<MatSnackBarConfig>('mat-snack-bar-default-options', {\n      providedIn: 'root',\n      factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY(): MatSnackBarConfig {\n  return new MatSnackBarConfig();\n}\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\n@Injectable({providedIn: MatSnackBarModule})\nexport class MatSnackBar implements OnDestroy {\n  /**\n   * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n   * If there is a parent snack-bar service, all operations should delegate to that parent\n   * via `_openedSnackBarRef`.\n   */\n  private _snackBarRefAtThisLevel: MatSnackBarRef<any> | null = null;\n\n  /** Reference to the currently opened snackbar at *any* level. */\n  get _openedSnackBarRef(): MatSnackBarRef<any> | null {\n    const parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n\n  set _openedSnackBarRef(value: MatSnackBarRef<any> | null) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _live: LiveAnnouncer,\n      private _injector: Injector,\n      private _breakpointObserver: BreakpointObserver,\n      @Optional() @SkipSelf() private _parentSnackBar: MatSnackBar,\n      @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private _defaultConfig: MatSnackBarConfig) {}\n\n  /**\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param component Component to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromComponent<T>(component: ComponentType<T>, config?: MatSnackBarConfig):\n    MatSnackBarRef<T> {\n    return this._attach(component, config) as MatSnackBarRef<T>;\n  }\n\n  /**\n   * Creates and dispatches a snack bar with a custom template for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param template Template to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromTemplate(template: TemplateRef<any>, config?: MatSnackBarConfig):\n    MatSnackBarRef<EmbeddedViewRef<any>> {\n    return this._attach(template, config);\n  }\n\n  /**\n   * Opens a snackbar with a message and an optional action.\n   * @param message The message to show in the snackbar.\n   * @param action The label for the snackbar action.\n   * @param config Additional configuration options for the snackbar.\n   */\n  open(message: string, action: string = '', config?: MatSnackBarConfig):\n      MatSnackBarRef<SimpleSnackBar> {\n    const _config = {...this._defaultConfig, ...config};\n\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {message, action};\n\n    if (!_config.announcementMessage) {\n      _config.announcementMessage = message;\n    }\n\n    return this.openFromComponent(SimpleSnackBar, _config);\n  }\n\n  /**\n   * Dismisses the currently-visible snack bar.\n   */\n  dismiss(): void {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    // Only dismiss the snack bar at the current level on destroy.\n    if (this._snackBarRefAtThisLevel) {\n      this._snackBarRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the snack bar container component to the overlay.\n   */\n  private _attachSnackBarContainer(overlayRef: OverlayRef,\n                                   config: MatSnackBarConfig): MatSnackBarContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatSnackBarConfig, config]\n    ]));\n\n    const containerPortal =\n        new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<MatSnackBarContainer> = overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n\n  /**\n   * Places a new component or a template as the content of the snack bar container.\n   */\n  private _attach<T>(content: ComponentType<T> | TemplateRef<T>, userConfig?: MatSnackBarConfig):\n    MatSnackBarRef<T | EmbeddedViewRef<any>> {\n\n    const config = {...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig};\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachSnackBarContainer(overlayRef, config);\n    const snackBarRef = new MatSnackBarRef<T | EmbeddedViewRef<any>>(container, overlayRef);\n\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null!, {\n        $implicit: config.data,\n        snackBarRef\n      } as any);\n\n      snackBarRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, snackBarRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal<T>(portal);\n\n      // We can't pass this via the injector, because the injector is created earlier.\n      snackBarRef.instance = contentRef.instance;\n    }\n\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\n    // fill the width of the screen for full width snackbars.\n    this._breakpointObserver.observe(Breakpoints.Handset).pipe(\n      takeUntil(overlayRef.detachments().pipe(take(1)))\n    ).subscribe(state => {\n      if (state.matches) {\n        overlayRef.overlayElement.classList.add('mat-snack-bar-handset');\n      } else {\n        overlayRef.overlayElement.classList.remove('mat-snack-bar-handset');\n      }\n    });\n\n    this._animateSnackBar(snackBarRef, config);\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n\n  /** Animates the old snack bar out and the new one in. */\n  private _animateSnackBar(snackBarRef: MatSnackBarRef<any>, config: MatSnackBarConfig) {\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (config.duration && config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration!));\n    }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified snack bar config.\n   */\n  private _createOverlay(config: MatSnackBarConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n\n    let positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft = (\n      config.horizontalPosition === 'left' ||\n      (config.horizontalPosition === 'start' && !isRtl) ||\n      (config.horizontalPosition === 'end' && isRtl));\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a snack bar component.\n   * @param config Config that was used to create the snack bar.\n   * @param snackBarRef Reference to the snack bar.\n   */\n  private _createInjector<T>(\n      config: MatSnackBarConfig,\n      snackBarRef: MatSnackBarRef<T>): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    return new PortalInjector(userInjector || this._injector, new WeakMap<any, any>([\n      [MatSnackBarRef, snackBarRef],\n      [MAT_SNACK_BAR_DATA, config.data]\n    ]));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getSortDuplicateSortableIdError(id: string): Error {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n\n/** @docs-private */\nexport function getSortHeaderNotContainedWithinSortError(): Error {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n\n/** @docs-private */\nexport function getSortHeaderMissingIdError(): Error {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n\n/** @docs-private */\nexport function getSortInvalidDirectionError(direction: string): Error {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasInitialized,\n  HasInitializedCtor,\n  mixinDisabled,\n  mixinInitialized,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {SortDirection} from './sort-direction';\nimport {\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n  getSortInvalidDirectionError,\n} from './sort-errors';\n\n/** Interface for a directive that holds sorting state consumed by `MatSortHeader`. */\nexport interface MatSortable {\n  /** The id of the column being sorted. */\n  id: string;\n\n  /** Starting sort direction. */\n  start: 'asc' | 'desc';\n\n  /** Whether to disable clearing the sorting state. */\n  disableClear: boolean;\n}\n\n/** The current sort state. */\nexport interface Sort {\n  /** The id of the column being sorted. */\n  active: string;\n\n  /** The sort direction. */\n  direction: SortDirection;\n}\n\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {}\nconst _MatSortMixinBase: HasInitializedCtor & CanDisableCtor & typeof MatSortBase =\n    mixinInitialized(mixinDisabled(MatSortBase));\n\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\n@Directive({\n  selector: '[matSort]',\n  exportAs: 'matSort',\n  inputs: ['disabled: matSortDisabled']\n})\nexport class MatSort extends _MatSortMixinBase\n    implements CanDisable, HasInitialized, OnChanges, OnDestroy, OnInit {\n  /** Collection of all registered sortables that this directive manages. */\n  sortables = new Map<string, MatSortable>();\n\n  /** Used to notify any child components listening to state changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** The id of the most recently sorted MatSortable. */\n  @Input('matSortActive') active: string;\n\n  /**\n   * The direction to set when an MatSortable is initially sorted.\n   * May be overriden by the MatSortable's sort start.\n   */\n  @Input('matSortStart') start: 'asc' | 'desc' = 'asc';\n\n  /** The sort direction of the currently active MatSortable. */\n  @Input('matSortDirection')\n  get direction(): SortDirection { return this._direction; }\n  set direction(direction: SortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  private _direction: SortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   * May be overriden by the MatSortable's disable clear input.\n   */\n  @Input('matSortDisableClear')\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v: boolean) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  /** Event emitted when the user changes either the active sort or sort direction. */\n  @Output('matSortChange') readonly sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable: MatSortable): void {\n    if (!sortable.id) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id)) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable: MatSortable): void {\n    this.sortables.delete(sortable.id);\n  }\n\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable: MatSortable): void {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.emit({active: this.active, direction: this.direction});\n  }\n\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable: MatSortable): SortDirection {\n    if (!sortable) { return ''; }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n  ngOnInit() {\n    this._markInitialized();\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\n                               disableClear: boolean): SortDirection[] {\n  let sortOrder: SortDirection[] = ['asc', 'desc'];\n  if (start == 'desc') { sortOrder.reverse(); }\n  if (!disableClear) { sortOrder.push(''); }\n\n  return sortOrder;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  keyframes,\n  AnimationTriggerMetadata, query, animateChild,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE;\n\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nexport const matSortAnimations: {\n  readonly indicator: AnimationTriggerMetadata;\n  readonly leftPointer: AnimationTriggerMetadata;\n  readonly rightPointer: AnimationTriggerMetadata;\n  readonly arrowOpacity: AnimationTriggerMetadata;\n  readonly arrowPosition: AnimationTriggerMetadata;\n  readonly allowChildren: AnimationTriggerMetadata;\n} = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [\n    state('active-asc, asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('active-desc, desc', style({transform: 'translateY(10px)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [\n    state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [\n    state('active-asc, asc', style({transform: 'rotate(45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: trigger('arrowOpacity', [\n    state('desc-to-active, asc-to-active, active', style({opacity: 1})),\n    state('desc-to-hint, asc-to-hint, hint', style({opacity: .54})),\n    state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n        style({opacity: 0})),\n    // Transition between all states except for immediate transitions\n    transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n    transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: trigger('arrowPosition', [\n    // Hidden Above => Hint Center\n    transition('* => desc-to-hint, * => desc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(-25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Below\n    transition('* => hint-to-desc, * => active-to-desc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(25%)'})\n        ]))),\n    // Hidden Below => Hint Center\n    transition('* => asc-to-hint, * => asc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Above\n    transition('* => hint-to-asc, * => active-to-asc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(-25%)'})\n        ]))),\n    state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n        style({transform: 'translateY(0)'})),\n    state('hint-to-desc, active-to-desc, desc',\n        style({transform: 'translateY(-25%)'})),\n    state('hint-to-asc, active-to-asc, asc',\n        style({transform: 'translateY(25%)'})),\n  ]),\n\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: trigger('allowChildren', [\n    transition('* <=> *', [\n      query('@*', animateChild(), {optional: true})\n    ])\n  ]),\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable({providedIn: 'root'})\nexport class MatSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** ARIA label for the sorting button. */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n}\n/** @docs-private */\nexport function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n\n/** @docs-private */\nexport const MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatSort, MatSortable} from './sort';\nimport {matSortAnimations} from './sort-animations';\nimport {SortDirection} from './sort-direction';\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\nimport {MatSortHeaderIntl} from './sort-header-intl';\n\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {}\nconst _MatSortHeaderMixinBase: CanDisableCtor & typeof MatSortHeaderBase =\n    mixinDisabled(MatSortHeaderBase);\n\n/**\n * Valid positions for the arrow to be in for its opacity and translation. If the state is a\n * sort direction, the position of the arrow will be above/below and opacity 0. If the state is\n * hint, the arrow will be in the center with a slight opacity. Active state means the arrow will\n * be fully opaque in the center.\n *\n * @docs-private\n */\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\n\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * @docs-private\n */\nexport interface ArrowViewStateTransition {\n  fromState?: ArrowViewState;\n  toState: ArrowViewState;\n}\n\n/** Column definition associated with a `MatSortHeader`. */\ninterface MatSortHeaderColumnDef {\n  name: string;\n}\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-sort-header]',\n  exportAs: 'matSortHeader',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    '(click)': '_handleClick()',\n    '(mouseenter)': '_setIndicatorHintVisible(true)',\n    '(longpress)': '_setIndicatorHintVisible(true)',\n    '(mouseleave)': '_setIndicatorHintVisible(false)',\n    '[attr.aria-sort]': '_getAriaSortAttribute()',\n    '[class.mat-sort-header-disabled]': '_isDisabled()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    matSortAnimations.indicator,\n    matSortAnimations.leftPointer,\n    matSortAnimations.rightPointer,\n    matSortAnimations.arrowOpacity,\n    matSortAnimations.arrowPosition,\n    matSortAnimations.allowChildren,\n  ]\n})\nexport class MatSortHeader extends _MatSortHeaderMixinBase\n    implements CanDisable, MatSortable, OnDestroy, OnInit {\n  private _rerenderSubscription: Subscription;\n\n  /**\n   * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n   * provide an affordance that the header is sortable by showing on focus and hover.\n   */\n  _showIndicatorHint: boolean = false;\n\n  /**\n   * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n   * position through the animation. If animations are currently disabled, the fromState is removed\n   * so that there is no animation displayed.\n   */\n  _viewState: ArrowViewStateTransition;\n\n  /** The direction the arrow should be facing according to the current state. */\n  _arrowDirection: SortDirection = '';\n\n  /**\n   * Whether the view state animation should show the transition between the `from` and `to` states.\n   */\n  _disableViewStateAnimation = false;\n\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  @Input('mat-sort-header') id: string;\n\n  /** Sets the position of the arrow that displays when sorted. */\n  @Input() arrowPosition: 'before' | 'after' = 'after';\n\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\n  @Input() start: 'asc' | 'desc';\n\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n  @Input()\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  constructor(public _intl: MatSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _sort: MatSort,\n              @Inject('MAT_SORT_HEADER_COLUMN_DEF') @Optional()\n                  public _columnDef: MatSortHeaderColumnDef) {\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    super();\n\n    if (!_sort) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n        .subscribe(() => {\n          if (this._isSorted()) {\n            this._updateArrowDirection();\n          }\n\n          // If this header was recently active and now no longer sorted, animate away the arrow.\n          if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = false;\n            this._setAnimationTransitionState({fromState: 'active', toState: this._arrowDirection});\n          }\n\n          changeDetectorRef.markForCheck();\n        });\n  }\n\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\n    this._updateArrowDirection();\n    this._setAnimationTransitionState(\n        {toState: this._isSorted() ? 'active' : this._arrowDirection});\n\n    this._sort.register(this);\n  }\n\n  ngOnDestroy() {\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /**\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\n   */\n  _setIndicatorHintVisible(visible: boolean) {\n    // No-op if the sort header is disabled - should not make the hint visible.\n    if (this._isDisabled() && visible) { return; }\n\n    this._showIndicatorHint = visible;\n\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({fromState: this._arrowDirection, toState: 'hint'});\n      } else {\n        this._setAnimationTransitionState({fromState: 'hint', toState: this._arrowDirection});\n      }\n    }\n  }\n\n  /**\n   * Sets the animation transition view state for the arrow's position and opacity. If the\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n   * no animation appears.\n   */\n  _setAnimationTransitionState(viewState: ArrowViewStateTransition) {\n    this._viewState = viewState;\n\n    // If the animation for arrow position state (opacity/translation) should be disabled,\n    // remove the fromState so that it jumps right to the toState.\n    if (this._disableViewStateAnimation) {\n      this._viewState = {toState: viewState.toState};\n    }\n  }\n\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _handleClick() {\n    if (this._isDisabled()) { return; }\n\n    this._sort.sort(this);\n\n    // Do not show the animation if the header was already shown in the right position.\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n      this._disableViewStateAnimation = true;\n    }\n\n    // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n    // the direction it is facing.\n    const viewState: ArrowViewStateTransition = this._isSorted() ?\n        {fromState: this._arrowDirection, toState: 'active'} :\n        {fromState: 'active', toState: this._arrowDirection};\n    this._setAnimationTransitionState(viewState);\n\n    this._showIndicatorHint = false;\n  }\n\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\n  _getArrowDirectionState() {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n\n  /** Returns the arrow position state (opacity, translation). */\n  _getArrowViewState() {\n    const fromState = this._viewState.fromState;\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n  }\n\n  /**\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n   * active sorted direction. The reason this is updated through a function is because the direction\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n   * preserving its direction, even though the next sort direction is actually different and should\n   * only be changed once the arrow displays again (hint or activation).\n   */\n  _updateArrowDirection() {\n    this._arrowDirection = this._isSorted() ?\n        this._sort.direction :\n        (this.start || this._sort.start);\n  }\n\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) { return null; }\n\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatSortHeader} from './sort-header';\nimport {MatSort} from './sort';\nimport {MAT_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MatSort, MatSortHeader],\n  declarations: [MatSort, MatSortHeader],\n  providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n})\nexport class MatSortModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel, {static: false}) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CDK_TABLE_TEMPLATE, CdkTable} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-table, table[mat-table]',\n  exportAs: 'matTable',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['table.css'],\n  host: {\n    'class': 'mat-table',\n  },\n  providers: [{provide: CdkTable, useExisting: MatTable}],\n  encapsulation: ViewEncapsulation.None,\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTable<T> extends CdkTable<T> {\n  /** Overrides the sticky CSS class set by the `CdkTable`. */\n  protected stickyCssClass = 'mat-table-sticky';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Input} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef, CdkFooterCell, CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}]\n})\nexport class MatCellDef extends CdkCellDef {}\n\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}]\n})\nexport class MatHeaderCellDef extends CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matFooterCellDef]',\n  providers: [{provide: CdkFooterCellDef, useExisting: MatFooterCellDef}]\n})\nexport class MatFooterCellDef extends CdkFooterCellDef {}\n\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[matColumnDef]',\n  providers: [\n    {provide: CdkColumnDef, useExisting: MatColumnDef},\n    {provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef}\n  ],\n})\nexport class MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  @Input('matColumnDef') name: string;\n\n  /** Whether this column should be sticky positioned at the start of the row */\n  @Input() sticky: boolean;\n\n  /** Whether this column should be sticky positioned on the end of the row */\n  @Input() stickyEnd: boolean;\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-header-cell, th[mat-header-cell]',\n  host: {\n    'class': 'mat-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class MatHeaderCell extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-footer-cell, td[mat-footer-cell]',\n  host: {\n    'class': 'mat-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatFooterCell extends CdkFooterCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-cell, td[mat-cell]',\n  host: {\n    'class': 'mat-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatCell extends CdkCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef\n} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\n\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\n  inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n})\nexport class MatHeaderRowDef extends CdkHeaderRowDef {\n}\n\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[matFooterRowDef]',\n  providers: [{provide: CdkFooterRowDef, useExisting: MatFooterRowDef}],\n  inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n})\nexport class MatFooterRowDef extends CdkFooterRowDef {\n}\n\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\n  inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n})\nexport class MatRowDef<T> extends CdkRowDef<T> {\n}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-header-row, tr[mat-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-header-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matHeaderRow',\n  providers: [{provide: CdkHeaderRow, useExisting: MatHeaderRow}],\n})\nexport class MatHeaderRow extends CdkHeaderRow {\n}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-footer-row, tr[mat-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-footer-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matFooterRow',\n  providers: [{provide: CdkFooterRow, useExisting: MatFooterRow}],\n})\nexport class MatFooterRow extends CdkFooterRow {\n}\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-row, tr[mat-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matRow',\n  providers: [{provide: CdkRow, useExisting: MatRow}],\n})\nexport class MatRow extends CdkRow {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTextColumn} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-text-column',\n  template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  // Change detection is intentionally not set to OnPush. This component's template will be provided\n  // to the table to be inserted into its view. This is problematic when change detection runs since\n  // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n  // mean's the template in the table's view will not have the updated value (and in fact will cause\n  // an ExpressionChangedAfterItHasBeenCheckedError).\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTextColumn<T> extends CdkTextColumn<T> {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatTable} from './table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatFooterCell,\n  MatFooterCellDef,\n  MatHeaderCell,\n  MatHeaderCellDef\n} from './cell';\nimport {\n  MatFooterRow,\n  MatFooterRowDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef\n} from './row';\nimport {MatTextColumn} from './text-column';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\n\nconst EXPORTED_DECLARATIONS = [\n  // Table\n  MatTable,\n\n  // Template defs\n  MatHeaderCellDef,\n  MatHeaderRowDef,\n  MatColumnDef,\n  MatCellDef,\n  MatRowDef,\n  MatFooterCellDef,\n  MatFooterRowDef,\n\n  // Cell directives\n  MatHeaderCell,\n  MatCell,\n  MatFooterCell,\n\n  // Row directives\n  MatHeaderRow,\n  MatRow,\n  MatFooterRow,\n\n  MatTextColumn,\n];\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CommonModule,\n    MatCommonModule,\n  ],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class MatTableModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {_isNumberValue} from '@angular/cdk/coercion';\nimport {DataSource} from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  merge,\n  Observable,\n  of as observableOf,\n  Subscription,\n  Subject,\n} from 'rxjs';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {map} from 'rxjs/operators';\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n */\nexport class MatTableDataSource<T> extends DataSource<T> {\n  /** Stream that emits when a new data array is set on the data source. */\n  private readonly _data: BehaviorSubject<T[]>;\n\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  private readonly _renderData = new BehaviorSubject<T[]>([]);\n\n  /** Stream that emits when a new filter string is set on the data source. */\n  private readonly _filter = new BehaviorSubject<string>('');\n\n  /** Used to react to internal changes of the paginator that are made by the data source itself. */\n  private readonly _internalPageChanges = new Subject<void>();\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription = Subscription.EMPTY;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData: T[];\n\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() { return this._data.value; }\n  set data(data: T[]) { this._data.next(data); }\n\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter(): string { return this._filter.value; }\n  set filter(filter: string) { this._filter.next(filter); }\n\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort(): MatSort | null { return this._sort; }\n  set sort(sort: MatSort|null) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  private _sort: MatSort|null;\n\n  /**\n   * Instance of the MatPaginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator(): MatPaginator | null { return this._paginator; }\n  set paginator(paginator: MatPaginator|null) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  private _paginator: MatPaginator|null;\n\n  /**\n   * Data accessor function that is used for accessing data properties for sorting through\n   * the default sortData function.\n   * This default function assumes that the sort header IDs (which defaults to the column name)\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n   * May be set to a custom function for different behavior.\n   * @param data Data object that is being accessed.\n   * @param sortHeaderId The name of the column that represents the data.\n   */\n  sortingDataAccessor: ((data: T, sortHeaderId: string) => string|number) =\n      (data: T, sortHeaderId: string): string|number => {\n    const value = (data as {[key: string]: any})[sortHeaderId];\n\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n      // leave them as strings. For more info: https://goo.gl/y5vbSg\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n   * By default, the function retrieves the active sort and its direction and compares data\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n   * of data ordering.\n   * @param data The array of data that should be sorted.\n   * @param sort The connected MatSort that holds the current sort state.\n   */\n  sortData: ((data: T[], sort: MatSort) => T[]) = (data: T[], sort: MatSort): T[] => {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!active || direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n      // one value exists while the other doesn't. In this case, existing value should come first.\n      // This avoids inconsistent results when comparing values to undefined/null.\n      // If neither value exists, return 0 (equal).\n      let comparatorResult = 0;\n      if (valueA != null && valueB != null) {\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  }\n\n  /**\n   * Checks if a data object matches the data source's filter string. By default, each data object\n   * is converted to a string of its properties and returns true if the filter has\n   * at least one occurrence in that string. By default, the filter string has its whitespace\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n   * filter matching.\n   * @param data Data object used to check against the filter.\n   * @param filter Filter string that has been set on the data source.\n   * @returns Whether the filter matches against the data\n   */\n  filterPredicate: ((data: T, filter: string) => boolean) = (data: T, filter: string): boolean => {\n    // Transform the data into a lowercase string of all property values.\n    const dataStr = Object.keys(data).reduce((currentTerm: string, key: string) => {\n      // Use an obscure Unicode character to delimit the words in the concatenated string.\n      // This avoids matches where the values of two columns combined will match the user's query\n      // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n      // that has a very low chance of being typed in by somebody in a text field. This one in\n      // particular is \"White up-pointing triangle with dot\" from\n      // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n      return currentTerm + (data as {[key: string]: any})[key] + 'â¬';\n    }, '').toLowerCase();\n\n    // Transform the filter by converting it to lowercase and removing whitespace.\n    const transformedFilter = filter.trim().toLowerCase();\n\n    return dataStr.indexOf(transformedFilter) != -1;\n  }\n\n  constructor(initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this._updateChangeSubscription();\n  }\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange: Observable<Sort|null|void> = this._sort ?\n        merge(this._sort.sortChange, this._sort.initialized) as Observable<Sort|void> :\n        observableOf(null);\n    const pageChange: Observable<PageEvent|null|void> = this._paginator ?\n        merge(\n          this._paginator.page,\n          this._internalPageChanges,\n          this._paginator.initialized\n        ) as Observable<PageEvent|void> :\n        observableOf(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest(dataStream, this._filter)\n      .pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest(filteredData, sortChange)\n      .pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest(orderedData, pageChange)\n      .pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterTermAccessor function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data: T[]) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterTermAccessor.\n    // May be overridden for customization.\n    this.filteredData =\n        !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n\n    if (this.paginator) { this._updatePaginator(this.filteredData.length); }\n\n    return this.filteredData;\n  }\n\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data: T[]): T[] {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) { return data; }\n\n    return this.sortData(data.slice(), this.sort);\n  }\n\n  /**\n   * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data: T[]): T[] {\n    if (!this.paginator) { return data; }\n\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice().splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength: number) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n\n      if (!paginator) { return; }\n\n      paginator.length = filteredDataLength;\n\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() { return this._renderData; }\n\n  /**\n   * Used by the MatTable. Called when it is destroyed. No-op.\n   * @docs-private\n   */\n  disconnect() { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone} from '@angular/core';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel, {static: false}) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  },\n})\nexport class MatTabBody implements OnInit, OnDestroy {\n\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective, {static: false}) _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple} from '@angular/material/core';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n// Boilerplate for applying mixins to MatTabHeader.\n/** @docs-private */\nclass MatTabHeaderBase {}\nconst _MatTabHeaderMixinBase: CanDisableRippleCtor & typeof MatTabHeaderBase =\n    mixinDisableRipple(MatTabHeaderBase);\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatTabLabelWrapper>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _platform: Platform) {\n    super();\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   */\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._labelWrappers)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent;\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (platform.TRIDENT || platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper!);\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {MatTabHeader} from './tab-header';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupBase =\n    mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n\n  @ViewChild('tabBodyWrapper', {static: false}) _tabBodyWrapper: ElementRef;\n\n  @ViewChild('tabHeader', {static: false}) _tabHeader: MatTabHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from '../ink-bar';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nclass MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabNavMixinBase: CanDisableRippleCtor & CanColorCtor & typeof MatTabNavBase =\n    mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  private _activeLinkChanged: boolean;\n  private _activeLinkElement: ElementRef<HTMLElement> | null;\n\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(element: ElementRef) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @breaking-change 8.0.0\n    this._activeLinkChanged = !!element;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10))\n          .pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  protected _tabLinkRipple: RippleRenderer;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: MatTabNav, public _elementRef: ElementRef, ngZone: NgZone,\n      platform: Platform,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n    this.rippleConfig = globalRippleOptions || {};\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n    _focusMonitor.monitor(_elementRef);\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {A11yModule} from '@angular/cdk/a11y';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  isDevMode,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nclass MatToolbarBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatToolbarMixinBase: CanColorCtor & typeof MatToolbarBase = mixinColor(MatToolbarBase);\n\n@Directive({\n  selector: 'mat-toolbar-row',\n  exportAs: 'matToolbarRow',\n  host: {'class': 'mat-toolbar-row'},\n})\nexport class MatToolbarRow {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-toolbar',\n  exportAs: 'matToolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-toolbar',\n    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\n  private _document: Document;\n\n  /** Reference to all toolbar row elements that have been projected. */\n  @ContentChildren(MatToolbarRow) _toolbarRows: QueryList<MatToolbarRow>;\n\n  constructor(\n    elementRef: ElementRef,\n    private _platform: Platform,\n    @Inject(DOCUMENT) document?: any) {\n    super(elementRef);\n\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n\n  ngAfterViewInit() {\n    if (!isDevMode() || !this._platform.isBrowser) {\n      return;\n    }\n\n    this._checkToolbarMixedModes();\n    this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n  }\n\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  private _checkToolbarMixedModes() {\n    if (!this._toolbarRows.length) {\n      return;\n    }\n\n    // Check if there are any other DOM nodes that can display content but aren't inside of\n    // a <mat-toolbar-row> element.\n    const isCombinedUsage = Array.from<HTMLElement>(this._elementRef.nativeElement.childNodes)\n      .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n      .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n      .some(node => !!(node.textContent && node.textContent.trim()));\n\n    if (isCombinedUsage) {\n      throwToolbarMixedModesError();\n    }\n  }\n}\n\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nexport function throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n    'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n    'inside of a `<mat-toolbar>` for a single row.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatToolbar, MatToolbarRow} from './toolbar';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n  declarations: [MatToolbar, MatToolbarRow],\n})\nexport class MatToolbarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodeOutlet} from '@angular/cdk/tree';\nimport {\n  Directive,\n  Inject,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[matTreeNodeOutlet]'\n})\nexport class MatTreeNodeOutlet implements CdkTreeNodeOutlet {\n  constructor(\n      public viewContainer: ViewContainerRef,\n      @Inject(CDK_TREE_NODE_OUTLET_NODE) @Optional() public _node?: any) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  CDK_TREE_NODE_OUTLET_NODE,\n  CdkNestedTreeNode,\n  CdkTree,\n  CdkTreeNode,\n  CdkTreeNodeDef,\n} from '@angular/cdk/tree';\nimport {\n  AfterContentInit,\n  Attribute,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\n\nimport {MatTreeNodeOutlet} from './outlet';\n\nconst _MatTreeNodeMixinBase: HasTabIndexCtor & CanDisableCtor & typeof CdkTreeNode =\n    mixinTabIndex(mixinDisabled(CdkTreeNode));\n\nconst _MatNestedTreeNodeMixinBase:\n    HasTabIndexCtor & CanDisableCtor & typeof CdkNestedTreeNode =\n        mixinTabIndex(mixinDisabled(CdkNestedTreeNode));\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n  selector: 'mat-tree-node',\n  exportAs: 'matTreeNode',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'mat-tree-node'\n  },\n  providers: [{provide: CdkTreeNode, useExisting: MatTreeNode}]\n})\nexport class MatTreeNode<T> extends _MatTreeNodeMixinBase<T>\n    implements CanDisable, HasTabIndex {\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree);\n\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n}\n\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodeDef]',\n  inputs: [\n    'when: matTreeNodeDefWhen'\n  ],\n  providers: [{provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef}]\n})\nexport class MatTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n  @Input('matTreeNode') data: T;\n}\n\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\n@Directive({\n  selector: 'mat-nested-tree-node',\n  exportAs: 'matNestedTreeNode',\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.role]': 'role',\n    'class': 'mat-nested-tree-node',\n  },\n  inputs: ['disabled', 'tabIndex'],\n  providers: [\n    {provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode},\n    {provide: CdkTreeNode, useExisting: MatNestedTreeNode},\n    {provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode}\n  ]\n})\nexport class MatNestedTreeNode<T> extends _MatNestedTreeNodeMixinBase<T> implements\n    AfterContentInit, CanDisable, HasTabIndex, OnDestroy {\n  @Input('matNestedTreeNode') node: T;\n\n  /** The children node placeholder. */\n  @ContentChildren(MatTreeNodeOutlet, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  })\n  nodeOutlet: QueryList<MatTreeNodeOutlet>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              protected _differs: IterableDiffers,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree, _differs);\n\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n\n  // This is a workaround for https://github.com/angular/angular/issues/23091\n  // In aot mode, the lifecycle hooks from parent class are not called.\n  // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CdkTreeNodePadding} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodePadding]',\n  providers: [{provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding}]\n})\nexport class MatTreeNodePadding<T> extends CdkTreeNodePadding<T> {\n\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  @Input('matTreeNodePadding') level: number;\n\n  /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n  @Input('matTreeNodePaddingIndent') indent: number;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTree} from '@angular/cdk/tree';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTreeNodeOutlet} from './outlet';\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tree',\n  exportAs: 'matTree',\n  template: `<ng-container matTreeNodeOutlet></ng-container>`,\n  host: {\n    'class': 'mat-tree',\n    'role': 'tree',\n  },\n  styleUrls: ['tree.css'],\n  encapsulation: ViewEncapsulation.None,\n  // See note on CdkTree for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  providers: [{provide: CdkTree, useExisting: MatTree}]\n})\nexport class MatTree<T> extends CdkTree<T> {\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  @ViewChild(MatTreeNodeOutlet, {static: true}) _nodeOutlet: MatTreeNodeOutlet;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTreeNodeToggle} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodeToggle]',\n  providers: [{provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle}]\n})\nexport class MatTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {\n  @Input('matTreeNodeToggleRecursive') recursive: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatNestedTreeNode, MatTreeNodeDef, MatTreeNode} from './node';\nimport {MatTree} from './tree';\nimport {MatTreeNodeToggle} from './toggle';\nimport {MatTreeNodeOutlet} from './outlet';\nimport {MatTreeNodePadding} from './padding';\n\nconst MAT_TREE_DIRECTIVES = [\n  MatNestedTreeNode,\n  MatTreeNodeDef,\n  MatTreeNodePadding,\n  MatTreeNodeToggle,\n  MatTree,\n  MatTreeNode,\n  MatTreeNodeOutlet\n];\n\n@NgModule({\n  imports: [CdkTreeModule, CommonModule, MatCommonModule],\n  exports: MAT_TREE_DIRECTIVES,\n  declarations: MAT_TREE_DIRECTIVES,\n})\nexport class MatTreeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {FlatTreeControl, TreeControl} from '@angular/cdk/tree';\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class MatTreeFlattener<T, F> {\n\n  constructor(public transformFunction: (node: T, level: number) => F,\n              public getLevel: (node: F) => number,\n              public isExpandable: (node: F) => boolean,\n              public getChildren: (node: T) =>\n                  Observable<T[]> | T[] | undefined | null) {}\n\n  _flattenNode(node: T, level: number,\n               resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (childrenNodes) {\n        if (Array.isArray(childrenNodes)) {\n          this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n        } else {\n          childrenNodes.pipe(take(1)).subscribe(children => {\n            this._flattenChildren(children, level, resultNodes, parentMap);\n          });\n        }\n      }\n    }\n    return resultNodes;\n  }\n\n  _flattenChildren(children: T[], level: number,\n                   resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      let childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index != children.length - 1);\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    let resultNodes: F[] = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n    let results: F[] = [];\n    let currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nexport class MatTreeFlatDataSource<T, F> extends DataSource<F> {\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data: BehaviorSubject<T[]>;\n  get data() { return this._data.value; }\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  constructor(private _treeControl: FlatTreeControl<F>,\n              private _treeFlattener: MatTreeFlattener<T, F>,\n              initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this._treeControl.expansionModel.onChange,\n      this._flattenedData\n    ];\n    return merge(...changes).pipe(map(() => {\n      this._expandedData.next(\n        this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n      return this._expandedData.value;\n    }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class MatTreeNestedDataSource<T> extends DataSource<T> {\n  _data = new BehaviorSubject<T[]>([]);\n\n  /**\n   * Data for the nested tree\n   */\n  get data() { return this._data.value; }\n  set data(value: T[]) { this._data.next(value); }\n\n  connect(collectionViewer: CollectionViewer): Observable<T[]> {\n    return merge(...[collectionViewer.viewChange, this._data])\n      .pipe(map(() => {\n        return this.data;\n      }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n"]}