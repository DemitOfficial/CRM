{"version":3,"file":"material-datepicker.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/datepicker/datepicker-errors.ts","../../src/material/datepicker/datepicker-intl.ts","../../src/material/datepicker/calendar-body.ts","../../src/material/datepicker/month-view.ts","../../src/material/datepicker/multi-year-view.ts","../../src/material/datepicker/year-view.ts","../../src/material/datepicker/calendar.ts","../../src/material/datepicker/datepicker-animations.ts","../../src/material/datepicker/datepicker.ts","../../src/material/datepicker/datepicker-input.ts","../../src/material/datepicker/datepicker-toggle.ts","../../src/material/datepicker/datepicker-module.ts"],"names":["Subject","Injectable","EventEmitter","take","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","SPACE","DateAdapter","Optional","Directionality","ViewChild","Inject","MAT_DATE_FORMATS","ChangeDetectorRef","trigger","state","style","transition","animate","InjectionToken","overlay","Overlay","mixinColor","tslib_1.__extends","coerceBooleanProperty","input","ComponentPortal","OverlayConfig","merge","filter","ESCAPE","MatDialog","DOCUMENT","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Subscription","Validators","Directive","MAT_INPUT_VALUE_ACCESSOR","ElementRef","MatFormField","observableOf","Attribute","ContentChild","NgModule","CommonModule","MatButtonModule","MatDialogModule","OverlayModule","A11yModule","PortalModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses?: MatCalendarCellCssClasses) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: MatCalendarCell): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit {\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    if (this._selectedDate != date) {\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1]\n          .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\n        Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    let activeYear = this._dateAdapter.getYear(this._activeDate);\n    let activeOffset = activeYear % yearsPerPage;\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(activeYear - activeOffset + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView, yearsPerPage} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const firstYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n    const lastYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\n        Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView, {static: false}) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView, {static: false}) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView, {static: false}) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n\n    view.ngAfterContentInit();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<D> extends _MatDatepickerContentMixinBase\n  implements AfterViewInit, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar, {static: false}) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDatepicker<D> implements OnDestroy, CanColor {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<MatDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: MatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<MatDatepickerContent<D>>(MatDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats, ThemePalette} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: MatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    'aria-haspopup': 'dialog',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(value: MatDatepicker<D>) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  private _value: D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      this._validatorOnChange();\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': '-1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepicker<D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon, {static: false}) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button', {static: false}) _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {\n  MatDatepicker,\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n"]}