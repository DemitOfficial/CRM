{"version":3,"file":"paginator.es5.js","sources":["../../../src/material/paginator/paginator-intl.ts","../../../src/material/paginator/paginator.ts","../../../src/material/paginator/paginator-module.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n@Injectable({providedIn: 'root'})\nexport class MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the page size selector. */\n  itemsPerPageLabel: string = 'Items per page:';\n\n  /** A label for the button that increments the current page. */\n  nextPageLabel: string = 'Next page';\n\n  /** A label for the button that decrements the current page. */\n  previousPageLabel: string = 'Previous page';\n\n  /** A label for the button that moves to the first page. */\n  firstPageLabel: string = 'First page';\n\n  /** A label for the button that moves to the last page. */\n  lastPageLabel: string = 'Last page';\n\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n}\n\n/** @docs-private */\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n\n/** @docs-private */\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatPaginatorIntl} from './paginator-intl';\nimport {\n  HasInitialized,\n  HasInitializedCtor,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisableCtor,\n  CanDisable,\n} from '@angular/material/core';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n// Boilerplate for applying mixins to MatPaginator.\n/** @docs-private */\nclass MatPaginatorBase {}\nconst _MatPaginatorBase: CanDisableCtor & HasInitializedCtor & typeof MatPaginatorBase =\n    mixinDisabled(mixinInitialized(MatPaginatorBase));\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-paginator',\n  exportAs: 'matPaginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatPaginator extends _MatPaginatorBase implements OnInit, OnDestroy, CanDisable,\n  HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number { return this._pageIndex; }\n  set pageIndex(value: number) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number { return this._length; }\n  set length(value: number) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number { return this._pageSize; }\n  set pageSize(value: number) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\n  set showFirstLastButtons(value: boolean) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  constructor(public _intl: MatPaginatorIntl,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex++;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex--;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatPaginator} from './paginator';\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n  ],\n  exports: [MatPaginator],\n  declarations: [MatPaginator],\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\n})\nexport class MatPaginatorModule {}\n"]}