{"version":3,"file":"stepper.es5.js","sources":["../../../src/material/stepper/step-label.ts","../../../src/material/stepper/stepper-intl.ts","../../../src/material/stepper/step-header.ts","../../../src/material/stepper/stepper-animations.ts","../../../src/material/stepper/stepper-icon.ts","../../../src/material/stepper/stepper.ts","../../../src/material/stepper/stepper-button.ts","../../../src/material/stepper/stepper-module.ts"],"names":["tslib_1.__extends","state"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel, {static: false}) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n"]}