{"version":3,"file":"form-field.es5.js","sources":["../../../src/material/form-field/error.ts","../../../src/material/form-field/form-field-animations.ts","../../../src/material/form-field/form-field-control.ts","../../../src/material/form-field/form-field-errors.ts","../../../src/material/form-field/hint.ts","../../../src/material/form-field/label.ts","../../../src/material/form-field/placeholder.ts","../../../src/material/form-field/prefix.ts","../../../src/material/form-field/suffix.ts","../../../src/material/form-field/form-field.ts","../../../src/material/form-field/form-field-module.ts"],"names":["nextUniqueId","tslib_1.__extends"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Single error message to be shown underneath the form field. */\n@Directive({\n  selector: 'mat-error',\n  host: {\n    'class': 'mat-error',\n    'role': 'alert',\n    '[attr.id]': 'id',\n  }\n})\nexport class MatError {\n  @Input() id: string = `mat-error-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nexport const matFormFieldAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    // TODO(mmalerba): Use angular animations for label animation as well.\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {NgControl} from '@angular/forms';\n\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nexport abstract class MatFormFieldControl<T> {\n  /** The value of the control. */\n  value: T | null;\n\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n   * needs to run change detection.\n   */\n  readonly stateChanges: Observable<void>;\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  readonly placeholder: string;\n\n  /** Gets the NgControl for this control. */\n  readonly ngControl: NgControl | null;\n\n  /** Whether the control is focused. */\n  readonly focused: boolean;\n\n  /** Whether the control is empty. */\n  readonly empty: boolean;\n\n  /** Whether the `MatFormField` label should try to float. */\n  readonly shouldLabelFloat: boolean;\n\n  /** Whether the control is required. */\n  readonly required: boolean;\n\n  /** Whether the control is disabled. */\n  readonly disabled: boolean;\n\n  /** Whether the control is in an error state. */\n  readonly errorState: boolean;\n\n  /**\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `mat-form-field-type-{{controlType}}` to its root element.\n   */\n  readonly controlType?: string;\n\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  readonly autofilled?: boolean;\n\n  /** Sets the list of element IDs that currently describe this control. */\n  abstract setDescribedByIds(ids: string[]): void;\n\n  /** Handles a click on the control's container. */\n  abstract onContainerClick(event: MouseEvent): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatFormFieldPlaceholderConflictError(): Error {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n\n/** @docs-private */\nexport function getMatFormFieldDuplicatedHintError(align: string): Error {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n\n/** @docs-private */\nexport function getMatFormFieldMissingControlError(): Error {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Hint text to be shown underneath the form field control. */\n@Directive({\n  selector: 'mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  }\n})\nexport class MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  @Input() id: string = `mat-hint-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** The floating label for a `mat-form-field`. */\n@Directive({\n  selector: 'mat-label'\n})\nexport class MatLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'mat-placeholder'\n})\nexport class MatPlaceholder {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Prefix to be placed in front of the form field. */\n@Directive({\n  selector: '[matPrefix]',\n})\nexport class MatPrefix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Suffix to be placed at the end of the form field. */\n@Directive({\n  selector: '[matSuffix]',\n})\nexport class MatSuffix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  FloatLabelType,\n  LabelOptions,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  mixinColor,\n} from '@angular/material/core';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {startWith, take, takeUntil} from 'rxjs/operators';\nimport {MatError} from './error';\nimport {matFormFieldAnimations} from './form-field-animations';\nimport {MatFormFieldControl} from './form-field-control';\nimport {\n  getMatFormFieldDuplicatedHintError,\n  getMatFormFieldMissingControlError,\n  getMatFormFieldPlaceholderConflictError,\n} from './form-field-errors';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\nimport {Platform} from '@angular/cdk/platform';\nimport {NgControl} from '@angular/forms';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n\n\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase: CanColorCtor & typeof MatFormFieldBase =\n    mixinColor(MatFormFieldBase, 'primary');\n\n/** Possible appearance styles for the form field. */\nexport type MatFormFieldAppearance = 'legacy' | 'standard' | 'fill' | 'outline';\n\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n */\nexport interface MatFormFieldDefaultOptions {\n  appearance?: MatFormFieldAppearance;\n}\n\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nexport const MAT_FORM_FIELD_DEFAULT_OPTIONS =\n    new InjectionToken<MatFormFieldDefaultOptions>('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n\n\n/** Container for form controls that applies Material Design styling and behavior. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-form-field',\n  exportAs: 'matFormField',\n  templateUrl: 'form-field.html',\n  // MatInput is a directive and can't have styles, so we need to include its styles here\n  // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n  // big deal for people who aren't using MatInput.\n  styleUrls: [\n    'form-field.css',\n    'form-field-fill.css',\n    'form-field-input.css',\n    'form-field-legacy.css',\n    'form-field-outline.css',\n    'form-field-standard.css',\n  ],\n  animations: [matFormFieldAnimations.transitionMessages],\n  host: {\n    'class': 'mat-form-field',\n    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n    '[class.mat-form-field-invalid]': '_control.errorState',\n    '[class.mat-form-field-can-float]': '_canLabelFloat',\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n    '[class.mat-form-field-disabled]': '_control.disabled',\n    '[class.mat-form-field-autofilled]': '_control.autofilled',\n    '[class.mat-focused]': '_control.focused',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '[class._mat-animation-noopable]': '!_animationsEnabled',\n  },\n  inputs: ['color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatFormField extends _MatFormFieldMixinBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy, CanColor {\n  private _labelOptions: LabelOptions;\n\n  /**\n   * Whether the outline gap needs to be calculated\n   * immediately on the next change detection run.\n   */\n  private _outlineGapCalculationNeededImmediately = false;\n\n  /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n  private _outlineGapCalculationNeededOnStable = false;\n\n  private _destroyed = new Subject<void>();\n\n  /** The form-field appearance style. */\n  @Input()\n  get appearance(): MatFormFieldAppearance { return this._appearance; }\n  set appearance(value: MatFormFieldAppearance) {\n    const oldValue = this._appearance;\n\n    this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  _appearance: MatFormFieldAppearance;\n\n  /** Whether the required marker should be hidden. */\n  @Input()\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\n  set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  private _hideRequiredMarker: boolean;\n\n  /** Override for the logic that disables the label animation in certain cases. */\n  private _showAlwaysAnimate = false;\n\n  /** Whether the floating label should always float or not. */\n  get _shouldAlwaysFloat(): boolean {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n\n  /** Whether the label can float or not. */\n  get _canLabelFloat(): boolean { return this.floatLabel !== 'never'; }\n\n  /** State of the mat-hint and mat-error animations. */\n  _subscriptAnimationState: string = '';\n\n  /** Text for the form field hint. */\n  @Input()\n  get hintLabel(): string { return this._hintLabel; }\n  set hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  private _hintLabel = '';\n\n  // Unique id for the hint label.\n  _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\n\n  // Unique id for the internal form field label.\n  _labelId = `mat-form-field-label-${nextUniqueId++}`;\n\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   */\n  @Input()\n  get floatLabel(): FloatLabelType {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  set floatLabel(value: FloatLabelType) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._labelOptions.float || 'auto';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _floatLabel: FloatLabelType;\n\n  /** Whether the Angular animations are enabled. */\n  _animationsEnabled: boolean;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ViewChild('underline', {static: false}) underlineRef: ElementRef;\n\n  @ViewChild('connectionContainer', {static: true}) _connectionContainerRef: ElementRef;\n  @ViewChild('inputContainer', {static: false}) _inputContainerRef: ElementRef;\n  @ViewChild('label', {static: false}) private _label: ElementRef;\n\n  @ContentChild(MatFormFieldControl, {static: false}) _controlNonStatic: MatFormFieldControl<any>;\n  @ContentChild(MatFormFieldControl, {static: true}) _controlStatic: MatFormFieldControl<any>;\n  get _control() {\n    // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n    // and ViewEngine. We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  private _explicitFormFieldControl: MatFormFieldControl<any>;\n\n  @ContentChild(MatLabel, {static: false}) _labelChildNonStatic: MatLabel;\n  @ContentChild(MatLabel, {static: true}) _labelChildStatic: MatLabel;\n  get _labelChild() {\n    return this._labelChildNonStatic || this._labelChildStatic;\n  }\n\n  @ContentChild(MatPlaceholder, {static: false}) _placeholderChild: MatPlaceholder;\n  @ContentChildren(MatError) _errorChildren: QueryList<MatError>;\n  @ContentChildren(MatHint) _hintChildren: QueryList<MatHint>;\n  @ContentChildren(MatPrefix) _prefixChildren: QueryList<MatPrefix>;\n  @ContentChildren(MatSuffix) _suffixChildren: QueryList<MatSuffix>;\n\n  constructor(\n      public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef,\n      @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions,\n      @Optional() private _dir: Directionality,\n      @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) private _defaults:\n          MatFormFieldDefaultOptions, private _platform: Platform, private _ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) _animationMode: string) {\n    super(_elementRef);\n\n    this._labelOptions = labelOptions ? labelOptions : {};\n    this.floatLabel = this._labelOptions.float || 'auto';\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n  }\n\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._connectionContainerRef || this._elementRef;\n  }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    const control = this._control;\n\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith(null!)).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this.updateOutlineGap());\n    }\n  }\n\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\n  _shouldForward(prop: keyof NgControl): boolean {\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n\n  _hasLabel() {\n    return !!this._labelChild;\n  }\n\n  _shouldLabelFloat() {\n    return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n  }\n\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() ||\n        this._hasLabel() && !this._shouldLabelFloat();\n  }\n\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages(): 'error' | 'hint' {\n    return (this._errorChildren && this._errorChildren.length > 0 &&\n        this._control.errorState) ? 'error' : 'hint';\n  }\n\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel(): void {\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled) {\n        this._showAlwaysAnimate = true;\n\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   */\n  private _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n\n  /** Does any extra processing that is required when handling the hints. */\n  private _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   */\n  private _validateHints() {\n    if (this._hintChildren) {\n      let startHint: MatHint;\n      let endHint: MatHint;\n      this._hintChildren.forEach((hint: MatHint) => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  private _syncDescribedByIds() {\n    if (this._control) {\n      let ids: string[] = [];\n\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'end') : null;\n\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids = this._errorChildren.map(error => error.id);\n      }\n\n      this._control.setDescribedByIds(ids);\n    }\n  }\n\n  /** Throws an error if the form field's control is missing. */\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   */\n  updateOutlineGap() {\n    const labelEl = this._label ? this._label.nativeElement : null;\n\n    if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n        !labelEl.textContent.trim()) {\n      return;\n    }\n\n    if (!this._platform.isBrowser) {\n      // getBoundingClientRect isn't available on the server.\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (!document.documentElement!.contains(this._elementRef.nativeElement)) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n\n    let startWidth = 0;\n    let gapWidth = 0;\n\n    const container = this._connectionContainerRef.nativeElement;\n    const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n    const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n    if (this._label && this._label.nativeElement.children.length) {\n      const containerRect = container.getBoundingClientRect();\n\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be reclaculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n\n      const containerStart = this._getStartEnd(containerRect);\n      const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n      let labelWidth = 0;\n\n      for (const child of labelEl.children) {\n        labelWidth += child.offsetWidth;\n      }\n      startWidth = labelStart - containerStart - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n\n    for (let i = 0; i < startEls.length; i++) {\n      startEls.item(i).style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls.item(i).style.width = `${gapWidth}px`;\n    }\n\n    this._outlineGapCalculationNeededOnStable =\n        this._outlineGapCalculationNeededImmediately = false;\n  }\n\n  /** Gets the start end of the rect considering the current directionality. */\n  private _getStartEnd(rect: ClientRect): number {\n    return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {MatError} from './error';\nimport {MatFormField} from './form-field';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\n\n\n@NgModule({\n  declarations: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n  imports: [\n    CommonModule,\n    ObserversModule,\n  ],\n  exports: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class MatFormFieldModule {}\n"]}