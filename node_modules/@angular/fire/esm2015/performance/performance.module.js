/**
 * @fileoverview added by tsickle
 * Generated from: performance.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Optional } from '@angular/core';
import { AngularFirePerformance } from './performance';
import { PerformanceMonitoringService } from './performance.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './performance';
import * as ɵngcc2 from './performance.service';
export class AngularFirePerformanceModule {
    /**
     * @param {?} perf
     * @param {?} _
     */
    constructor(perf, _) {
        // call anything here to get perf loading
        // tslint:disable-next-line:no-unused-expression
        perf.dataCollectionEnabled.then((/**
         * @return {?}
         */
        () => { }));
    }
}
AngularFirePerformanceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFirePerformanceModule });
AngularFirePerformanceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFirePerformanceModule_Factory(t) { return new (t || AngularFirePerformanceModule)(ɵngcc0.ɵɵinject(ɵngcc1.AngularFirePerformance), ɵngcc0.ɵɵinject(ɵngcc2.PerformanceMonitoringService, 8)); }, providers: [AngularFirePerformance] });
/** @nocollapse */
AngularFirePerformanceModule.ctorParameters = () => [
    { type: AngularFirePerformance },
    { type: PerformanceMonitoringService, decorators: [{ type: Optional }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFirePerformanceModule, [{
        type: NgModule,
        args: [{
                providers: [AngularFirePerformance]
            }]
    }], function () { return [{ type: ɵngcc1.AngularFirePerformance }, { type: ɵngcc2.PerformanceMonitoringService, decorators: [{
                type: Optional
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWFuY2UubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi93b3Jrc3BhY2Uvc3JjL3BlcmZvcm1hbmNlL3BlcmZvcm1hbmNlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQUtyRSxNQUFNLE9BQU8sNEJBQTRCO0FBQ3pDO0FBQVE7QUFDUTtBQUNkO0FBQVEsSUFGUixZQUNFLElBQTRCLEVBQ2hCLENBQStCO0FBQzVDLFFBQ0MseUNBQXlDO0FBQzdDLFFBQUksZ0RBQWdEO0FBQ3BELFFBQUksSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUk7QUFBTTtBQUc5QjtBQUFZLFFBSGEsR0FBRyxFQUFFLEdBQUUsQ0FBQyxFQUFDLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBQ0g7d0RBWkMsUUFBUSxTQUFDLGtCQUNSLFNBQVM7Q0FBRSxDQUFFLHNCQUFzQixDQUFFLGNBQ3RDLHNSQUNJO0FBQUM7QUFBbUI7QUFFTCxZQVJYLHNCQUFzQjtBQUFJLFlBQzFCLDRCQUE0Qix1QkFRaEMsUUFBUTtBQUFNOzs7Ozs7OztrQ0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmd1bGFyRmlyZVBlcmZvcm1hbmNlIH0gZnJvbSAnLi9wZXJmb3JtYW5jZSc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZU1vbml0b3JpbmdTZXJ2aWNlIH0gZnJvbSAnLi9wZXJmb3JtYW5jZS5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbIEFuZ3VsYXJGaXJlUGVyZm9ybWFuY2UgXVxufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyRmlyZVBlcmZvcm1hbmNlTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcGVyZjogQW5ndWxhckZpcmVQZXJmb3JtYW5jZSxcbiAgICBAT3B0aW9uYWwoKSBfOiBQZXJmb3JtYW5jZU1vbml0b3JpbmdTZXJ2aWNlXG4gICkge1xuICAgIC8vIGNhbGwgYW55dGhpbmcgaGVyZSB0byBnZXQgcGVyZiBsb2FkaW5nXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVudXNlZC1leHByZXNzaW9uXG4gICAgcGVyZi5kYXRhQ29sbGVjdGlvbkVuYWJsZWQudGhlbigoKSA9PiB7fSk7XG4gIH1cbn1cbiJdfQ==