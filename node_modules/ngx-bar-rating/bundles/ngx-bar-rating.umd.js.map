{"version":3,"file":"ngx-bar-rating.umd.js","sources":["../../../projects/ngx-bar-rating/src/lib/bar-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.pipe.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.module.ts","../../../projects/ngx-bar-rating/src/ngx-bar-rating.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","EventEmitter","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","Pipe","NgModule","CommonModule","FormsModule"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, Validator, NG_VALIDATORS, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\n/** This allows support [(ngModel)] and ngControl. */\nconst RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BarRating),\n  multi: true\n};\n\n/** This allows control required validation. */\nconst RATING_VALUE_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BarRating),\n  multi: true,\n};\n\n@Component({\n  selector: 'bar-rating',\n  templateUrl: './bar-rating.html',\n  styleUrls: ['./bar-rating.scss'],\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarRating implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  contexts: { fraction: boolean, selected: boolean, active: boolean, click: (e) => void, enter: () => void }[] = [];\n  nextRate: number;\n  disabled: boolean;\n\n  /** Current rating. Can be a decimal value like 3.14 */\n  @Input() rate;\n\n  /** Maximal rating that can be given using this widget. */\n  @Input() max = 5;\n\n  /** A flag indicating if rating can be updated. */\n  @Input() readOnly = false;\n\n  /** Set the theme */\n  @Input() theme = 'default';\n\n  /** Show rating title */\n  @Input() showText = false;\n\n  /** Replace rate value with a title */\n  @Input() titles = [];\n\n  /** A flag indicating if rating is required for form validation. */\n  @Input() required = false;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.rate) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({ length: this.max }, (context, i) => ({\n      selected: false,\n      fraction: false,\n      active: false,\n      click: (e) => this.handleClick(e, i + 1),\n      enter: () => this.handleEnter(i + 1)\n    }));\n\n    this.updateState(this.rate);\n  }\n\n  update(newRate: number, internalChange = true): void {\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this.updateState(this.rate);\n  }\n\n  /** Reset rate value */\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this.updateState(this.rate);\n  }\n\n  private updateState(nextValue): void {\n    /** Set rate value as text */\n    this.nextRate = nextValue - 1;\n    /** Set the rating */\n    this.contexts = Array.from({ length: this.max }, (context, index) => ({\n      selected: index + 1 <= nextValue,\n      fraction: (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5,\n      active: false,\n      click: (e) => this.handleClick(e, index),\n      enter: () => this.handleEnter(index)\n    }));\n  }\n\n  private handleClick(e, value): void {\n    /** (NOT TESTED) Remove 300ms click delay on touch devices */\n    e.preventDefault();\n    e.stopPropagation();\n    this.update(value + 1);\n  }\n\n  private handleEnter(index): void {\n    if (!this.disabled && !this.readOnly) {\n      /** Add selected class for rating hover */\n      this.contexts.map((context, i) => {\n        context.active = i <= index;\n        context.fraction = false;\n        context.selected = false;\n      });\n      this.nextRate = index;\n      this.hover.emit(index);\n    }\n  }\n\n  /** This is the initial value set to the component */\n  writeValue(value: number): void {\n    this.update(value, false);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  validate(c: FormControl): { required: boolean } | null {\n    return (this.required && !c.value) ? { required: true } : null;\n  }\n\n  onChange = (_: any) => {\n  };\n  onTouched = () => {\n  };\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rateTitle'\n})\nexport class BarRatingPipe implements PipeTransform {\n\n  transform(value: number = 0, titles?: any): string {\n    /** Initialize value with 0 in case of undefined */\n    return titles[value] || value + 1;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BarRating } from './bar-rating';\nimport { BarRatingPipe } from './bar-rating.pipe';\n\n@NgModule({\n  declarations: [BarRating, BarRatingPipe],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [BarRating]\n})\nexport class BarRatingModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BarRatingPipe as ɵa} from './lib/bar-rating.pipe';"]}