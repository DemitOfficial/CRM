{"version":3,"file":"ngx-notification-msg.js","sources":["ng://ngx-notification-msg/lib/ngx-notification-msg.component.ts","ng://ngx-notification-msg/lib/ngx-notification-msg.service.ts","ng://ngx-notification-msg/lib/ngx-notification-msg.module.ts"],"sourcesContent":["import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'ngx-notification-msg',\n    templateUrl: './ngx-notification-msg.html',\n    styleUrls: ['./ngx-notification-msg.less']\n})\nexport class NgxNotificationMsgComponent implements OnInit, AfterViewInit {\n    private static readonly DELAY_ON_CLICK = 400;\n\n    @Input() status: NgxNotificationStatusMsg = NgxNotificationStatusMsg.NONE;\n    @Input() direction: NgxNotificationDirection = NgxNotificationDirection.TOP;\n    @Input() displayProgressBar = true;\n    @Input() displayIcon = true;\n    @Input() header: string;\n\n    @Input()\n    set messages(messages: string[]) {\n        this.msgs = [...messages];\n    }\n\n    @Input() delay = 3000;\n    @Input() closeable = true;\n    @Input() index: number;\n\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n\n    componentState: NgxNotificationMsgComponentState = NgxNotificationMsgComponentState.CLOSE;\n    componentStates = NgxNotificationMsgComponentState;\n    statusToClass = {\n        [NgxNotificationStatusMsg.NONE]: '',\n        [NgxNotificationStatusMsg.INFO]: '#0067FF',\n        [NgxNotificationStatusMsg.FAILURE]: '#FE355A',\n        [NgxNotificationStatusMsg.SUCCESS]: '#00CC69'\n    };\n    msgs: string[] = [];\n\n    private readonly NONE = 'NONE';\n    private closeTimeout;\n    private destroyTimeout;\n    private referencePointTimestamp;\n    private mouseEnterTimestamp;\n\n    constructor(private readonly cd: ChangeDetectorRef,\n                private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.OPEN;\n            this.cd.markForCheck();\n        });\n    }\n\n    isNotificationMsgOpened(): boolean {\n        return this.componentState === this.componentStates.OPEN;\n    }\n\n    isProgressBarDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayProgressBar;\n    }\n\n    isIconDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayIcon;\n    }\n\n    getPosition(): INgxNotificationPosition {\n        return {\n            ...this.getDefaultPosition(),\n            ...(this.componentState === this.componentStates.OPEN && this.getDynamicPosition())\n        };\n    }\n\n    mouseEnter(): void {\n        this.mouseEnterTimestamp = performance.now();\n\n        clearTimeout(this.closeTimeout);\n        clearTimeout(this.destroyTimeout);\n    }\n\n    mouseLeave(): void {\n        const timestampGap = this.mouseEnterTimestamp - this.referencePointTimestamp;\n\n        this.autoSelfDestroy(this.delay - timestampGap);\n        this.referencePointTimestamp = performance.now() - timestampGap;\n    }\n\n    close(): void {\n        this.componentState = NgxNotificationMsgComponentState.CLOSE;\n\n        setTimeout(() => {\n            this.destroy.emit();\n        }, NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n\n    private init(): void {\n        this.referencePointTimestamp = performance.now();\n        this.initTheme();\n        this.autoSelfDestroy(this.delay);\n    }\n\n    private initTheme(): void {\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-delay', `${this.delay}ms`);\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-color', this.statusToClass[this.status]);\n    }\n\n    private getDefaultPosition(): INgxNotificationPosition {\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {top: '0', right: '50%', transform: `translate(50%, -100%)`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {top: '0', right: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {top: '0', left: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.BOTTOM:\n                return {bottom: '0', right: '50%', transform: `translateX(50%)`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {bottom: '0', right: '20px', transform: `translateY(100%)`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {bottom: '0', left: '20px', transform: `translateY(100%)`};\n        }\n    }\n\n    private getDynamicPosition(): INgxNotificationPosition {\n        const top = `calc(${100 * this.index}% + ${20 * (this.index + 1)}px)`;\n        const bottom = `calc(${-100 * (this.index)}% + ${-20 * (this.index + 1)}px)`;\n\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {transform: `translate(50%, ${top})`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.BOTTOM:\n                return {transform: `translate(50%, ${bottom})`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {transform: `translateY(${bottom})`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {transform: `translateY(${bottom})`};\n        }\n    }\n\n    private autoSelfDestroy(delay: number): void {\n        this.closeTimeout = setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.CLOSE;\n            this.cd.markForCheck();\n        }, delay);\n\n        this.destroyTimeout = setTimeout(() => {\n            this.destroy.emit();\n        }, delay + NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n}\n\ninterface INgxNotificationPosition {\n    top?: string;\n    bottom?: string;\n    left?: string;\n    right?: string;\n    transform: string;\n}\n\nexport enum NgxNotificationMsgComponentState {\n    CLOSE = 'CLOSE',\n    OPEN = 'OPEN'\n}\n\nexport enum NgxNotificationStatusMsg {\n    SUCCESS = 'SUCCESS',\n    FAILURE = 'FAILURE',\n    INFO = 'INFO',\n    NONE = 'NONE'\n}\n\nexport enum NgxNotificationDirection {\n    TOP = 'TOP',\n    TOP_RIGHT = 'TOP_RIGHT',\n    TOP_LEFT = 'TOP_LEFT',\n    BOTTOM = 'BOTTOM',\n    BOTTOM_RIGHT = 'BOTTOM_RIGHT',\n    BOTTOM_LEFT = 'BOTTOM_LEFT'\n}\n\nexport interface INgxNotificationMsgConfig {\n    status?: NgxNotificationStatusMsg;\n    direction?: NgxNotificationDirection;\n    header?: string;\n    messages: string[];\n    delay?: number;\n    displayIcon?: boolean;\n    displayProgressBar?: boolean;\n    closeable?: boolean;\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector} from '@angular/core';\nimport {INgxNotificationMsgConfig, NgxNotificationMsgComponent} from './ngx-notification-msg.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxNotificationMsgService {\n\n    private readonly defaultContainer = document.querySelector('body');\n    private readonly containerToChildComponentsRef = new Map<Element, ChildComponentRef[]>();\n\n    constructor(private readonly componentFactoryResolver: ComponentFactoryResolver,\n                private readonly appRef: ApplicationRef,\n                private readonly injector: Injector) {\n    }\n\n    private static appendChildComponentRef(componentFactoryResolver: ComponentFactoryResolver,\n                                           appRef: ApplicationRef,\n                                           injector: Injector,\n                                           container: Element): ChildComponentRef {\n        const childComponentRef = componentFactoryResolver\n            .resolveComponentFactory(NgxNotificationMsgComponent)\n            .create(injector);\n        const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        appRef.attachView(childComponentRef.hostView);\n        container.appendChild(childDomElem);\n\n        return childComponentRef;\n    }\n\n    private static attachConfig(inputsConfig: INgxNotificationMsgConfig, componentRef): void {\n        Object.keys(inputsConfig).forEach(key => {\n            componentRef.instance[key] = inputsConfig[key];\n        });\n    }\n\n    private static addChildComponentRef(container: Element,\n                                        containerToChildComponentsRef: ContainerToComponentsRef,\n                                        childComponentRef: ChildComponentRef): void {\n        if (containerToChildComponentsRef.has(container)) {\n            containerToChildComponentsRef.get(container).push(childComponentRef);\n        } else {\n            containerToChildComponentsRef.set(container, [childComponentRef]);\n        }\n    }\n\n    private static subscribeToComponentDestroyEvent(appRef: ApplicationRef,\n                                                    containerToChildComponentsRef: ContainerToComponentsRef,\n                                                    componentRef: ChildComponentRef): void {\n        const sub = componentRef.instance.destroy.subscribe(() => {\n            sub.unsubscribe();\n            NgxNotificationMsgService.destroy(appRef, componentRef);\n            NgxNotificationMsgService.removeChildComponentRef(containerToChildComponentsRef, componentRef);\n            NgxNotificationMsgService.updateComponentsIndexesOnDestroy(containerToChildComponentsRef);\n        });\n    }\n\n    private static destroy(appRef: ApplicationRef, componentRef: ChildComponentRef): void {\n        appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n    private static updateComponentsIndexesOnDestroy(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length - 1;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = total--;\n            });\n        });\n    }\n\n    private static removeChildComponentRef(containerToChildComponentsRef: ContainerToComponentsRef, componentRef: ChildComponentRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            containerToChildComponentsRef.set(key, [...containerToChildComponentsRef.get(key).filter(_ => _ !== componentRef)]);\n        });\n    }\n\n    private static updateComponentsIndexesOnOpen(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = --total;\n            });\n        });\n    }\n\n    open(inputsConfig: INgxNotificationMsgConfig, element?: Element): void {\n        const container = element ? element : this.defaultContainer;\n        const childComponentRef = NgxNotificationMsgService.appendChildComponentRef(\n            this.componentFactoryResolver,\n            this.appRef,\n            this.injector,\n            container\n        );\n\n        NgxNotificationMsgService.attachConfig(inputsConfig, childComponentRef);\n        NgxNotificationMsgService.addChildComponentRef(container, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.subscribeToComponentDestroyEvent(this.appRef, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.updateComponentsIndexesOnOpen(this.containerToChildComponentsRef);\n    }\n}\n\ntype ChildComponentRef = ComponentRef<NgxNotificationMsgComponent>;\ntype ContainerToComponentsRef = Map<Element, ChildComponentRef[]>;\n","import {NgModule} from '@angular/core';\nimport {NgxNotificationMsgComponent} from './ngx-notification-msg.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    entryComponents: [NgxNotificationMsgComponent],\n    declarations: [NgxNotificationMsgComponent],\n    imports: [CommonModule],\n    exports: [NgxNotificationMsgComponent]\n})\nexport class NgxNotificationMsgModule {\n}\n"],"names":[],"mappings":"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"}