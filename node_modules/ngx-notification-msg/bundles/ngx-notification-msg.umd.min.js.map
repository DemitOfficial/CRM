{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-notification-msg/lib/ngx-notification-msg.component.ts","ng://ngx-notification-msg/lib/ngx-notification-msg.service.ts","ng://ngx-notification-msg/lib/ngx-notification-msg.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","NgxNotificationMsgComponent","cd","element","status","NgxNotificationStatusMsg","NONE","direction","NgxNotificationDirection","TOP","displayProgressBar","displayIcon","delay","closeable","destroy","EventEmitter","componentState","NgxNotificationMsgComponentState","CLOSE","componentStates","statusToClass","_a","INFO","FAILURE","SUCCESS","msgs","defineProperty","messages","ngOnInit","init","ngAfterViewInit","_this","setTimeout","OPEN","markForCheck","isNotificationMsgOpened","isProgressBarDisplayed","isIconDisplayed","getPosition","getDefaultPosition","getDynamicPosition","mouseEnter","mouseEnterTimestamp","performance","now","clearTimeout","closeTimeout","destroyTimeout","mouseLeave","timestampGap","referencePointTimestamp","autoSelfDestroy","close","emit","DELAY_ON_CLICK","initTheme","nativeElement","style","setProperty","top","right","transform","TOP_RIGHT","TOP_LEFT","left","BOTTOM","bottom","BOTTOM_RIGHT","BOTTOM_LEFT","index","Component","args","selector","template","ChangeDetectorRef","ElementRef","Input","Output","NgxNotificationMsgService","componentFactoryResolver","appRef","injector","defaultContainer","document","querySelector","containerToChildComponentsRef","Map","appendChildComponentRef","container","childComponentRef","resolveComponentFactory","create","childDomElem","rootNodes","attachView","hostView","appendChild","attachConfig","inputsConfig","componentRef","keys","forEach","key","instance","addChildComponentRef","has","get","set","subscribeToComponentDestroyEvent","sub","subscribe","unsubscribe","removeChildComponentRef","updateComponentsIndexesOnDestroy","detachView","total","filter","_","updateComponentsIndexesOnOpen","open","Injectable","providedIn","ComponentFactoryResolver","ApplicationRef","Injector","NgxNotificationMsgModule","NgModule","entryComponents","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'ngx-notification-msg',\n    templateUrl: './ngx-notification-msg.html',\n    styleUrls: ['./ngx-notification-msg.less']\n})\nexport class NgxNotificationMsgComponent implements OnInit, AfterViewInit {\n    private static readonly DELAY_ON_CLICK = 400;\n\n    @Input() status: NgxNotificationStatusMsg = NgxNotificationStatusMsg.NONE;\n    @Input() direction: NgxNotificationDirection = NgxNotificationDirection.TOP;\n    @Input() displayProgressBar = true;\n    @Input() displayIcon = true;\n    @Input() header: string;\n\n    @Input()\n    set messages(messages: string[]) {\n        this.msgs = [...messages];\n    }\n\n    @Input() delay = 3000;\n    @Input() closeable = true;\n    @Input() index: number;\n\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n\n    componentState: NgxNotificationMsgComponentState = NgxNotificationMsgComponentState.CLOSE;\n    componentStates = NgxNotificationMsgComponentState;\n    statusToClass = {\n        [NgxNotificationStatusMsg.NONE]: '',\n        [NgxNotificationStatusMsg.INFO]: '#0067FF',\n        [NgxNotificationStatusMsg.FAILURE]: '#FE355A',\n        [NgxNotificationStatusMsg.SUCCESS]: '#00CC69'\n    };\n    msgs: string[] = [];\n\n    private readonly NONE = 'NONE';\n    private closeTimeout;\n    private destroyTimeout;\n    private referencePointTimestamp;\n    private mouseEnterTimestamp;\n\n    constructor(private readonly cd: ChangeDetectorRef,\n                private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.OPEN;\n            this.cd.markForCheck();\n        });\n    }\n\n    isNotificationMsgOpened(): boolean {\n        return this.componentState === this.componentStates.OPEN;\n    }\n\n    isProgressBarDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayProgressBar;\n    }\n\n    isIconDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayIcon;\n    }\n\n    getPosition(): INgxNotificationPosition {\n        return {\n            ...this.getDefaultPosition(),\n            ...(this.componentState === this.componentStates.OPEN && this.getDynamicPosition())\n        };\n    }\n\n    mouseEnter(): void {\n        this.mouseEnterTimestamp = performance.now();\n\n        clearTimeout(this.closeTimeout);\n        clearTimeout(this.destroyTimeout);\n    }\n\n    mouseLeave(): void {\n        const timestampGap = this.mouseEnterTimestamp - this.referencePointTimestamp;\n\n        this.autoSelfDestroy(this.delay - timestampGap);\n        this.referencePointTimestamp = performance.now() - timestampGap;\n    }\n\n    close(): void {\n        this.componentState = NgxNotificationMsgComponentState.CLOSE;\n\n        setTimeout(() => {\n            this.destroy.emit();\n        }, NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n\n    private init(): void {\n        this.referencePointTimestamp = performance.now();\n        this.initTheme();\n        this.autoSelfDestroy(this.delay);\n    }\n\n    private initTheme(): void {\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-delay', `${this.delay}ms`);\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-color', this.statusToClass[this.status]);\n    }\n\n    private getDefaultPosition(): INgxNotificationPosition {\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {top: '0', right: '50%', transform: `translate(50%, -100%)`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {top: '0', right: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {top: '0', left: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.BOTTOM:\n                return {bottom: '0', right: '50%', transform: `translateX(50%)`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {bottom: '0', right: '20px', transform: `translateY(100%)`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {bottom: '0', left: '20px', transform: `translateY(100%)`};\n        }\n    }\n\n    private getDynamicPosition(): INgxNotificationPosition {\n        const top = `calc(${100 * this.index}% + ${20 * (this.index + 1)}px)`;\n        const bottom = `calc(${-100 * (this.index)}% + ${-20 * (this.index + 1)}px)`;\n\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {transform: `translate(50%, ${top})`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.BOTTOM:\n                return {transform: `translate(50%, ${bottom})`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {transform: `translateY(${bottom})`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {transform: `translateY(${bottom})`};\n        }\n    }\n\n    private autoSelfDestroy(delay: number): void {\n        this.closeTimeout = setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.CLOSE;\n            this.cd.markForCheck();\n        }, delay);\n\n        this.destroyTimeout = setTimeout(() => {\n            this.destroy.emit();\n        }, delay + NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n}\n\ninterface INgxNotificationPosition {\n    top?: string;\n    bottom?: string;\n    left?: string;\n    right?: string;\n    transform: string;\n}\n\nexport enum NgxNotificationMsgComponentState {\n    CLOSE = 'CLOSE',\n    OPEN = 'OPEN'\n}\n\nexport enum NgxNotificationStatusMsg {\n    SUCCESS = 'SUCCESS',\n    FAILURE = 'FAILURE',\n    INFO = 'INFO',\n    NONE = 'NONE'\n}\n\nexport enum NgxNotificationDirection {\n    TOP = 'TOP',\n    TOP_RIGHT = 'TOP_RIGHT',\n    TOP_LEFT = 'TOP_LEFT',\n    BOTTOM = 'BOTTOM',\n    BOTTOM_RIGHT = 'BOTTOM_RIGHT',\n    BOTTOM_LEFT = 'BOTTOM_LEFT'\n}\n\nexport interface INgxNotificationMsgConfig {\n    status?: NgxNotificationStatusMsg;\n    direction?: NgxNotificationDirection;\n    header?: string;\n    messages: string[];\n    delay?: number;\n    displayIcon?: boolean;\n    displayProgressBar?: boolean;\n    closeable?: boolean;\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector} from '@angular/core';\nimport {INgxNotificationMsgConfig, NgxNotificationMsgComponent} from './ngx-notification-msg.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxNotificationMsgService {\n\n    private readonly defaultContainer = document.querySelector('body');\n    private readonly containerToChildComponentsRef = new Map<Element, ChildComponentRef[]>();\n\n    constructor(private readonly componentFactoryResolver: ComponentFactoryResolver,\n                private readonly appRef: ApplicationRef,\n                private readonly injector: Injector) {\n    }\n\n    private static appendChildComponentRef(componentFactoryResolver: ComponentFactoryResolver,\n                                           appRef: ApplicationRef,\n                                           injector: Injector,\n                                           container: Element): ChildComponentRef {\n        const childComponentRef = componentFactoryResolver\n            .resolveComponentFactory(NgxNotificationMsgComponent)\n            .create(injector);\n        const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        appRef.attachView(childComponentRef.hostView);\n        container.appendChild(childDomElem);\n\n        return childComponentRef;\n    }\n\n    private static attachConfig(inputsConfig: INgxNotificationMsgConfig, componentRef): void {\n        Object.keys(inputsConfig).forEach(key => {\n            componentRef.instance[key] = inputsConfig[key];\n        });\n    }\n\n    private static addChildComponentRef(container: Element,\n                                        containerToChildComponentsRef: ContainerToComponentsRef,\n                                        childComponentRef: ChildComponentRef): void {\n        if (containerToChildComponentsRef.has(container)) {\n            containerToChildComponentsRef.get(container).push(childComponentRef);\n        } else {\n            containerToChildComponentsRef.set(container, [childComponentRef]);\n        }\n    }\n\n    private static subscribeToComponentDestroyEvent(appRef: ApplicationRef,\n                                                    containerToChildComponentsRef: ContainerToComponentsRef,\n                                                    componentRef: ChildComponentRef): void {\n        const sub = componentRef.instance.destroy.subscribe(() => {\n            sub.unsubscribe();\n            NgxNotificationMsgService.destroy(appRef, componentRef);\n            NgxNotificationMsgService.removeChildComponentRef(containerToChildComponentsRef, componentRef);\n            NgxNotificationMsgService.updateComponentsIndexesOnDestroy(containerToChildComponentsRef);\n        });\n    }\n\n    private static destroy(appRef: ApplicationRef, componentRef: ChildComponentRef): void {\n        appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n    private static updateComponentsIndexesOnDestroy(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length - 1;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = total--;\n            });\n        });\n    }\n\n    private static removeChildComponentRef(containerToChildComponentsRef: ContainerToComponentsRef, componentRef: ChildComponentRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            containerToChildComponentsRef.set(key, [...containerToChildComponentsRef.get(key).filter(_ => _ !== componentRef)]);\n        });\n    }\n\n    private static updateComponentsIndexesOnOpen(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = --total;\n            });\n        });\n    }\n\n    open(inputsConfig: INgxNotificationMsgConfig, element?: Element): void {\n        const container = element ? element : this.defaultContainer;\n        const childComponentRef = NgxNotificationMsgService.appendChildComponentRef(\n            this.componentFactoryResolver,\n            this.appRef,\n            this.injector,\n            container\n        );\n\n        NgxNotificationMsgService.attachConfig(inputsConfig, childComponentRef);\n        NgxNotificationMsgService.addChildComponentRef(container, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.subscribeToComponentDestroyEvent(this.appRef, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.updateComponentsIndexesOnOpen(this.containerToChildComponentsRef);\n    }\n}\n\ntype ChildComponentRef = ComponentRef<NgxNotificationMsgComponent>;\ntype ContainerToComponentsRef = Map<Element, ChildComponentRef[]>;\n","import {NgModule} from '@angular/core';\nimport {NgxNotificationMsgComponent} from './ngx-notification-msg.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    entryComponents: [NgxNotificationMsgComponent],\n    declarations: [NgxNotificationMsgComponent],\n    imports: [CommonModule],\n    exports: [NgxNotificationMsgComponent]\n})\nexport class NgxNotificationMsgModule {\n}\n"]}