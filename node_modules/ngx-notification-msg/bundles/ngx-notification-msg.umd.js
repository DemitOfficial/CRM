(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-notification-msg', ['@angular/core','@angular/common','exports', '@angular/core', '@angular/common'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global['ngx-notification-msg'] = {}, global.ng.core, global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,exports, core, common) { 
function NgxNotificationMsgComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg");
    ɵngcc0.ɵɵelement(2, "use");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("href", ctx_r0.statusToClass[ctx_r0.status], null, "xlink");
} }
function NgxNotificationMsgComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.msgs, " ");
} }
function NgxNotificationMsgComponent_div_6_ul_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵelementStart(1, "li");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var msg_r5 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(msg_r5);
} }
function NgxNotificationMsgComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵtemplate(1, NgxNotificationMsgComponent_div_6_ul_1_Template, 3, 1, "ul", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.msgs);
} }
function NgxNotificationMsgComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function NgxNotificationMsgComponent_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.close(); });
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg");
    ɵngcc0.ɵɵelement(2, "use");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("href", "#clear", null, "xlink");
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxNotificationMsgComponent = /** @class */ (function () {
        function NgxNotificationMsgComponent(cd, element) {
            var _a;
            this.cd = cd;
            this.element = element;
            this.status = NgxNotificationStatusMsg.NONE;
            this.direction = NgxNotificationDirection.TOP;
            this.displayProgressBar = true;
            this.displayIcon = true;
            this.delay = 3000;
            this.closeable = true;
            this.destroy = new core.EventEmitter();
            this.componentState = NgxNotificationMsgComponentState.CLOSE;
            this.componentStates = NgxNotificationMsgComponentState;
            this.statusToClass = (_a = {},
                _a[NgxNotificationStatusMsg.NONE] = '',
                _a[NgxNotificationStatusMsg.INFO] = '#0067FF',
                _a[NgxNotificationStatusMsg.FAILURE] = '#FE355A',
                _a[NgxNotificationStatusMsg.SUCCESS] = '#00CC69',
                _a);
            this.msgs = [];
            this.NONE = 'NONE';
        }
        Object.defineProperty(NgxNotificationMsgComponent.prototype, "messages", {
            set: /**
             * @param {?} messages
             * @return {?}
             */
            function (messages) {
                this.msgs = __spread(messages);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.init();
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.componentState = NgxNotificationMsgComponentState.OPEN;
                _this.cd.markForCheck();
            }));
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.isNotificationMsgOpened = /**
         * @return {?}
         */
        function () {
            return this.componentState === this.componentStates.OPEN;
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.isProgressBarDisplayed = /**
         * @return {?}
         */
        function () {
            return this.status !== this.NONE && this.displayProgressBar;
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.isIconDisplayed = /**
         * @return {?}
         */
        function () {
            return this.status !== this.NONE && this.displayIcon;
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.getPosition = /**
         * @return {?}
         */
        function () {
            return __assign({}, this.getDefaultPosition(), (this.componentState === this.componentStates.OPEN && this.getDynamicPosition()));
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.mouseEnter = /**
         * @return {?}
         */
        function () {
            this.mouseEnterTimestamp = performance.now();
            clearTimeout(this.closeTimeout);
            clearTimeout(this.destroyTimeout);
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.mouseLeave = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var timestampGap = this.mouseEnterTimestamp - this.referencePointTimestamp;
            this.autoSelfDestroy(this.delay - timestampGap);
            this.referencePointTimestamp = performance.now() - timestampGap;
        };
        /**
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.close = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.componentState = NgxNotificationMsgComponentState.CLOSE;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.destroy.emit();
            }), NgxNotificationMsgComponent.DELAY_ON_CLICK);
        };
        /**
         * @private
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.init = /**
         * @private
         * @return {?}
         */
        function () {
            this.referencePointTimestamp = performance.now();
            this.initTheme();
            this.autoSelfDestroy(this.delay);
        };
        /**
         * @private
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.initTheme = /**
         * @private
         * @return {?}
         */
        function () {
            this.element.nativeElement.style.setProperty('--ngx-notification-msg-delay', this.delay + "ms");
            this.element.nativeElement.style.setProperty('--ngx-notification-msg-color', this.statusToClass[this.status]);
        };
        /**
         * @private
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.getDefaultPosition = /**
         * @private
         * @return {?}
         */
        function () {
            switch (this.direction) {
                case NgxNotificationDirection.TOP:
                    return { top: '0', right: '50%', transform: "translate(50%, -100%)" };
                case NgxNotificationDirection.TOP_RIGHT:
                    return { top: '0', right: '20px', transform: "translateY(-100%)" };
                case NgxNotificationDirection.TOP_LEFT:
                    return { top: '0', left: '20px', transform: "translateY(-100%)" };
                case NgxNotificationDirection.BOTTOM:
                    return { bottom: '0', right: '50%', transform: "translateX(50%)" };
                case NgxNotificationDirection.BOTTOM_RIGHT:
                    return { bottom: '0', right: '20px', transform: "translateY(100%)" };
                case NgxNotificationDirection.BOTTOM_LEFT:
                    return { bottom: '0', left: '20px', transform: "translateY(100%)" };
            }
        };
        /**
         * @private
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.getDynamicPosition = /**
         * @private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var top = "calc(" + 100 * this.index + "% + " + 20 * (this.index + 1) + "px)";
            /** @type {?} */
            var bottom = "calc(" + -100 * (this.index) + "% + " + -20 * (this.index + 1) + "px)";
            switch (this.direction) {
                case NgxNotificationDirection.TOP:
                    return { transform: "translate(50%, " + top + ")" };
                case NgxNotificationDirection.TOP_RIGHT:
                    return { transform: "translateY(" + top + ")" };
                case NgxNotificationDirection.TOP_LEFT:
                    return { transform: "translateY(" + top + ")" };
                case NgxNotificationDirection.BOTTOM:
                    return { transform: "translate(50%, " + bottom + ")" };
                case NgxNotificationDirection.BOTTOM_RIGHT:
                    return { transform: "translateY(" + bottom + ")" };
                case NgxNotificationDirection.BOTTOM_LEFT:
                    return { transform: "translateY(" + bottom + ")" };
            }
        };
        /**
         * @private
         * @param {?} delay
         * @return {?}
         */
        NgxNotificationMsgComponent.prototype.autoSelfDestroy = /**
         * @private
         * @param {?} delay
         * @return {?}
         */
        function (delay) {
            var _this = this;
            this.closeTimeout = setTimeout((/**
             * @return {?}
             */
            function () {
                _this.componentState = NgxNotificationMsgComponentState.CLOSE;
                _this.cd.markForCheck();
            }), delay);
            this.destroyTimeout = setTimeout((/**
             * @return {?}
             */
            function () {
                _this.destroy.emit();
            }), delay + NgxNotificationMsgComponent.DELAY_ON_CLICK);
        };
        NgxNotificationMsgComponent.DELAY_ON_CLICK = 400;
        /** @nocollapse */
        NgxNotificationMsgComponent.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef },
            { type: core.ElementRef }
        ]; };
        NgxNotificationMsgComponent.propDecorators = {
            status: [{ type: core.Input }],
            direction: [{ type: core.Input }],
            displayProgressBar: [{ type: core.Input }],
            displayIcon: [{ type: core.Input }],
            header: [{ type: core.Input }],
            messages: [{ type: core.Input }],
            delay: [{ type: core.Input }],
            closeable: [{ type: core.Input }],
            index: [{ type: core.Input }],
            destroy: [{ type: core.Output }]
        };
NgxNotificationMsgComponent.ɵfac = function NgxNotificationMsgComponent_Factory(t) { return new (t || NgxNotificationMsgComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NgxNotificationMsgComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxNotificationMsgComponent, selectors: [["ngx-notification-msg"]], inputs: { status: "status", direction: "direction", displayProgressBar: "displayProgressBar", displayIcon: "displayIcon", delay: "delay", closeable: "closeable", messages: "messages", header: "header", index: "index" }, outputs: { destroy: "destroy" }, decls: 20, vars: 10, consts: [[1, "ngx_notification-msg", 3, "ngStyle", "mouseenter", "mouseleave"], ["class", "ngx_notification-msg-icon-wrapper", 4, "ngIf"], [1, "ngx_notification-msg-content"], [1, "ngx_notification-msg-header"], ["class", "ngx_notification-msg-body", 4, "ngIf"], ["class", "ngx_notification-msg-close-button", 3, "click", 4, "ngIf"], ["display", "none"], ["width", "24", "height", "24", "viewBox", "0 0 32 32", "id", "00CC69"], ["d", "M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M23.6,9.6 L13,20.2 L8.8,16 L7.4,17.4 L13,23 L25,11 L23.6,9.6 Z"], ["width", "24", "height", "24", "viewBox", "0 0 32 32", "id", "FE355A"], ["d", "M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M21.59,9 L16,14.59 L10.41,9 L9,10.41 L14.59,16 L9,21.59 L10.41,23 L16,17.41 L21.59,23 L23,21.59 L17.41,16 L23,10.41 L21.59,9 Z"], ["width", "24", "height", "24", "viewBox", "0 0 32 32", "id", "0067FF"], ["d", "M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M17,12 L15,12 L15,24 L17,24 L17,12 Z M17,8 L15,8 L15,10 L17,10 L17,8 Z"], ["viewBox", "0 0 24 24", "id", "clear"], ["d", "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"], [1, "ngx_notification-msg-icon-wrapper"], [1, "ngx_notification-msg-body"], [4, "ngFor", "ngForOf"], [1, "ngx_notification-msg-close-button", 3, "click"]], template: function NgxNotificationMsgComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("mouseenter", function NgxNotificationMsgComponent_Template_div_mouseenter_0_listener() { return ctx.mouseEnter(); })("mouseleave", function NgxNotificationMsgComponent_Template_div_mouseleave_0_listener() { return ctx.mouseLeave(); });
        ɵngcc0.ɵɵtemplate(1, NgxNotificationMsgComponent_div_1_Template, 3, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, NgxNotificationMsgComponent_div_5_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵtemplate(6, NgxNotificationMsgComponent_div_6_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵtemplate(7, NgxNotificationMsgComponent_button_7_Template, 3, 1, "button", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(8, "svg", 6);
        ɵngcc0.ɵɵelementStart(9, "symbol", 7);
        ɵngcc0.ɵɵelement(10, "path", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "svg", 6);
        ɵngcc0.ɵɵelementStart(12, "symbol", 9);
        ɵngcc0.ɵɵelement(13, "path", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "svg", 6);
        ɵngcc0.ɵɵelementStart(15, "symbol", 11);
        ɵngcc0.ɵɵelement(16, "path", 12);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "svg", 6);
        ɵngcc0.ɵɵelementStart(18, "symbol", 13);
        ɵngcc0.ɵɵelement(19, "path", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ngx_notification-msg-opened", ctx.isNotificationMsgOpened())("ngx_notification-msg-progress-bar", ctx.isProgressBarDisplayed());
        ɵngcc0.ɵɵproperty("ngStyle", ctx.getPosition());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isIconDisplayed());
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.header, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.msgs == null ? null : ctx.msgs.length) === 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.msgs == null ? null : ctx.msgs.length) > 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.closeable);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgForOf], styles: ["[_ngcontent-%COMP%]:root{--ngx-notification-msg-delay:0;--ngx-notification-msg-color:none}.ngx_notification-msg[_ngcontent-%COMP%]{position:absolute;display:-webkit-box;display:flex;opacity:0;box-shadow:0 10px 19px 10px rgba(0,0,0,.04);border-radius:4px;background-color:#fff;font-family:Raleway,Arial,sans-serif;-webkit-transition:.2s cubic-bezier(.75,0,.75,.9);transition:.2s cubic-bezier(.75,0,.75,.9)}.ngx_notification-msg[_ngcontent-%COMP%]:hover::after{-webkit-animation-play-state:paused;animation-play-state:paused}.ngx_notification-msg-opened[_ngcontent-%COMP%]{opacity:1;-webkit-transition:250ms cubic-bezier(.2,0,.25,1);transition:250ms cubic-bezier(.2,0,.25,1)}.ngx_notification-msg-progress-bar[_ngcontent-%COMP%]::before{content:'';height:4px;width:100%;position:absolute;bottom:0;opacity:.3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;background-color:var(--ngx-notification-msg-color)}.ngx_notification-msg-progress-bar[_ngcontent-%COMP%]::after{content:'';height:4px;position:absolute;bottom:0;border-bottom-left-radius:4px;background-color:var(--ngx-notification-msg-color);-webkit-animation:change-width var(--ngx-notification-msg-delay);animation:change-width var(--ngx-notification-msg-delay)}.ngx_notification-msg-icon-wrapper[_ngcontent-%COMP%]{width:81px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;justify-items:center;position:relative}.ngx_notification-msg-icon-wrapper[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{height:24px;width:24px;color:var(--ngx-notification-msg-color);fill:currentColor;-webkit-transform:scale(1.167);transform:scale(1.167)}.ngx_notification-msg-icon-wrapper[_ngcontent-%COMP%]::after{content:'';height:calc(100% - 40px);width:1px;position:absolute;right:0;border-bottom-left-radius:4px;border-top-left-radius:4px;background-color:#f1f1f2}.ngx_notification-msg-content[_ngcontent-%COMP%]{padding:20px 30px}.ngx_notification-msg-header[_ngcontent-%COMP%]{line-height:1.5;font-size:15px;font-weight:700;color:#565154}.ngx_notification-msg-body[_ngcontent-%COMP%]{line-height:1.5;font-size:13px;color:#93908c}.ngx_notification-msg-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin:8px 0;padding:0 0 0 30px}.ngx_notification-msg-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]:last-of-type{margin:8px 0 0}.ngx_notification-msg-close-button[_ngcontent-%COMP%]{height:16px;width:16px;position:absolute;top:8px;right:8px;outline:0;padding:0;font-size:11px;font-weight:600;background-color:transparent;cursor:pointer;box-sizing:content-box;border-radius:50%;border:0}.ngx_notification-msg-close-button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{color:#717075;fill:currentColor;height:inherit;width:inherit}.ngx_notification-msg-close-button[_ngcontent-%COMP%]:active{-webkit-animation:.1s close-click;animation:.1s close-click}@-webkit-keyframes change-width{0%{width:100%;border-bottom-right-radius:4px}100%{width:0;border-bottom-right-radius:0}}@keyframes change-width{0%{width:100%;border-bottom-right-radius:4px}100%{width:0;border-bottom-right-radius:0}}@-webkit-keyframes close-click{0%{border:0 solid #f1f1f2}100%{border:10px solid #f1f1f2;margin-top:-10px;margin-right:-10px}}@keyframes close-click{0%{border:0 solid #f1f1f2}100%{border:10px solid #f1f1f2;margin-top:-10px;margin-right:-10px}}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxNotificationMsgComponent, [{
        type: core.Component,
        args: [{
                selector: 'ngx-notification-msg',
                template: "<div class=\"ngx_notification-msg\"\n     [class.ngx_notification-msg-opened]=\"isNotificationMsgOpened()\"\n     [class.ngx_notification-msg-progress-bar]=\"isProgressBarDisplayed()\"\n     [ngStyle]=\"getPosition()\"\n     (mouseenter)=\"mouseEnter()\"\n     (mouseleave)=\"mouseLeave()\">\n    <div class=\"ngx_notification-msg-icon-wrapper\"\n         *ngIf=\"isIconDisplayed()\">\n        <svg>\n            <use [attr.xlink:href]=\"statusToClass[status]\"/>\n        </svg>\n    </div>\n    <div class=\"ngx_notification-msg-content\">\n        <div class=\"ngx_notification-msg-header\">\n            {{header}}\n        </div>\n        <div class=\"ngx_notification-msg-body\"\n             *ngIf=\"msgs?.length === 1\">\n            {{msgs}}\n        </div>\n        <div class=\"ngx_notification-msg-body\"\n             *ngIf=\"msgs?.length > 1\">\n            <ul *ngFor=\"let msg of msgs\">\n                <li>{{msg}}</li>\n            </ul>\n        </div>\n        <button class=\"ngx_notification-msg-close-button\"\n                *ngIf=\"closeable\"\n                (click)=\"close()\">\n            <svg>\n                <use [attr.xlink:href]=\"'#clear'\"/>\n            </svg>\n        </button>\n    </div>\n\n    <svg display=\"none\">\n        <symbol width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" id=\"00CC69\">\n            <path d=\"M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M23.6,9.6 L13,20.2 L8.8,16 L7.4,17.4 L13,23 L25,11 L23.6,9.6 Z\"/>\n        </symbol>\n    </svg>\n\n    <svg display=\"none\">\n        <symbol width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" id=\"FE355A\">\n            <path d=\"M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M21.59,9 L16,14.59 L10.41,9 L9,10.41 L14.59,16 L9,21.59 L10.41,23 L16,17.41 L21.59,23 L23,21.59 L17.41,16 L23,10.41 L21.59,9 Z\"/>\n        </symbol>\n    </svg>\n\n    <svg display=\"none\">\n        <symbol width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" id=\"0067FF\">\n            <path d=\"M16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 Z M17,12 L15,12 L15,24 L17,24 L17,12 Z M17,8 L15,8 L15,10 L17,10 L17,8 Z\"/>\n        </symbol>\n    </svg>\n\n    <svg display=\"none\">\n        <symbol viewBox=\"0 0 24 24\" id=\"clear\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n        </symbol>\n    </svg>\n</div>\n",
                styles: [":root{--ngx-notification-msg-delay:0;--ngx-notification-msg-color:none}.ngx_notification-msg{position:absolute;display:-webkit-box;display:flex;opacity:0;box-shadow:0 10px 19px 10px rgba(0,0,0,.04);border-radius:4px;background-color:#fff;font-family:Raleway,Arial,sans-serif;-webkit-transition:.2s cubic-bezier(.75,0,.75,.9);transition:.2s cubic-bezier(.75,0,.75,.9)}.ngx_notification-msg:hover::after{-webkit-animation-play-state:paused;animation-play-state:paused}.ngx_notification-msg-opened{opacity:1;-webkit-transition:250ms cubic-bezier(.2,0,.25,1);transition:250ms cubic-bezier(.2,0,.25,1)}.ngx_notification-msg-progress-bar::before{content:'';height:4px;width:100%;position:absolute;bottom:0;opacity:.3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;background-color:var(--ngx-notification-msg-color)}.ngx_notification-msg-progress-bar::after{content:'';height:4px;position:absolute;bottom:0;border-bottom-left-radius:4px;background-color:var(--ngx-notification-msg-color);-webkit-animation:change-width var(--ngx-notification-msg-delay);animation:change-width var(--ngx-notification-msg-delay)}.ngx_notification-msg-icon-wrapper{width:81px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;justify-items:center;position:relative}.ngx_notification-msg-icon-wrapper svg{height:24px;width:24px;color:var(--ngx-notification-msg-color);fill:currentColor;-webkit-transform:scale(1.167);transform:scale(1.167)}.ngx_notification-msg-icon-wrapper::after{content:'';height:calc(100% - 40px);width:1px;position:absolute;right:0;border-bottom-left-radius:4px;border-top-left-radius:4px;background-color:#f1f1f2}.ngx_notification-msg-content{padding:20px 30px}.ngx_notification-msg-header{line-height:1.5;font-size:15px;font-weight:700;color:#565154}.ngx_notification-msg-body{line-height:1.5;font-size:13px;color:#93908c}.ngx_notification-msg-body ul{margin:8px 0;padding:0 0 0 30px}.ngx_notification-msg-body ul:last-of-type{margin:8px 0 0}.ngx_notification-msg-close-button{height:16px;width:16px;position:absolute;top:8px;right:8px;outline:0;padding:0;font-size:11px;font-weight:600;background-color:transparent;cursor:pointer;box-sizing:content-box;border-radius:50%;border:0}.ngx_notification-msg-close-button svg{color:#717075;fill:currentColor;height:inherit;width:inherit}.ngx_notification-msg-close-button:active{-webkit-animation:.1s close-click;animation:.1s close-click}@-webkit-keyframes change-width{0%{width:100%;border-bottom-right-radius:4px}100%{width:0;border-bottom-right-radius:0}}@keyframes change-width{0%{width:100%;border-bottom-right-radius:4px}100%{width:0;border-bottom-right-radius:0}}@-webkit-keyframes close-click{0%{border:0 solid #f1f1f2}100%{border:10px solid #f1f1f2;margin-top:-10px;margin-right:-10px}}@keyframes close-click{0%{border:0 solid #f1f1f2}100%{border:10px solid #f1f1f2;margin-top:-10px;margin-right:-10px}}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { status: [{
            type: core.Input
        }], direction: [{
            type: core.Input
        }], displayProgressBar: [{
            type: core.Input
        }], displayIcon: [{
            type: core.Input
        }], delay: [{
            type: core.Input
        }], closeable: [{
            type: core.Input
        }], destroy: [{
            type: core.Output
        }], messages: [{
            type: core.Input
        }], header: [{
            type: core.Input
        }], index: [{
            type: core.Input
        }] }); })();
        return NgxNotificationMsgComponent;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.DELAY_ON_CLICK;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.status;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.direction;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.displayProgressBar;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.displayIcon;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.header;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.delay;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.closeable;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.index;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.destroy;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.componentState;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.componentStates;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.statusToClass;
        /** @type {?} */
        NgxNotificationMsgComponent.prototype.msgs;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.NONE;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.closeTimeout;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.destroyTimeout;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.referencePointTimestamp;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.mouseEnterTimestamp;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.cd;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgComponent.prototype.element;
    }
    /**
     * @record
     */
    function INgxNotificationPosition() { }
    if (false) {
        /** @type {?|undefined} */
        INgxNotificationPosition.prototype.top;
        /** @type {?|undefined} */
        INgxNotificationPosition.prototype.bottom;
        /** @type {?|undefined} */
        INgxNotificationPosition.prototype.left;
        /** @type {?|undefined} */
        INgxNotificationPosition.prototype.right;
        /** @type {?} */
        INgxNotificationPosition.prototype.transform;
    }
    /** @enum {string} */
    var NgxNotificationMsgComponentState = {
        CLOSE: 'CLOSE',
        OPEN: 'OPEN',
    };
    /** @enum {string} */
    var NgxNotificationStatusMsg = {
        SUCCESS: 'SUCCESS',
        FAILURE: 'FAILURE',
        INFO: 'INFO',
        NONE: 'NONE',
    };
    /** @enum {string} */
    var NgxNotificationDirection = {
        TOP: 'TOP',
        TOP_RIGHT: 'TOP_RIGHT',
        TOP_LEFT: 'TOP_LEFT',
        BOTTOM: 'BOTTOM',
        BOTTOM_RIGHT: 'BOTTOM_RIGHT',
        BOTTOM_LEFT: 'BOTTOM_LEFT',
    };
    /**
     * @record
     */
    function INgxNotificationMsgConfig() { }
    if (false) {
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.status;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.direction;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.header;
        /** @type {?} */
        INgxNotificationMsgConfig.prototype.messages;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.delay;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.displayIcon;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.displayProgressBar;
        /** @type {?|undefined} */
        INgxNotificationMsgConfig.prototype.closeable;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxNotificationMsgService = /** @class */ (function () {
        function NgxNotificationMsgService(componentFactoryResolver, appRef, injector) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.appRef = appRef;
            this.injector = injector;
            this.defaultContainer = document.querySelector('body');
            this.containerToChildComponentsRef = new Map();
        }
        /**
         * @private
         * @param {?} componentFactoryResolver
         * @param {?} appRef
         * @param {?} injector
         * @param {?} container
         * @return {?}
         */
        NgxNotificationMsgService.appendChildComponentRef = /**
         * @private
         * @param {?} componentFactoryResolver
         * @param {?} appRef
         * @param {?} injector
         * @param {?} container
         * @return {?}
         */
        function (componentFactoryResolver, appRef, injector, container) {
            /** @type {?} */
            var childComponentRef = componentFactoryResolver
                .resolveComponentFactory(NgxNotificationMsgComponent)
                .create(injector);
            /** @type {?} */
            var childDomElem = (/** @type {?} */ (((/** @type {?} */ (childComponentRef.hostView)))
                .rootNodes[0]));
            appRef.attachView(childComponentRef.hostView);
            container.appendChild(childDomElem);
            return childComponentRef;
        };
        /**
         * @private
         * @param {?} inputsConfig
         * @param {?} componentRef
         * @return {?}
         */
        NgxNotificationMsgService.attachConfig = /**
         * @private
         * @param {?} inputsConfig
         * @param {?} componentRef
         * @return {?}
         */
        function (inputsConfig, componentRef) {
            Object.keys(inputsConfig).forEach((/**
             * @param {?} key
             * @return {?}
             */
            function (key) {
                componentRef.instance[key] = inputsConfig[key];
            }));
        };
        /**
         * @private
         * @param {?} container
         * @param {?} containerToChildComponentsRef
         * @param {?} childComponentRef
         * @return {?}
         */
        NgxNotificationMsgService.addChildComponentRef = /**
         * @private
         * @param {?} container
         * @param {?} containerToChildComponentsRef
         * @param {?} childComponentRef
         * @return {?}
         */
        function (container, containerToChildComponentsRef, childComponentRef) {
            if (containerToChildComponentsRef.has(container)) {
                containerToChildComponentsRef.get(container).push(childComponentRef);
            }
            else {
                containerToChildComponentsRef.set(container, [childComponentRef]);
            }
        };
        /**
         * @private
         * @param {?} appRef
         * @param {?} containerToChildComponentsRef
         * @param {?} componentRef
         * @return {?}
         */
        NgxNotificationMsgService.subscribeToComponentDestroyEvent = /**
         * @private
         * @param {?} appRef
         * @param {?} containerToChildComponentsRef
         * @param {?} componentRef
         * @return {?}
         */
        function (appRef, containerToChildComponentsRef, componentRef) {
            /** @type {?} */
            var sub = componentRef.instance.destroy.subscribe((/**
             * @return {?}
             */
            function () {
                sub.unsubscribe();
                NgxNotificationMsgService.destroy(appRef, componentRef);
                NgxNotificationMsgService.removeChildComponentRef(containerToChildComponentsRef, componentRef);
                NgxNotificationMsgService.updateComponentsIndexesOnDestroy(containerToChildComponentsRef);
            }));
        };
        /**
         * @private
         * @param {?} appRef
         * @param {?} componentRef
         * @return {?}
         */
        NgxNotificationMsgService.destroy = /**
         * @private
         * @param {?} appRef
         * @param {?} componentRef
         * @return {?}
         */
        function (appRef, componentRef) {
            appRef.detachView(componentRef.hostView);
            componentRef.destroy();
        };
        /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @return {?}
         */
        NgxNotificationMsgService.updateComponentsIndexesOnDestroy = /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @return {?}
         */
        function (containerToChildComponentsRef) {
            containerToChildComponentsRef.forEach((/**
             * @param {?} value
             * @param {?} key
             * @return {?}
             */
            function (value, key) {
                /** @type {?} */
                var total = containerToChildComponentsRef.get(key).length - 1;
                containerToChildComponentsRef.get(key).forEach((/**
                 * @param {?} __0
                 * @return {?}
                 */
                function (_a) {
                    var instance = _a.instance;
                    instance.index = total--;
                }));
            }));
        };
        /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @param {?} componentRef
         * @return {?}
         */
        NgxNotificationMsgService.removeChildComponentRef = /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @param {?} componentRef
         * @return {?}
         */
        function (containerToChildComponentsRef, componentRef) {
            containerToChildComponentsRef.forEach((/**
             * @param {?} value
             * @param {?} key
             * @return {?}
             */
            function (value, key) {
                containerToChildComponentsRef.set(key, __spread(containerToChildComponentsRef.get(key).filter((/**
                 * @param {?} _
                 * @return {?}
                 */
                function (_) { return _ !== componentRef; }))));
            }));
        };
        /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @return {?}
         */
        NgxNotificationMsgService.updateComponentsIndexesOnOpen = /**
         * @private
         * @param {?} containerToChildComponentsRef
         * @return {?}
         */
        function (containerToChildComponentsRef) {
            containerToChildComponentsRef.forEach((/**
             * @param {?} value
             * @param {?} key
             * @return {?}
             */
            function (value, key) {
                /** @type {?} */
                var total = containerToChildComponentsRef.get(key).length;
                containerToChildComponentsRef.get(key).forEach((/**
                 * @param {?} __0
                 * @return {?}
                 */
                function (_a) {
                    var instance = _a.instance;
                    instance.index = --total;
                }));
            }));
        };
        /**
         * @param {?} inputsConfig
         * @param {?=} element
         * @return {?}
         */
        NgxNotificationMsgService.prototype.open = /**
         * @param {?} inputsConfig
         * @param {?=} element
         * @return {?}
         */
        function (inputsConfig, element) {
            /** @type {?} */
            var container = element ? element : this.defaultContainer;
            /** @type {?} */
            var childComponentRef = NgxNotificationMsgService.appendChildComponentRef(this.componentFactoryResolver, this.appRef, this.injector, container);
            NgxNotificationMsgService.attachConfig(inputsConfig, childComponentRef);
            NgxNotificationMsgService.addChildComponentRef(container, this.containerToChildComponentsRef, childComponentRef);
            NgxNotificationMsgService.subscribeToComponentDestroyEvent(this.appRef, this.containerToChildComponentsRef, childComponentRef);
            NgxNotificationMsgService.updateComponentsIndexesOnOpen(this.containerToChildComponentsRef);
        };
        /** @nocollapse */
        NgxNotificationMsgService.ctorParameters = function () { return [
            { type: core.ComponentFactoryResolver },
            { type: core.ApplicationRef },
            { type: core.Injector }
        ]; };
        /** @nocollapse */ NgxNotificationMsgService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function NgxNotificationMsgService_Factory() { return new NgxNotificationMsgService(core.ɵɵinject(core.ComponentFactoryResolver), core.ɵɵinject(core.ApplicationRef), core.ɵɵinject(core.INJECTOR)); }, token: NgxNotificationMsgService, providedIn: "root" });
NgxNotificationMsgService.ɵfac = function NgxNotificationMsgService_Factory(t) { return new (t || NgxNotificationMsgService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
NgxNotificationMsgService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxNotificationMsgService, factory: function (t) { return NgxNotificationMsgService.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxNotificationMsgService, [{
        type: core.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }]; }, null); })();
        return NgxNotificationMsgService;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgService.prototype.defaultContainer;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgService.prototype.containerToChildComponentsRef;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgService.prototype.componentFactoryResolver;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgService.prototype.appRef;
        /**
         * @type {?}
         * @private
         */
        NgxNotificationMsgService.prototype.injector;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxNotificationMsgModule = /** @class */ (function () {
        function NgxNotificationMsgModule() {
        }
NgxNotificationMsgModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxNotificationMsgModule });
NgxNotificationMsgModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxNotificationMsgModule_Factory(t) { return new (t || NgxNotificationMsgModule)(); }, imports: [[common.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxNotificationMsgModule, { declarations: [NgxNotificationMsgComponent], imports: [ɵngcc1.CommonModule], exports: [NgxNotificationMsgComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxNotificationMsgModule, [{
        type: core.NgModule,
        args: [{
                entryComponents: [NgxNotificationMsgComponent],
                declarations: [NgxNotificationMsgComponent],
                imports: [common.CommonModule],
                exports: [NgxNotificationMsgComponent]
            }]
    }], function () { return []; }, null); })();
        return NgxNotificationMsgModule;
    }());

    exports.NgxNotificationDirection = NgxNotificationDirection;
    exports.NgxNotificationMsgComponent = NgxNotificationMsgComponent;
    exports.NgxNotificationMsgComponentState = NgxNotificationMsgComponentState;
    exports.NgxNotificationMsgModule = NgxNotificationMsgModule;
    exports.NgxNotificationMsgService = NgxNotificationMsgService;
    exports.NgxNotificationStatusMsg = NgxNotificationStatusMsg;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-notification-msg.umd.js.map