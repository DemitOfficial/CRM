{"version":3,"file":"ngx-notification-msg.js","sources":["ngx-notification-msg/lib/ngx-notification-msg.component.ts","ngx-notification-msg/lib/ngx-notification-msg.service.ts","ngx-notification-msg/lib/ngx-notification-msg.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'ngx-notification-msg',\n    templateUrl: './ngx-notification-msg.html',\n    styleUrls: ['./ngx-notification-msg.less']\n})\nexport class NgxNotificationMsgComponent implements OnInit, AfterViewInit {\n    private static readonly DELAY_ON_CLICK = 400;\n\n    @Input() status: NgxNotificationStatusMsg = NgxNotificationStatusMsg.NONE;\n    @Input() direction: NgxNotificationDirection = NgxNotificationDirection.TOP;\n    @Input() displayProgressBar = true;\n    @Input() displayIcon = true;\n    @Input() header: string;\n\n    @Input()\n    set messages(messages: string[]) {\n        this.msgs = [...messages];\n    }\n\n    @Input() delay = 3000;\n    @Input() closeable = true;\n    @Input() index: number;\n\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n\n    componentState: NgxNotificationMsgComponentState = NgxNotificationMsgComponentState.CLOSE;\n    componentStates = NgxNotificationMsgComponentState;\n    statusToClass = {\n        [NgxNotificationStatusMsg.NONE]: '',\n        [NgxNotificationStatusMsg.INFO]: '#0067FF',\n        [NgxNotificationStatusMsg.FAILURE]: '#FE355A',\n        [NgxNotificationStatusMsg.SUCCESS]: '#00CC69'\n    };\n    msgs: string[] = [];\n\n    private readonly NONE = 'NONE';\n    private closeTimeout;\n    private destroyTimeout;\n    private referencePointTimestamp;\n    private mouseEnterTimestamp;\n\n    constructor(private readonly cd: ChangeDetectorRef,\n                private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.OPEN;\n            this.cd.markForCheck();\n        });\n    }\n\n    isNotificationMsgOpened(): boolean {\n        return this.componentState === this.componentStates.OPEN;\n    }\n\n    isProgressBarDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayProgressBar;\n    }\n\n    isIconDisplayed(): boolean {\n        return this.status !== this.NONE && this.displayIcon;\n    }\n\n    getPosition(): INgxNotificationPosition {\n        return {\n            ...this.getDefaultPosition(),\n            ...(this.componentState === this.componentStates.OPEN && this.getDynamicPosition())\n        };\n    }\n\n    mouseEnter(): void {\n        this.mouseEnterTimestamp = performance.now();\n\n        clearTimeout(this.closeTimeout);\n        clearTimeout(this.destroyTimeout);\n    }\n\n    mouseLeave(): void {\n        const timestampGap = this.mouseEnterTimestamp - this.referencePointTimestamp;\n\n        this.autoSelfDestroy(this.delay - timestampGap);\n        this.referencePointTimestamp = performance.now() - timestampGap;\n    }\n\n    close(): void {\n        this.componentState = NgxNotificationMsgComponentState.CLOSE;\n\n        setTimeout(() => {\n            this.destroy.emit();\n        }, NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n\n    private init(): void {\n        this.referencePointTimestamp = performance.now();\n        this.initTheme();\n        this.autoSelfDestroy(this.delay);\n    }\n\n    private initTheme(): void {\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-delay', `${this.delay}ms`);\n        this.element.nativeElement.style.setProperty('--ngx-notification-msg-color', this.statusToClass[this.status]);\n    }\n\n    private getDefaultPosition(): INgxNotificationPosition {\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {top: '0', right: '50%', transform: `translate(50%, -100%)`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {top: '0', right: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {top: '0', left: '20px', transform: `translateY(-100%)`};\n            case NgxNotificationDirection.BOTTOM:\n                return {bottom: '0', right: '50%', transform: `translateX(50%)`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {bottom: '0', right: '20px', transform: `translateY(100%)`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {bottom: '0', left: '20px', transform: `translateY(100%)`};\n        }\n    }\n\n    private getDynamicPosition(): INgxNotificationPosition {\n        const top = `calc(${100 * this.index}% + ${20 * (this.index + 1)}px)`;\n        const bottom = `calc(${-100 * (this.index)}% + ${-20 * (this.index + 1)}px)`;\n\n        switch (this.direction) {\n            case NgxNotificationDirection.TOP:\n                return {transform: `translate(50%, ${top})`};\n            case NgxNotificationDirection.TOP_RIGHT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.TOP_LEFT:\n                return {transform: `translateY(${top})`};\n            case NgxNotificationDirection.BOTTOM:\n                return {transform: `translate(50%, ${bottom})`};\n            case NgxNotificationDirection.BOTTOM_RIGHT:\n                return {transform: `translateY(${bottom})`};\n            case NgxNotificationDirection.BOTTOM_LEFT:\n                return {transform: `translateY(${bottom})`};\n        }\n    }\n\n    private autoSelfDestroy(delay: number): void {\n        this.closeTimeout = setTimeout(() => {\n            this.componentState = NgxNotificationMsgComponentState.CLOSE;\n            this.cd.markForCheck();\n        }, delay);\n\n        this.destroyTimeout = setTimeout(() => {\n            this.destroy.emit();\n        }, delay + NgxNotificationMsgComponent.DELAY_ON_CLICK);\n    }\n}\n\ninterface INgxNotificationPosition {\n    top?: string;\n    bottom?: string;\n    left?: string;\n    right?: string;\n    transform: string;\n}\n\nexport enum NgxNotificationMsgComponentState {\n    CLOSE = 'CLOSE',\n    OPEN = 'OPEN'\n}\n\nexport enum NgxNotificationStatusMsg {\n    SUCCESS = 'SUCCESS',\n    FAILURE = 'FAILURE',\n    INFO = 'INFO',\n    NONE = 'NONE'\n}\n\nexport enum NgxNotificationDirection {\n    TOP = 'TOP',\n    TOP_RIGHT = 'TOP_RIGHT',\n    TOP_LEFT = 'TOP_LEFT',\n    BOTTOM = 'BOTTOM',\n    BOTTOM_RIGHT = 'BOTTOM_RIGHT',\n    BOTTOM_LEFT = 'BOTTOM_LEFT'\n}\n\nexport interface INgxNotificationMsgConfig {\n    status?: NgxNotificationStatusMsg;\n    direction?: NgxNotificationDirection;\n    header?: string;\n    messages: string[];\n    delay?: number;\n    displayIcon?: boolean;\n    displayProgressBar?: boolean;\n    closeable?: boolean;\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector} from '@angular/core';\nimport {INgxNotificationMsgConfig, NgxNotificationMsgComponent} from './ngx-notification-msg.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxNotificationMsgService {\n\n    private readonly defaultContainer = document.querySelector('body');\n    private readonly containerToChildComponentsRef = new Map<Element, ChildComponentRef[]>();\n\n    constructor(private readonly componentFactoryResolver: ComponentFactoryResolver,\n                private readonly appRef: ApplicationRef,\n                private readonly injector: Injector) {\n    }\n\n    private static appendChildComponentRef(componentFactoryResolver: ComponentFactoryResolver,\n                                           appRef: ApplicationRef,\n                                           injector: Injector,\n                                           container: Element): ChildComponentRef {\n        const childComponentRef = componentFactoryResolver\n            .resolveComponentFactory(NgxNotificationMsgComponent)\n            .create(injector);\n        const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        appRef.attachView(childComponentRef.hostView);\n        container.appendChild(childDomElem);\n\n        return childComponentRef;\n    }\n\n    private static attachConfig(inputsConfig: INgxNotificationMsgConfig, componentRef): void {\n        Object.keys(inputsConfig).forEach(key => {\n            componentRef.instance[key] = inputsConfig[key];\n        });\n    }\n\n    private static addChildComponentRef(container: Element,\n                                        containerToChildComponentsRef: ContainerToComponentsRef,\n                                        childComponentRef: ChildComponentRef): void {\n        if (containerToChildComponentsRef.has(container)) {\n            containerToChildComponentsRef.get(container).push(childComponentRef);\n        } else {\n            containerToChildComponentsRef.set(container, [childComponentRef]);\n        }\n    }\n\n    private static subscribeToComponentDestroyEvent(appRef: ApplicationRef,\n                                                    containerToChildComponentsRef: ContainerToComponentsRef,\n                                                    componentRef: ChildComponentRef): void {\n        const sub = componentRef.instance.destroy.subscribe(() => {\n            sub.unsubscribe();\n            NgxNotificationMsgService.destroy(appRef, componentRef);\n            NgxNotificationMsgService.removeChildComponentRef(containerToChildComponentsRef, componentRef);\n            NgxNotificationMsgService.updateComponentsIndexesOnDestroy(containerToChildComponentsRef);\n        });\n    }\n\n    private static destroy(appRef: ApplicationRef, componentRef: ChildComponentRef): void {\n        appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n    private static updateComponentsIndexesOnDestroy(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length - 1;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = total--;\n            });\n        });\n    }\n\n    private static removeChildComponentRef(containerToChildComponentsRef: ContainerToComponentsRef, componentRef: ChildComponentRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            containerToChildComponentsRef.set(key, [...containerToChildComponentsRef.get(key).filter(_ => _ !== componentRef)]);\n        });\n    }\n\n    private static updateComponentsIndexesOnOpen(containerToChildComponentsRef: ContainerToComponentsRef): void {\n        containerToChildComponentsRef.forEach((value, key) => {\n            let total = containerToChildComponentsRef.get(key).length;\n            containerToChildComponentsRef.get(key).forEach(({instance}) => {\n                instance.index = --total;\n            });\n        });\n    }\n\n    open(inputsConfig: INgxNotificationMsgConfig, element?: Element): void {\n        const container = element ? element : this.defaultContainer;\n        const childComponentRef = NgxNotificationMsgService.appendChildComponentRef(\n            this.componentFactoryResolver,\n            this.appRef,\n            this.injector,\n            container\n        );\n\n        NgxNotificationMsgService.attachConfig(inputsConfig, childComponentRef);\n        NgxNotificationMsgService.addChildComponentRef(container, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.subscribeToComponentDestroyEvent(this.appRef, this.containerToChildComponentsRef, childComponentRef);\n        NgxNotificationMsgService.updateComponentsIndexesOnOpen(this.containerToChildComponentsRef);\n    }\n}\n\ntype ChildComponentRef = ComponentRef<NgxNotificationMsgComponent>;\ntype ContainerToComponentsRef = Map<Element, ChildComponentRef[]>;\n","import {NgModule} from '@angular/core';\nimport {NgxNotificationMsgComponent} from './ngx-notification-msg.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    entryComponents: [NgxNotificationMsgComponent],\n    declarations: [NgxNotificationMsgComponent],\n    imports: [CommonModule],\n    exports: [NgxNotificationMsgComponent]\n})\nexport class NgxNotificationMsgModule {\n}\n"]}