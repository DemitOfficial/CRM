import { __decorate, __extends, __metadata } from "tslib";
import { Component, ComponentFactoryResolver, forwardRef, OnInit, ViewChild } from '@angular/core';
import { STEP_STATE } from '../../utils/enums';
import { NgWizardStep } from '../../utils/interfaces';
import { NgWizardStepContentDirective } from '../ng-wizard-step-content.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../ng-wizard-step-content.directive';

function NgWizardStepComponent_ng_template_2_Template(rf, ctx) { }
var _c0 = ["*"];
var NgWizardStepComponent = /** @class */ (function (_super) {
    __extends(NgWizardStepComponent, _super);
    function NgWizardStepComponent(componentFactoryResolver) {
        var _this = _super.call(this) || this;
        _this.componentFactoryResolver = componentFactoryResolver;
        return _this;
    }
    NgWizardStepComponent_1 = NgWizardStepComponent;
    NgWizardStepComponent.prototype.ngOnInit = function () {
        this.loadComponent();
    };
    NgWizardStepComponent.prototype.loadComponent = function () {
        if (!this.component) {
            return;
        }
        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);
        this.stepContent.viewContainerRef.clear();
        this.componentRef = this.stepContent.viewContainerRef.createComponent(componentFactory);
    };
    Object.defineProperty(NgWizardStepComponent.prototype, "isHidden", {
        get: function () {
            return this.state == STEP_STATE.hidden;
        },
        enumerable: true,
        configurable: true
    });
    var NgWizardStepComponent_1;
    NgWizardStepComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver }
    ]; };
    __decorate([
        ViewChild(NgWizardStepContentDirective, { static: true }),
        __metadata("design:type", NgWizardStepContentDirective)
    ], NgWizardStepComponent.prototype, "stepContent", void 0);
    NgWizardStepComponent = NgWizardStepComponent_1 = __decorate([ __metadata("design:paramtypes", [ComponentFactoryResolver])
    ], NgWizardStepComponent);
NgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) { return new (t || NgWizardStepComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
NgWizardStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardStepComponent, selectors: [["ng-wizard-step"]], viewQuery: function NgWizardStepComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(NgWizardStepContentDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepContent = _t.first);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: NgWizardStep, useExisting: forwardRef(function () { return NgWizardStepComponent_1; }) }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, "tab-pane", "step-content", 2, "display", "block"], ["ngWizardStepContent", ""]], template: function NgWizardStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵtemplate(2, NgWizardStepComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc1.NgWizardStepContentDirective], styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardStepComponent, [{
        type: Component,
        args: [{
                selector: 'ng-wizard-step',
                template: "<div class=\"tab-pane step-content\" style=\"display: block\">\r\n    <ng-content></ng-content>\r\n    <ng-template ngWizardStepContent></ng-template>\r\n</div>",
                providers: [
                    { provide: NgWizardStep, useExisting: forwardRef(function () { return NgWizardStepComponent_1; }) }
                ],
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { stepContent: [{
            type: ViewChild,
            args: [NgWizardStepContentDirective, { static: true }]
        }] }); })();
    return NgWizardStepComponent;
}(NgWizardStep));
export { NgWizardStepComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctd2l6YXJkLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy13aXphcmQvbGliL2NvcmUvd2l6YXJkLXN0ZXAvbmctd2l6YXJkLXN0ZXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHdCQUF3QixFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7OztBQVVuRjtBQUErRCxJQUFwQix5Q0FBWTtBQUFDLElBR3RELCtCQUNVLHdCQUFrRDtBQUM1RCxRQUZBLFlBR0UsaUJBQU8sU0FDUjtBQUNILFFBSlksOEJBQXdCLEdBQXhCLHdCQUF3QixDQUEwQjtBQUFDO0FBRzdELElBQUEsQ0FBQztBQUNILDhCQVJhLHFCQUFxQjtBQUFFLElBU2xDLHdDQUFRLEdBQVI7QUFDRCxRQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUN6QixJQUFFLENBQUM7QUFFSCxJQUFFLDZDQUFhLEdBQWI7QUFBYyxRQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO0FBQ3pCLFlBQU0sT0FBTztBQUNiLFNBQUs7QUFDTCxRQUNJLElBQUksZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLHdCQUF3QixDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRyxRQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDOUMsUUFBSSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDNUYsSUFBRSxDQUFDO0FBRUgsSUFBRSxzQkFBSSwyQ0FBUTtBQUFJLGFBQWhCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQztBQUMzQyxRQUFFLENBQUM7QUFDRjtBQUN3QjtBQUEyQixPQUZqRDtBQUNIO0FBQytCO0FBQWtFLGdCQXhCM0Qsd0JBQXdCO0FBQzdEO0FBQ0ksSUFMd0Q7QUFBYSxRQUF2RSxTQUFTLENBQUMsNEJBQTRCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7QUFBRSxrQ0FBWSw0QkFBNEI7QUFDdEcsOERBRHVHO0FBRXZHLElBSGEscUJBQXFCLGtEQVJqQyxTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsZ0JBQWdCLDNEQU9wQixrQ0FJOEIsd0JBQXdCO1lBVjVELFpBV0QsT0FMWSxxQkFBcUIsQ0EyQmpDO3lKQWpDK0MsY0FFOUM7QUFBUyxFQUFFLGtCQUNULEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBcUIsRUFBckIsQ0FBcUIsQ0FBQyxFQUFFLGNBQ2hGLG9DQUNGLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkE2QkY7QUFBQyxJQURELDRCQUFDO0FBQ0EsQ0FEQSxBQTNCRCxDQUEyQyxZQUFZLEdBMkJ0RDs7QUF4Q0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFHQSxBQUNBLEFBQUEsQUFEQSxBQUdBLEFBQUEsQUFDQSxBQUhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBUEEsQUFBQSxBQVNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQXRCQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBREEsQUFBQSxBQVJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFLQSxBQUFBLEFBSkEsQUFBQSxBQTJCQSxBQUFBLEFBQUEsQUFBQSxBQTNCQSxBQUFBLEFBQUEsQUEyQkEsQUEzQkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBmb3J3YXJkUmVmLCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTVEVQX1NUQVRFIH0gZnJvbSAnLi4vLi4vdXRpbHMvZW51bXMnO1xyXG5pbXBvcnQgeyBOZ1dpemFyZFN0ZXAgfSBmcm9tICcuLi8uLi91dGlscy9pbnRlcmZhY2VzJztcclxuaW1wb3J0IHsgTmdXaXphcmRTdGVwQ29udGVudERpcmVjdGl2ZSB9IGZyb20gJy4uL25nLXdpemFyZC1zdGVwLWNvbnRlbnQuZGlyZWN0aXZlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmctd2l6YXJkLXN0ZXAnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9uZy13aXphcmQtc3RlcC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbmctd2l6YXJkLXN0ZXAuY29tcG9uZW50LmNzcyddLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgeyBwcm92aWRlOiBOZ1dpemFyZFN0ZXAsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IE5nV2l6YXJkU3RlcENvbXBvbmVudCkgfVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nV2l6YXJkU3RlcENvbXBvbmVudCBleHRlbmRzIE5nV2l6YXJkU3RlcCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQFZpZXdDaGlsZChOZ1dpemFyZFN0ZXBDb250ZW50RGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KSBzdGVwQ29udGVudDogTmdXaXphcmRTdGVwQ29udGVudERpcmVjdGl2ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gICkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5sb2FkQ29tcG9uZW50KCk7XHJcbiAgfVxyXG5cclxuICBsb2FkQ29tcG9uZW50KCkge1xyXG4gICAgaWYgKCF0aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGNvbXBvbmVudEZhY3RvcnkgPSB0aGlzLmNvbXBvbmVudEZhY3RvcnlSZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0aGlzLmNvbXBvbmVudCk7XHJcblxyXG4gICAgdGhpcy5zdGVwQ29udGVudC52aWV3Q29udGFpbmVyUmVmLmNsZWFyKCk7XHJcbiAgICB0aGlzLmNvbXBvbmVudFJlZiA9IHRoaXMuc3RlcENvbnRlbnQudmlld0NvbnRhaW5lclJlZi5jcmVhdGVDb21wb25lbnQoY29tcG9uZW50RmFjdG9yeSk7XHJcbiAgfVxyXG5cclxuICBnZXQgaXNIaWRkZW4oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PSBTVEVQX1NUQVRFLmhpZGRlbjtcclxuICB9XHJcbn1cclxuIl19