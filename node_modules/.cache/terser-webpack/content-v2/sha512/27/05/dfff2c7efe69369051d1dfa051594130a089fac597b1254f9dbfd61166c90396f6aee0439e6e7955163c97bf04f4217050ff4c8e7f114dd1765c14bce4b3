{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{\"5eHb\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return ToastrModule}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return ToastrService});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_angular_animations__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"R0Ic\"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"XNiG\"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"jhN1\"),_angular_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(\"ofXK\");const _c0=[\"toast-component\",\"\"];function Toast_button_0_Template(rf,ctx){if(1&rf){const _r6=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵgetCurrentView\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"button\",5),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\",function(){return _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵrestoreView\"](_r6),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]().remove()}),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](1,\"span\",6),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](2,\"×\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()}}function Toast_div_1_ng_container_2_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerStart\"](0),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerEnd\"]()),2&rf){const ctx_r7=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](2);_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\"[\",ctx_r7.duplicatesCount+1,\"]\")}}function Toast_div_1_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2,Toast_div_1_ng_container_2_Template,2,1,\"ng-container\",4),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r1=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r1.options.titleClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\",ctx_r1.title),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \",ctx_r1.title,\" \"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx_r1.duplicatesCount)}}function Toast_div_2_Template(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](0,\"div\",7),2&rf){const ctx_r2=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r2.options.messageClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"innerHTML\",ctx_r2.message,_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsanitizeHtml\"])}}function Toast_div_3_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\",8),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r3=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r3.options.messageClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\",ctx_r3.message),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \",ctx_r3.message,\" \")}}function Toast_div_4_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](1,\"div\",9),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r4=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"width\",ctx_r4.width+\"%\")}}function ToastNoAnimation_button_0_Template(rf,ctx){if(1&rf){const _r6=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵgetCurrentView\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"button\",5),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\",function(){return _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵrestoreView\"](_r6),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]().remove()}),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](1,\"span\",6),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](2,\"×\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()}}function ToastNoAnimation_div_1_ng_container_2_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerStart\"](0),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerEnd\"]()),2&rf){const ctx_r7=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](2);_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\"[\",ctx_r7.duplicatesCount+1,\"]\")}}function ToastNoAnimation_div_1_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2,ToastNoAnimation_div_1_ng_container_2_Template,2,1,\"ng-container\",4),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r1=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r1.options.titleClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\",ctx_r1.title),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \",ctx_r1.title,\" \"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx_r1.duplicatesCount)}}function ToastNoAnimation_div_2_Template(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](0,\"div\",7),2&rf){const ctx_r2=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r2.options.messageClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"innerHTML\",ctx_r2.message,_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsanitizeHtml\"])}}function ToastNoAnimation_div_3_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\",8),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r3=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r3.options.messageClass),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\",ctx_r3.message),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \",ctx_r3.message,\" \")}}function ToastNoAnimation_div_4_Template(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0,\"div\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](1,\"div\",9),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]()),2&rf){const ctx_r4=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"width\",ctx_r4.width+\"%\")}}class ToastPackage{constructor(toastId,config,message,title,toastType,toastRef){this.toastId=toastId,this.config=config,this.message=message,this.title=title,this.toastType=toastType,this.toastRef=toastRef,this._onTap=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this._onAction=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this.toastRef.afterClosed().subscribe(()=>{this._onAction.complete(),this._onTap.complete()})}triggerTap(){this._onTap.next(),this.config.tapToDismiss&&this._onTap.complete()}onTap(){return this._onTap.asObservable()}triggerAction(action){this._onAction.next(action)}onAction(){return this._onAction.asObservable()}}const DefaultNoComponentGlobalConfig={maxOpened:0,autoDismiss:!1,newestOnTop:!0,preventDuplicates:!1,countDuplicates:!1,resetTimeoutOnDuplicate:!1,includeTitleDuplicates:!1,iconClasses:{error:\"toast-error\",info:\"toast-info\",success:\"toast-success\",warning:\"toast-warning\"},closeButton:!1,disableTimeOut:!1,timeOut:5e3,extendedTimeOut:1e3,enableHtml:!1,progressBar:!1,toastClass:\"ngx-toastr\",positionClass:\"toast-top-right\",titleClass:\"toast-title\",messageClass:\"toast-message\",easing:\"ease-in\",easeTime:300,tapToDismiss:!0,onActivateTick:!1,progressAnimation:\"decreasing\"},TOAST_CONFIG=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken(\"ToastConfig\");class ComponentPortal{constructor(component,injector){this.component=component,this.injector=injector}attach(host,newestOnTop){return this._attachedHost=host,host.attach(this,newestOnTop)}detach(){const host=this._attachedHost;if(host)return this._attachedHost=void 0,host.detach()}get isAttached(){return null!=this._attachedHost}setAttachedHost(host){this._attachedHost=host}}class DomPortalHost extends class{attach(portal,newestOnTop){return this._attachedPortal=portal,this.attachComponentPortal(portal,newestOnTop)}detach(){this._attachedPortal&&this._attachedPortal.setAttachedHost(),this._attachedPortal=void 0,this._disposeFn&&(this._disposeFn(),this._disposeFn=void 0)}setDisposeFn(fn){this._disposeFn=fn}}{constructor(_hostDomElement,_componentFactoryResolver,_appRef){super(),this._hostDomElement=_hostDomElement,this._componentFactoryResolver=_componentFactoryResolver,this._appRef=_appRef}attachComponentPortal(portal,newestOnTop){const componentFactory=this._componentFactoryResolver.resolveComponentFactory(portal.component);let componentRef;return componentRef=componentFactory.create(portal.injector),this._appRef.attachView(componentRef.hostView),this.setDisposeFn(()=>{this._appRef.detachView(componentRef.hostView),componentRef.destroy()}),newestOnTop?this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef),this._hostDomElement.firstChild):this._hostDomElement.appendChild(this._getComponentRootNode(componentRef)),componentRef}_getComponentRootNode(componentRef){return componentRef.hostView.rootNodes[0]}}let OverlayContainer=(()=>{class OverlayContainer{constructor(_document){this._document=_document}ngOnDestroy(){this._containerElement&&this._containerElement.parentNode&&this._containerElement.parentNode.removeChild(this._containerElement)}getContainerElement(){return this._containerElement||this._createContainer(),this._containerElement}_createContainer(){const container=this._document.createElement(\"div\");container.classList.add(\"overlay-container\"),this._document.body.appendChild(container),this._containerElement=container}}return OverlayContainer.ɵfac=function(t){return new(t||OverlayContainer)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_common__WEBPACK_IMPORTED_MODULE_4__.d))},OverlayContainer.ɵprov=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({factory:function(){return new OverlayContainer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_4__.d))},token:OverlayContainer,providedIn:\"root\"}),OverlayContainer})();class OverlayRef{constructor(_portalHost){this._portalHost=_portalHost}attach(portal,newestOnTop=!0){return this._portalHost.attach(portal,newestOnTop)}detach(){return this._portalHost.detach()}}let Overlay=(()=>{class Overlay{constructor(_overlayContainer,_componentFactoryResolver,_appRef,_document){this._overlayContainer=_overlayContainer,this._componentFactoryResolver=_componentFactoryResolver,this._appRef=_appRef,this._document=_document,this._paneElements=new Map}create(positionClass,overlayContainer){return this._createOverlayRef(this.getPaneElement(positionClass,overlayContainer))}getPaneElement(positionClass=\"\",overlayContainer){return this._paneElements.get(overlayContainer)||this._paneElements.set(overlayContainer,{}),this._paneElements.get(overlayContainer)[positionClass]||(this._paneElements.get(overlayContainer)[positionClass]=this._createPaneElement(positionClass,overlayContainer)),this._paneElements.get(overlayContainer)[positionClass]}_createPaneElement(positionClass,overlayContainer){const pane=this._document.createElement(\"div\");return pane.id=\"toast-container\",pane.classList.add(positionClass),pane.classList.add(\"toast-container\"),overlayContainer?overlayContainer.getContainerElement().appendChild(pane):this._overlayContainer.getContainerElement().appendChild(pane),pane}_createPortalHost(pane){return new DomPortalHost(pane,this._componentFactoryResolver,this._appRef)}_createOverlayRef(pane){return new OverlayRef(this._createPortalHost(pane))}}return Overlay.ɵfac=function(t){return new(t||Overlay)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](OverlayContainer),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentFactoryResolver),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ApplicationRef),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_common__WEBPACK_IMPORTED_MODULE_4__.d))},Overlay.ɵprov=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({factory:function(){return new Overlay(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(OverlayContainer),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ComponentFactoryResolver),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ApplicationRef),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_4__.d))},token:Overlay,providedIn:\"root\"}),Overlay})();class ToastRef{constructor(_overlayRef){this._overlayRef=_overlayRef,this.duplicatesCount=0,this._afterClosed=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this._activate=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this._manualClose=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this._resetTimeout=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this._countDuplicate=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a}manualClose(){this._manualClose.next(),this._manualClose.complete()}manualClosed(){return this._manualClose.asObservable()}timeoutReset(){return this._resetTimeout.asObservable()}countDuplicate(){return this._countDuplicate.asObservable()}close(){this._overlayRef.detach(),this._afterClosed.next(),this._manualClose.next(),this._afterClosed.complete(),this._manualClose.complete(),this._activate.complete(),this._resetTimeout.complete(),this._countDuplicate.complete()}afterClosed(){return this._afterClosed.asObservable()}isInactive(){return this._activate.isStopped}activate(){this._activate.next(),this._activate.complete()}afterActivate(){return this._activate.asObservable()}onDuplicate(resetTimeout,countDuplicate){resetTimeout&&this._resetTimeout.next(),countDuplicate&&this._countDuplicate.next(++this.duplicatesCount)}}class ToastInjector{constructor(_toastPackage,_parentInjector){this._toastPackage=_toastPackage,this._parentInjector=_parentInjector}get(token,notFoundValue,flags){return token===ToastPackage?this._toastPackage:this._parentInjector.get(token,notFoundValue,flags)}}let ToastrService=(()=>{class ToastrService{constructor(token,overlay,_injector,sanitizer,ngZone){this.overlay=overlay,this._injector=_injector,this.sanitizer=sanitizer,this.ngZone=ngZone,this.currentlyActive=0,this.toasts=[],this.index=0,this.toastrConfig=Object.assign(Object.assign({},token.default),token.config),token.config.iconClasses&&(this.toastrConfig.iconClasses=Object.assign(Object.assign({},token.default.iconClasses),token.config.iconClasses))}show(message,title,override={},type=\"\"){return this._preBuildNotification(type,message,title,this.applyConfig(override))}success(message,title,override={}){return this._preBuildNotification(this.toastrConfig.iconClasses.success||\"\",message,title,this.applyConfig(override))}error(message,title,override={}){return this._preBuildNotification(this.toastrConfig.iconClasses.error||\"\",message,title,this.applyConfig(override))}info(message,title,override={}){return this._preBuildNotification(this.toastrConfig.iconClasses.info||\"\",message,title,this.applyConfig(override))}warning(message,title,override={}){return this._preBuildNotification(this.toastrConfig.iconClasses.warning||\"\",message,title,this.applyConfig(override))}clear(toastId){for(const toast of this.toasts)if(void 0!==toastId){if(toast.toastId===toastId)return void toast.toastRef.manualClose()}else toast.toastRef.manualClose()}remove(toastId){const found=this._findToast(toastId);if(!found)return!1;if(found.activeToast.toastRef.close(),this.toasts.splice(found.index,1),this.currentlyActive=this.currentlyActive-1,!this.toastrConfig.maxOpened||!this.toasts.length)return!1;if(this.currentlyActive<this.toastrConfig.maxOpened&&this.toasts[this.currentlyActive]){const p=this.toasts[this.currentlyActive].toastRef;p.isInactive()||(this.currentlyActive=this.currentlyActive+1,p.activate())}return!0}findDuplicate(title=\"\",message=\"\",resetOnDuplicate,countDuplicates){const{includeTitleDuplicates:includeTitleDuplicates}=this.toastrConfig;for(const toast of this.toasts){const hasDuplicateTitle=includeTitleDuplicates&&toast.title===title;if((!includeTitleDuplicates||hasDuplicateTitle)&&toast.message===message)return toast.toastRef.onDuplicate(resetOnDuplicate,countDuplicates),toast}return null}applyConfig(override={}){return Object.assign(Object.assign({},this.toastrConfig),override)}_findToast(toastId){for(let i=0;i<this.toasts.length;i++)if(this.toasts[i].toastId===toastId)return{index:i,activeToast:this.toasts[i]};return null}_preBuildNotification(toastType,message,title,config){return config.onActivateTick?this.ngZone.run(()=>this._buildNotification(toastType,message,title,config)):this._buildNotification(toastType,message,title,config)}_buildNotification(toastType,message,title,config){if(!config.toastComponent)throw new Error(\"toastComponent required\");const duplicate=this.findDuplicate(title,message,this.toastrConfig.resetTimeoutOnDuplicate&&config.timeOut>0,this.toastrConfig.countDuplicates);if((this.toastrConfig.includeTitleDuplicates&&title||message)&&this.toastrConfig.preventDuplicates&&null!==duplicate)return duplicate;this.previousToastMessage=message;let keepInactive=!1;this.toastrConfig.maxOpened&&this.currentlyActive>=this.toastrConfig.maxOpened&&(keepInactive=!0,this.toastrConfig.autoDismiss&&this.clear(this.toasts[0].toastId));const overlayRef=this.overlay.create(config.positionClass,this.overlayContainer);this.index=this.index+1;let sanitizedMessage=message;message&&config.enableHtml&&(sanitizedMessage=this.sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.SecurityContext.HTML,message));const toastRef=new ToastRef(overlayRef),toastPackage=new ToastPackage(this.index,config,sanitizedMessage,title,toastType,toastRef),toastInjector=new ToastInjector(toastPackage,this._injector),component=new ComponentPortal(config.toastComponent,toastInjector),portal=overlayRef.attach(component,this.toastrConfig.newestOnTop);toastRef.componentInstance=portal.instance;const ins={toastId:this.index,title:title||\"\",message:message||\"\",toastRef:toastRef,onShown:toastRef.afterActivate(),onHidden:toastRef.afterClosed(),onTap:toastPackage.onTap(),onAction:toastPackage.onAction(),portal:portal};return keepInactive||(this.currentlyActive=this.currentlyActive+1,setTimeout(()=>{ins.toastRef.activate()})),this.toasts.push(ins),ins}}return ToastrService.ɵfac=function(t){return new(t||ToastrService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](TOAST_CONFIG),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](Overlay),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.b),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone))},ToastrService.ɵprov=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({factory:function(){return new ToastrService(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(TOAST_CONFIG),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(Overlay),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__.INJECTOR),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.b),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone))},token:ToastrService,providedIn:\"root\"}),ToastrService})(),Toast=(()=>{class Toast{constructor(toastrService,toastPackage,ngZone){this.toastrService=toastrService,this.toastPackage=toastPackage,this.ngZone=ngZone,this.width=-1,this.toastClasses=\"\",this.state={value:\"inactive\",params:{easeTime:this.toastPackage.config.easeTime,easing:\"ease-in\"}},this.message=toastPackage.message,this.title=toastPackage.title,this.options=toastPackage.config,this.originalTimeout=toastPackage.config.timeOut,this.toastClasses=`${toastPackage.toastType} ${toastPackage.config.toastClass}`,this.sub=toastPackage.toastRef.afterActivate().subscribe(()=>{this.activateToast()}),this.sub1=toastPackage.toastRef.manualClosed().subscribe(()=>{this.remove()}),this.sub2=toastPackage.toastRef.timeoutReset().subscribe(()=>{this.resetTimeout()}),this.sub3=toastPackage.toastRef.countDuplicate().subscribe(count=>{this.duplicatesCount=count})}get displayStyle(){if(\"inactive\"===this.state.value)return\"none\"}ngOnDestroy(){this.sub.unsubscribe(),this.sub1.unsubscribe(),this.sub2.unsubscribe(),this.sub3.unsubscribe(),clearInterval(this.intervalId),clearTimeout(this.timeout)}activateToast(){this.state=Object.assign(Object.assign({},this.state),{value:\"active\"}),!0!==this.options.disableTimeOut&&\"timeOut\"!==this.options.disableTimeOut&&this.options.timeOut&&(this.outsideTimeout(()=>this.remove(),this.options.timeOut),this.hideTime=(new Date).getTime()+this.options.timeOut,this.options.progressBar&&this.outsideInterval(()=>this.updateProgress(),10))}updateProgress(){if(0===this.width||100===this.width||!this.options.timeOut)return;const now=(new Date).getTime();this.width=(this.hideTime-now)/this.options.timeOut*100,\"increasing\"===this.options.progressAnimation&&(this.width=100-this.width),this.width<=0&&(this.width=0),this.width>=100&&(this.width=100)}resetTimeout(){clearTimeout(this.timeout),clearInterval(this.intervalId),this.state=Object.assign(Object.assign({},this.state),{value:\"active\"}),this.outsideTimeout(()=>this.remove(),this.originalTimeout),this.options.timeOut=this.originalTimeout,this.hideTime=(new Date).getTime()+(this.options.timeOut||0),this.width=-1,this.options.progressBar&&this.outsideInterval(()=>this.updateProgress(),10)}remove(){\"removed\"!==this.state.value&&(clearTimeout(this.timeout),this.state=Object.assign(Object.assign({},this.state),{value:\"removed\"}),this.outsideTimeout(()=>this.toastrService.remove(this.toastPackage.toastId),+this.toastPackage.config.easeTime))}tapToast(){\"removed\"!==this.state.value&&(this.toastPackage.triggerTap(),this.options.tapToDismiss&&this.remove())}stickAround(){\"removed\"!==this.state.value&&(clearTimeout(this.timeout),this.options.timeOut=0,this.hideTime=0,clearInterval(this.intervalId),this.width=0)}delayedHideToast(){!0!==this.options.disableTimeOut&&\"extendedTimeOut\"!==this.options.disableTimeOut&&0!==this.options.extendedTimeOut&&\"removed\"!==this.state.value&&(this.outsideTimeout(()=>this.remove(),this.options.extendedTimeOut),this.options.timeOut=this.options.extendedTimeOut,this.hideTime=(new Date).getTime()+(this.options.timeOut||0),this.width=-1,this.options.progressBar&&this.outsideInterval(()=>this.updateProgress(),10))}outsideTimeout(func,timeout){this.ngZone?this.ngZone.runOutsideAngular(()=>this.timeout=setTimeout(()=>this.runInsideAngular(func),timeout)):this.timeout=setTimeout(()=>func(),timeout)}outsideInterval(func,timeout){this.ngZone?this.ngZone.runOutsideAngular(()=>this.intervalId=setInterval(()=>this.runInsideAngular(func),timeout)):this.intervalId=setInterval(()=>func(),timeout)}runInsideAngular(func){this.ngZone?this.ngZone.run(()=>func()):func()}}return Toast.ɵfac=function(t){return new(t||Toast)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastrService),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastPackage),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone))},Toast.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineComponent\"]({type:Toast,selectors:[[\"\",\"toast-component\",\"\"]],hostVars:5,hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\",function(){return ctx.tapToast()})(\"mouseenter\",function(){return ctx.stickAround()})(\"mouseleave\",function(){return ctx.delayedHideToast()}),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsyntheticHostProperty\"](\"@flyInOut\",ctx.state),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx.toastClasses),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"display\",ctx.displayStyle))},attrs:_c0,decls:5,vars:5,consts:[[\"class\",\"toast-close-button\",\"aria-label\",\"Close\",3,\"click\",4,\"ngIf\"],[3,\"class\",4,\"ngIf\"],[\"role\",\"alertdialog\",\"aria-live\",\"polite\",3,\"class\",\"innerHTML\",4,\"ngIf\"],[\"role\",\"alertdialog\",\"aria-live\",\"polite\",3,\"class\",4,\"ngIf\"],[4,\"ngIf\"],[\"aria-label\",\"Close\",1,\"toast-close-button\",3,\"click\"],[\"aria-hidden\",\"true\"],[\"role\",\"alertdialog\",\"aria-live\",\"polite\",3,\"innerHTML\"],[\"role\",\"alertdialog\",\"aria-live\",\"polite\"],[1,\"toast-progress\"]],template:function(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](0,Toast_button_0_Template,3,0,\"button\",0),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](1,Toast_div_1_Template,3,5,\"div\",1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2,Toast_div_2_Template,1,3,\"div\",2),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](3,Toast_div_3_Template,2,4,\"div\",3),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](4,Toast_div_4_Template,2,2,\"div\",4)),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.options.closeButton),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.title),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.message&&ctx.options.enableHtml),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.message&&!ctx.options.enableHtml),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.options.progressBar))},directives:[_angular_common__WEBPACK_IMPORTED_MODULE_4__.n],encapsulation:2,data:{animation:[Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.j)(\"flyInOut\",[Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.g)(\"inactive\",Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.h)({opacity:0})),Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.g)(\"active\",Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.h)({opacity:1})),Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.g)(\"removed\",Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.h)({opacity:0})),Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.i)(\"inactive => active\",Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.e)(\"{{ easeTime }}ms {{ easing }}\")),Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.i)(\"active => removed\",Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__.e)(\"{{ easeTime }}ms {{ easing }}\"))])]}}),Toast})();const DefaultGlobalConfig=Object.assign(Object.assign({},DefaultNoComponentGlobalConfig),{toastComponent:Toast});let ToastrModule=(()=>{class ToastrModule{static forRoot(config={}){return{ngModule:ToastrModule,providers:[{provide:TOAST_CONFIG,useValue:{default:DefaultGlobalConfig,config:config}}]}}}return ToastrModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({type:ToastrModule}),ToastrModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({factory:function(t){return new(t||ToastrModule)},imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_4__.c]]}),ToastrModule})(),ToastNoAnimation=(()=>{class ToastNoAnimation{constructor(toastrService,toastPackage,appRef){this.toastrService=toastrService,this.toastPackage=toastPackage,this.appRef=appRef,this.width=-1,this.toastClasses=\"\",this.state=\"inactive\",this.message=toastPackage.message,this.title=toastPackage.title,this.options=toastPackage.config,this.originalTimeout=toastPackage.config.timeOut,this.toastClasses=`${toastPackage.toastType} ${toastPackage.config.toastClass}`,this.sub=toastPackage.toastRef.afterActivate().subscribe(()=>{this.activateToast()}),this.sub1=toastPackage.toastRef.manualClosed().subscribe(()=>{this.remove()}),this.sub2=toastPackage.toastRef.timeoutReset().subscribe(()=>{this.resetTimeout()}),this.sub3=toastPackage.toastRef.countDuplicate().subscribe(count=>{this.duplicatesCount=count})}get displayStyle(){if(\"inactive\"===this.state)return\"none\"}ngOnDestroy(){this.sub.unsubscribe(),this.sub1.unsubscribe(),this.sub2.unsubscribe(),this.sub3.unsubscribe(),clearInterval(this.intervalId),clearTimeout(this.timeout)}activateToast(){this.state=\"active\",!0!==this.options.disableTimeOut&&\"timeOut\"!==this.options.disableTimeOut&&this.options.timeOut&&(this.timeout=setTimeout(()=>{this.remove()},this.options.timeOut),this.hideTime=(new Date).getTime()+this.options.timeOut,this.options.progressBar&&(this.intervalId=setInterval(()=>this.updateProgress(),10))),this.options.onActivateTick&&this.appRef.tick()}updateProgress(){if(0===this.width||100===this.width||!this.options.timeOut)return;const now=(new Date).getTime();this.width=(this.hideTime-now)/this.options.timeOut*100,\"increasing\"===this.options.progressAnimation&&(this.width=100-this.width),this.width<=0&&(this.width=0),this.width>=100&&(this.width=100)}resetTimeout(){clearTimeout(this.timeout),clearInterval(this.intervalId),this.state=\"active\",this.options.timeOut=this.originalTimeout,this.timeout=setTimeout(()=>this.remove(),this.originalTimeout),this.hideTime=(new Date).getTime()+(this.originalTimeout||0),this.width=-1,this.options.progressBar&&(this.intervalId=setInterval(()=>this.updateProgress(),10))}remove(){\"removed\"!==this.state&&(clearTimeout(this.timeout),this.state=\"removed\",this.timeout=setTimeout(()=>this.toastrService.remove(this.toastPackage.toastId)))}tapToast(){\"removed\"!==this.state&&(this.toastPackage.triggerTap(),this.options.tapToDismiss&&this.remove())}stickAround(){\"removed\"!==this.state&&(clearTimeout(this.timeout),this.options.timeOut=0,this.hideTime=0,clearInterval(this.intervalId),this.width=0)}delayedHideToast(){!0!==this.options.disableTimeOut&&\"extendedTimeOut\"!==this.options.disableTimeOut&&0!==this.options.extendedTimeOut&&\"removed\"!==this.state&&(this.timeout=setTimeout(()=>this.remove(),this.options.extendedTimeOut),this.options.timeOut=this.options.extendedTimeOut,this.hideTime=(new Date).getTime()+(this.options.timeOut||0),this.width=-1,this.options.progressBar&&(this.intervalId=setInterval(()=>this.updateProgress(),10)))}}return ToastNoAnimation.ɵfac=function(t){return new(t||ToastNoAnimation)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastrService),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastPackage),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ApplicationRef))},ToastNoAnimation.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineComponent\"]({type:ToastNoAnimation,selectors:[[\"\",\"toast-component\",\"\"]],hostVars:4,hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\",function(){return ctx.tapToast()})(\"mouseenter\",function(){return ctx.stickAround()})(\"mouseleave\",function(){return ctx.delayedHideToast()}),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx.toastClasses),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"display\",ctx.displayStyle))},attrs:_c0,decls:5,vars:5,consts:[[\"class\",\"toast-close-button\",\"aria-label\",\"Close\",3,\"click\",4,\"ngIf\"],[3,\"class\",4,\"ngIf\"],[\"role\",\"alert\",\"aria-live\",\"polite\",3,\"class\",\"innerHTML\",4,\"ngIf\"],[\"role\",\"alert\",\"aria-live\",\"polite\",3,\"class\",4,\"ngIf\"],[4,\"ngIf\"],[\"aria-label\",\"Close\",1,\"toast-close-button\",3,\"click\"],[\"aria-hidden\",\"true\"],[\"role\",\"alert\",\"aria-live\",\"polite\",3,\"innerHTML\"],[\"role\",\"alert\",\"aria-live\",\"polite\"],[1,\"toast-progress\"]],template:function(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](0,ToastNoAnimation_button_0_Template,3,0,\"button\",0),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](1,ToastNoAnimation_div_1_Template,3,5,\"div\",1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2,ToastNoAnimation_div_2_Template,1,3,\"div\",2),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](3,ToastNoAnimation_div_3_Template,2,4,\"div\",3),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](4,ToastNoAnimation_div_4_Template,2,2,\"div\",4)),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.options.closeButton),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.title),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.message&&ctx.options.enableHtml),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.message&&!ctx.options.enableHtml),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1),_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\",ctx.options.progressBar))},directives:[_angular_common__WEBPACK_IMPORTED_MODULE_4__.n],encapsulation:2}),ToastNoAnimation})();Object.assign(Object.assign({},DefaultNoComponentGlobalConfig),{toastComponent:ToastNoAnimation})}}]);","name":"4-es2015.75a01cab7c019bb6e1b9.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[4],{\n\n/***/ \"5eHb\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export BasePortalHost */\n/* unused harmony export ComponentPortal */\n/* unused harmony export DefaultGlobalConfig */\n/* unused harmony export DefaultNoAnimationsGlobalConfig */\n/* unused harmony export DefaultNoComponentGlobalConfig */\n/* unused harmony export Overlay */\n/* unused harmony export OverlayContainer */\n/* unused harmony export OverlayRef */\n/* unused harmony export TOAST_CONFIG */\n/* unused harmony export Toast */\n/* unused harmony export ToastContainerDirective */\n/* unused harmony export ToastContainerModule */\n/* unused harmony export ToastInjector */\n/* unused harmony export ToastNoAnimation */\n/* unused harmony export ToastNoAnimationModule */\n/* unused harmony export ToastPackage */\n/* unused harmony export ToastRef */\n/* unused harmony export ToastrComponentlessModule */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ToastrModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ToastrService; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"R0Ic\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"XNiG\");\n/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"jhN1\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"ofXK\");\n\n\n\n\n\n\n\n\nconst _c0 = [\"toast-component\", \"\"];\nfunction Toast_button_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵgetCurrentView\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"button\", 5);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\", function Toast_button_0_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵrestoreView\"](_r6); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](); return ctx_r5.remove(); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](1, \"span\", 6);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](2, \"\\u00D7\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n}\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerStart\"](0);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n    }\n}\nfunction Toast_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r1.options.titleClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\", ctx_r1.title);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \", ctx_r1.title, \" \");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx_r1.duplicatesCount);\n    }\n}\nfunction Toast_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](0, \"div\", 7);\n    }\n    if (rf & 2) {\n        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r2.options.messageClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"innerHTML\", ctx_r2.message, _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsanitizeHtml\"]);\n    }\n}\nfunction Toast_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\", 8);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r3.options.messageClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\", ctx_r3.message);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \", ctx_r3.message, \" \");\n    }\n}\nfunction Toast_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](1, \"div\", 9);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"width\", ctx_r4.width + \"%\");\n    }\n}\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵgetCurrentView\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"button\", 5);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵrestoreView\"](_r6); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](); return ctx_r5.remove(); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](1, \"span\", 6);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](2, \"\\u00D7\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n}\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerStart\"](0);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementContainerEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n    }\n}\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r1.options.titleClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\", ctx_r1.title);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \", ctx_r1.title, \" \");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx_r1.duplicatesCount);\n    }\n}\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](0, \"div\", 7);\n    }\n    if (rf & 2) {\n        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r2.options.messageClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"innerHTML\", ctx_r2.message, _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsanitizeHtml\"]);\n    }\n}\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\", 8);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtext\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx_r3.options.messageClass);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵattribute\"](\"aria-label\", ctx_r3.message);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtextInterpolate1\"](\" \", ctx_r3.message, \" \");\n    }\n}\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementStart\"](0, \"div\");\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelement\"](1, \"div\", 9);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵelementEnd\"]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵnextContext\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"width\", ctx_r4.width + \"%\");\n    }\n}\nlet ToastContainerDirective = /*@__PURE__*/ (() => {\n    class ToastContainerDirective {\n        constructor(el) {\n            this.el = el;\n        }\n        getContainerElement() {\n            return this.el.nativeElement;\n        }\n    }\n    ToastContainerDirective.ɵfac = function ToastContainerDirective_Factory(t) { return new (t || ToastContainerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"])); };\n    ToastContainerDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineDirective\"]({ type: ToastContainerDirective, selectors: [[\"\", \"toastContainer\", \"\"]], exportAs: [\"toastContainer\"] });\n    return ToastContainerDirective;\n})();\nlet ToastContainerModule = /*@__PURE__*/ (() => {\n    class ToastContainerModule {\n    }\n    ToastContainerModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({ type: ToastContainerModule });\n    ToastContainerModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({ factory: function ToastContainerModule_Factory(t) { return new (t || ToastContainerModule)(); } });\n    return ToastContainerModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsetNgModuleScope\"](ToastContainerModule, { declarations: [ToastContainerDirective], exports: [ToastContainerDirective] }); })();\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this._onTap = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        this._onAction = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n};\nconst TOAST_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"InjectionToken\"]('ToastConfig');\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\nlet OverlayContainer = /*@__PURE__*/ (() => {\n    class OverlayContainer {\n        constructor(_document) {\n            this._document = _document;\n        }\n        ngOnDestroy() {\n            if (this._containerElement && this._containerElement.parentNode) {\n                this._containerElement.parentNode.removeChild(this._containerElement);\n            }\n        }\n        /**\n         * This method returns the overlay container element. It will lazily\n         * create the element the first time  it is called to facilitate using\n         * the container in non-browser environments.\n         * @returns the container element\n         */\n        getContainerElement() {\n            if (!this._containerElement) {\n                this._createContainer();\n            }\n            return this._containerElement;\n        }\n        /**\n         * Create the overlay container element, which is simply a div\n         * with the 'cdk-overlay-container' class on the document body.\n         */\n        _createContainer() {\n            const container = this._document.createElement('div');\n            container.classList.add('overlay-container');\n            this._document.body.appendChild(container);\n            this._containerElement = container;\n        }\n    }\n    OverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* DOCUMENT */ \"d\"])); };\n    OverlayContainer.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({ factory: function OverlayContainer_Factory() { return new OverlayContainer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* DOCUMENT */ \"d\"])); }, token: OverlayContainer, providedIn: \"root\" });\n    return OverlayContainer;\n})();\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\nlet Overlay = /*@__PURE__*/ (() => {\n    class Overlay {\n        constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n            this._overlayContainer = _overlayContainer;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._appRef = _appRef;\n            this._document = _document;\n            // Namespace panes by overlay container\n            this._paneElements = new Map();\n        }\n        /**\n         * Creates an overlay.\n         * @returns A reference to the created overlay.\n         */\n        create(positionClass, overlayContainer) {\n            // get existing pane if possible\n            return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n        }\n        getPaneElement(positionClass = '', overlayContainer) {\n            if (!this._paneElements.get(overlayContainer)) {\n                this._paneElements.set(overlayContainer, {});\n            }\n            if (!this._paneElements.get(overlayContainer)[positionClass]) {\n                this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n            }\n            return this._paneElements.get(overlayContainer)[positionClass];\n        }\n        /**\n         * Creates the DOM element for an overlay and appends it to the overlay container.\n         * @returns Newly-created pane element\n         */\n        _createPaneElement(positionClass, overlayContainer) {\n            const pane = this._document.createElement('div');\n            pane.id = 'toast-container';\n            pane.classList.add(positionClass);\n            pane.classList.add('toast-container');\n            if (!overlayContainer) {\n                this._overlayContainer.getContainerElement().appendChild(pane);\n            }\n            else {\n                overlayContainer.getContainerElement().appendChild(pane);\n            }\n            return pane;\n        }\n        /**\n         * Create a DomPortalHost into which the overlay content can be loaded.\n         * @param pane The DOM element to turn into a portal host.\n         * @returns A portal host for the given DOM element.\n         */\n        _createPortalHost(pane) {\n            return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n        }\n        /**\n         * Creates an OverlayRef for an overlay in the given DOM element.\n         * @param pane DOM element for the overlay\n         */\n        _createOverlayRef(pane) {\n            return new OverlayRef(this._createPortalHost(pane));\n        }\n    }\n    Overlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](OverlayContainer), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ComponentFactoryResolver\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ApplicationRef\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* DOCUMENT */ \"d\"])); };\n    Overlay.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({ factory: function Overlay_Factory() { return new Overlay(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(OverlayContainer), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ComponentFactoryResolver\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ApplicationRef\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* DOCUMENT */ \"d\"])); }, token: Overlay, providedIn: \"root\" });\n    return Overlay;\n})();\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Count of duplicates of this toast */\n        this.duplicatesCount = 0;\n        /** Subject for notifying the user that the toast has finished closing. */\n        this._afterClosed = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        /** triggered when toast is activated */\n        this._activate = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        /** notifies the toast that it should close before the timeout */\n        this._manualClose = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        /** notifies the toast that it should reset the timeouts */\n        this._resetTimeout = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        /** notifies the toast that it should count a duplicate toast */\n        this._countDuplicate = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n/** Custom injector type specifically for instantiating components with a toast. */\nclass ToastInjector {\n    constructor(_toastPackage, _parentInjector) {\n        this._toastPackage = _toastPackage;\n        this._parentInjector = _parentInjector;\n    }\n    get(token, notFoundValue, flags) {\n        if (token === ToastPackage) {\n            return this._toastPackage;\n        }\n        return this._parentInjector.get(token, notFoundValue, flags);\n    }\n}\nlet ToastrService = /*@__PURE__*/ (() => {\n    class ToastrService {\n        constructor(token, overlay, _injector, sanitizer, ngZone) {\n            this.overlay = overlay;\n            this._injector = _injector;\n            this.sanitizer = sanitizer;\n            this.ngZone = ngZone;\n            this.currentlyActive = 0;\n            this.toasts = [];\n            this.index = 0;\n            this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n            if (token.config.iconClasses) {\n                this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n            }\n        }\n        /** show toast */\n        show(message, title, override = {}, type = '') {\n            return this._preBuildNotification(type, message, title, this.applyConfig(override));\n        }\n        /** show successful toast */\n        success(message, title, override = {}) {\n            const type = this.toastrConfig.iconClasses.success || '';\n            return this._preBuildNotification(type, message, title, this.applyConfig(override));\n        }\n        /** show error toast */\n        error(message, title, override = {}) {\n            const type = this.toastrConfig.iconClasses.error || '';\n            return this._preBuildNotification(type, message, title, this.applyConfig(override));\n        }\n        /** show info toast */\n        info(message, title, override = {}) {\n            const type = this.toastrConfig.iconClasses.info || '';\n            return this._preBuildNotification(type, message, title, this.applyConfig(override));\n        }\n        /** show warning toast */\n        warning(message, title, override = {}) {\n            const type = this.toastrConfig.iconClasses.warning || '';\n            return this._preBuildNotification(type, message, title, this.applyConfig(override));\n        }\n        /**\n         * Remove all or a single toast by id\n         */\n        clear(toastId) {\n            // Call every toastRef manualClose function\n            for (const toast of this.toasts) {\n                if (toastId !== undefined) {\n                    if (toast.toastId === toastId) {\n                        toast.toastRef.manualClose();\n                        return;\n                    }\n                }\n                else {\n                    toast.toastRef.manualClose();\n                }\n            }\n        }\n        /**\n         * Remove and destroy a single toast by id\n         */\n        remove(toastId) {\n            const found = this._findToast(toastId);\n            if (!found) {\n                return false;\n            }\n            found.activeToast.toastRef.close();\n            this.toasts.splice(found.index, 1);\n            this.currentlyActive = this.currentlyActive - 1;\n            if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n                return false;\n            }\n            if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n                const p = this.toasts[this.currentlyActive].toastRef;\n                if (!p.isInactive()) {\n                    this.currentlyActive = this.currentlyActive + 1;\n                    p.activate();\n                }\n            }\n            return true;\n        }\n        /**\n         * Determines if toast message is already shown\n         */\n        findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n            const { includeTitleDuplicates } = this.toastrConfig;\n            for (const toast of this.toasts) {\n                const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n                if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                    toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                    return toast;\n                }\n            }\n            return null;\n        }\n        /** create a clone of global config and apply individual settings */\n        applyConfig(override = {}) {\n            return Object.assign(Object.assign({}, this.toastrConfig), override);\n        }\n        /**\n         * Find toast object by id\n         */\n        _findToast(toastId) {\n            for (let i = 0; i < this.toasts.length; i++) {\n                if (this.toasts[i].toastId === toastId) {\n                    return { index: i, activeToast: this.toasts[i] };\n                }\n            }\n            return null;\n        }\n        /**\n         * Determines the need to run inside angular's zone then builds the toast\n         */\n        _preBuildNotification(toastType, message, title, config) {\n            if (config.onActivateTick) {\n                return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n            }\n            return this._buildNotification(toastType, message, title, config);\n        }\n        /**\n         * Creates and attaches toast data to component\n         * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n         */\n        _buildNotification(toastType, message, title, config) {\n            if (!config.toastComponent) {\n                throw new Error('toastComponent required');\n            }\n            // max opened and auto dismiss = true\n            // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n            // a timeout at all\n            const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n            if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n                this.toastrConfig.preventDuplicates &&\n                duplicate !== null) {\n                return duplicate;\n            }\n            this.previousToastMessage = message;\n            let keepInactive = false;\n            if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n                keepInactive = true;\n                if (this.toastrConfig.autoDismiss) {\n                    this.clear(this.toasts[0].toastId);\n                }\n            }\n            const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n            this.index = this.index + 1;\n            let sanitizedMessage = message;\n            if (message && config.enableHtml) {\n                sanitizedMessage = this.sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"SecurityContext\"].HTML, message);\n            }\n            const toastRef = new ToastRef(overlayRef);\n            const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n            const toastInjector = new ToastInjector(toastPackage, this._injector);\n            const component = new ComponentPortal(config.toastComponent, toastInjector);\n            const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n            toastRef.componentInstance = portal.instance;\n            const ins = {\n                toastId: this.index,\n                title: title || '',\n                message: message || '',\n                toastRef,\n                onShown: toastRef.afterActivate(),\n                onHidden: toastRef.afterClosed(),\n                onTap: toastPackage.onTap(),\n                onAction: toastPackage.onAction(),\n                portal,\n            };\n            if (!keepInactive) {\n                this.currentlyActive = this.currentlyActive + 1;\n                setTimeout(() => {\n                    ins.toastRef.activate();\n                });\n            }\n            this.toasts.push(ins);\n            return ins;\n        }\n    }\n    ToastrService.ɵfac = function ToastrService_Factory(t) { return new (t || ToastrService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](TOAST_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](Overlay), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Injector\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__[/* DomSanitizer */ \"b\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"])); };\n    ToastrService.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjectable\"])({ factory: function ToastrService_Factory() { return new ToastrService(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(TOAST_CONFIG), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(Overlay), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"INJECTOR\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__[/* DomSanitizer */ \"b\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"])); }, token: ToastrService, providedIn: \"root\" });\n    return ToastrService;\n})();\nlet Toast = /*@__PURE__*/ (() => {\n    class Toast {\n        constructor(toastrService, toastPackage, ngZone) {\n            this.toastrService = toastrService;\n            this.toastPackage = toastPackage;\n            this.ngZone = ngZone;\n            /** width of progress bar */\n            this.width = -1;\n            /** a combination of toast type and options.toastClass */\n            this.toastClasses = '';\n            /** controls animation */\n            this.state = {\n                value: 'inactive',\n                params: {\n                    easeTime: this.toastPackage.config.easeTime,\n                    easing: 'ease-in'\n                }\n            };\n            this.message = toastPackage.message;\n            this.title = toastPackage.title;\n            this.options = toastPackage.config;\n            this.originalTimeout = toastPackage.config.timeOut;\n            this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n            this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n                this.activateToast();\n            });\n            this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n                this.remove();\n            });\n            this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n                this.resetTimeout();\n            });\n            this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n                this.duplicatesCount = count;\n            });\n        }\n        /** hides component when waiting to be displayed */\n        get displayStyle() {\n            if (this.state.value === 'inactive') {\n                return 'none';\n            }\n            return;\n        }\n        ngOnDestroy() {\n            this.sub.unsubscribe();\n            this.sub1.unsubscribe();\n            this.sub2.unsubscribe();\n            this.sub3.unsubscribe();\n            clearInterval(this.intervalId);\n            clearTimeout(this.timeout);\n        }\n        /**\n         * activates toast and sets timeout\n         */\n        activateToast() {\n            this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n            if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n                this.outsideTimeout(() => this.remove(), this.options.timeOut);\n                this.hideTime = new Date().getTime() + this.options.timeOut;\n                if (this.options.progressBar) {\n                    this.outsideInterval(() => this.updateProgress(), 10);\n                }\n            }\n        }\n        /**\n         * updates progress bar width\n         */\n        updateProgress() {\n            if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n                return;\n            }\n            const now = new Date().getTime();\n            const remaining = this.hideTime - now;\n            this.width = (remaining / this.options.timeOut) * 100;\n            if (this.options.progressAnimation === 'increasing') {\n                this.width = 100 - this.width;\n            }\n            if (this.width <= 0) {\n                this.width = 0;\n            }\n            if (this.width >= 100) {\n                this.width = 100;\n            }\n        }\n        resetTimeout() {\n            clearTimeout(this.timeout);\n            clearInterval(this.intervalId);\n            this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n            this.outsideTimeout(() => this.remove(), this.originalTimeout);\n            this.options.timeOut = this.originalTimeout;\n            this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n            this.width = -1;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n        /**\n         * tells toastrService to remove this toast after animation time\n         */\n        remove() {\n            if (this.state.value === 'removed') {\n                return;\n            }\n            clearTimeout(this.timeout);\n            this.state = Object.assign(Object.assign({}, this.state), { value: 'removed' });\n            this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n        }\n        tapToast() {\n            if (this.state.value === 'removed') {\n                return;\n            }\n            this.toastPackage.triggerTap();\n            if (this.options.tapToDismiss) {\n                this.remove();\n            }\n        }\n        stickAround() {\n            if (this.state.value === 'removed') {\n                return;\n            }\n            clearTimeout(this.timeout);\n            this.options.timeOut = 0;\n            this.hideTime = 0;\n            // disable progressBar\n            clearInterval(this.intervalId);\n            this.width = 0;\n        }\n        delayedHideToast() {\n            if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n                this.options.extendedTimeOut === 0 ||\n                this.state.value === 'removed') {\n                return;\n            }\n            this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n            this.options.timeOut = this.options.extendedTimeOut;\n            this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n            this.width = -1;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n        outsideTimeout(func, timeout) {\n            if (this.ngZone) {\n                this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n            }\n            else {\n                this.timeout = setTimeout(() => func(), timeout);\n            }\n        }\n        outsideInterval(func, timeout) {\n            if (this.ngZone) {\n                this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n            }\n            else {\n                this.intervalId = setInterval(() => func(), timeout);\n            }\n        }\n        runInsideAngular(func) {\n            if (this.ngZone) {\n                this.ngZone.run(() => func());\n            }\n            else {\n                func();\n            }\n        }\n    }\n    Toast.ɵfac = function Toast_Factory(t) { return new (t || Toast)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastPackage), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"])); };\n    Toast.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineComponent\"]({ type: Toast, selectors: [[\"\", \"toast-component\", \"\"]], hostVars: 5, hostBindings: function Toast_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\", function Toast_click_HostBindingHandler() { return ctx.tapToast(); })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() { return ctx.stickAround(); })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() { return ctx.delayedHideToast(); });\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsyntheticHostProperty\"](\"@flyInOut\", ctx.state);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx.toastClasses);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"display\", ctx.displayStyle);\n            }\n        }, attrs: _c0, decls: 5, vars: 5, consts: [[\"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]], template: function Toast_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](0, Toast_button_0_Template, 3, 0, \"button\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](1, Toast_div_1_Template, 3, 5, \"div\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2, Toast_div_2_Template, 1, 3, \"div\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](3, Toast_div_3_Template, 2, 4, \"div\", 3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](4, Toast_div_4_Template, 2, 2, \"div\", 4);\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.options.closeButton);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.title);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.message && ctx.options.enableHtml);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.message && !ctx.options.enableHtml);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.options.progressBar);\n            }\n        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* NgIf */ \"n\"]], encapsulation: 2, data: { animation: [\n                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* trigger */ \"j\"])('flyInOut', [\n                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* state */ \"g\"])('inactive', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* style */ \"h\"])({ opacity: 0 })),\n                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* state */ \"g\"])('active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* style */ \"h\"])({ opacity: 1 })),\n                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* state */ \"g\"])('removed', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* style */ \"h\"])({ opacity: 0 })),\n                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* transition */ \"i\"])('inactive => active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* animate */ \"e\"])('{{ easeTime }}ms {{ easing }}')),\n                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* transition */ \"i\"])('active => removed', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__[/* animate */ \"e\"])('{{ easeTime }}ms {{ easing }}'))\n                ])\n            ] } });\n    return Toast;\n})();\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: Toast });\nlet ToastrModule = /*@__PURE__*/ (() => {\n    class ToastrModule {\n        static forRoot(config = {}) {\n            return {\n                ngModule: ToastrModule,\n                providers: [\n                    {\n                        provide: TOAST_CONFIG,\n                        useValue: {\n                            default: DefaultGlobalConfig,\n                            config,\n                        },\n                    },\n                ],\n            };\n        }\n    }\n    ToastrModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({ type: ToastrModule });\n    ToastrModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({ factory: function ToastrModule_Factory(t) { return new (t || ToastrModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]] });\n    return ToastrModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsetNgModuleScope\"](ToastrModule, { declarations: function () { return [Toast]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]; }, exports: function () { return [Toast]; } }); })();\nlet ToastrComponentlessModule = /*@__PURE__*/ (() => {\n    class ToastrComponentlessModule {\n        static forRoot(config = {}) {\n            return {\n                ngModule: ToastrModule,\n                providers: [\n                    {\n                        provide: TOAST_CONFIG,\n                        useValue: {\n                            default: DefaultNoComponentGlobalConfig,\n                            config,\n                        },\n                    },\n                ],\n            };\n        }\n    }\n    ToastrComponentlessModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({ type: ToastrComponentlessModule });\n    ToastrComponentlessModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({ factory: function ToastrComponentlessModule_Factory(t) { return new (t || ToastrComponentlessModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]] });\n    return ToastrComponentlessModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsetNgModuleScope\"](ToastrComponentlessModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]; } }); })();\nlet ToastNoAnimation = /*@__PURE__*/ (() => {\n    class ToastNoAnimation {\n        constructor(toastrService, toastPackage, appRef) {\n            this.toastrService = toastrService;\n            this.toastPackage = toastPackage;\n            this.appRef = appRef;\n            /** width of progress bar */\n            this.width = -1;\n            /** a combination of toast type and options.toastClass */\n            this.toastClasses = '';\n            /** controls animation */\n            this.state = 'inactive';\n            this.message = toastPackage.message;\n            this.title = toastPackage.title;\n            this.options = toastPackage.config;\n            this.originalTimeout = toastPackage.config.timeOut;\n            this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n            this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n                this.activateToast();\n            });\n            this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n                this.remove();\n            });\n            this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n                this.resetTimeout();\n            });\n            this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n                this.duplicatesCount = count;\n            });\n        }\n        /** hides component when waiting to be displayed */\n        get displayStyle() {\n            if (this.state === 'inactive') {\n                return 'none';\n            }\n        }\n        ngOnDestroy() {\n            this.sub.unsubscribe();\n            this.sub1.unsubscribe();\n            this.sub2.unsubscribe();\n            this.sub3.unsubscribe();\n            clearInterval(this.intervalId);\n            clearTimeout(this.timeout);\n        }\n        /**\n         * activates toast and sets timeout\n         */\n        activateToast() {\n            this.state = 'active';\n            if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n                this.timeout = setTimeout(() => {\n                    this.remove();\n                }, this.options.timeOut);\n                this.hideTime = new Date().getTime() + this.options.timeOut;\n                if (this.options.progressBar) {\n                    this.intervalId = setInterval(() => this.updateProgress(), 10);\n                }\n            }\n            if (this.options.onActivateTick) {\n                this.appRef.tick();\n            }\n        }\n        /**\n         * updates progress bar width\n         */\n        updateProgress() {\n            if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n                return;\n            }\n            const now = new Date().getTime();\n            const remaining = this.hideTime - now;\n            this.width = (remaining / this.options.timeOut) * 100;\n            if (this.options.progressAnimation === 'increasing') {\n                this.width = 100 - this.width;\n            }\n            if (this.width <= 0) {\n                this.width = 0;\n            }\n            if (this.width >= 100) {\n                this.width = 100;\n            }\n        }\n        resetTimeout() {\n            clearTimeout(this.timeout);\n            clearInterval(this.intervalId);\n            this.state = 'active';\n            this.options.timeOut = this.originalTimeout;\n            this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n            this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n            this.width = -1;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        /**\n         * tells toastrService to remove this toast after animation time\n         */\n        remove() {\n            if (this.state === 'removed') {\n                return;\n            }\n            clearTimeout(this.timeout);\n            this.state = 'removed';\n            this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n        }\n        tapToast() {\n            if (this.state === 'removed') {\n                return;\n            }\n            this.toastPackage.triggerTap();\n            if (this.options.tapToDismiss) {\n                this.remove();\n            }\n        }\n        stickAround() {\n            if (this.state === 'removed') {\n                return;\n            }\n            clearTimeout(this.timeout);\n            this.options.timeOut = 0;\n            this.hideTime = 0;\n            // disable progressBar\n            clearInterval(this.intervalId);\n            this.width = 0;\n        }\n        delayedHideToast() {\n            if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n                this.options.extendedTimeOut === 0 ||\n                this.state === 'removed') {\n                return;\n            }\n            this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n            this.options.timeOut = this.options.extendedTimeOut;\n            this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n            this.width = -1;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    ToastNoAnimation.ɵfac = function ToastNoAnimation_Factory(t) { return new (t || ToastNoAnimation)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](ToastPackage), _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ApplicationRef\"])); };\n    ToastNoAnimation.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineComponent\"]({ type: ToastNoAnimation, selectors: [[\"\", \"toast-component\", \"\"]], hostVars: 4, hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵlistener\"](\"click\", function ToastNoAnimation_click_HostBindingHandler() { return ctx.tapToast(); })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() { return ctx.stickAround(); })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() { return ctx.delayedHideToast(); });\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵclassMap\"](ctx.toastClasses);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵstyleProp\"](\"display\", ctx.displayStyle);\n            }\n        }, attrs: _c0, decls: 5, vars: 5, consts: [[\"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alert\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]], template: function ToastNoAnimation_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵtemplate\"](4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.options.closeButton);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.title);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.message && ctx.options.enableHtml);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.message && !ctx.options.enableHtml);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵadvance\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵproperty\"](\"ngIf\", ctx.options.progressBar);\n            }\n        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* NgIf */ \"n\"]], encapsulation: 2 });\n    return ToastNoAnimation;\n})();\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: ToastNoAnimation });\nlet ToastNoAnimationModule = /*@__PURE__*/ (() => {\n    class ToastNoAnimationModule {\n        static forRoot(config = {}) {\n            return {\n                ngModule: ToastNoAnimationModule,\n                providers: [\n                    {\n                        provide: TOAST_CONFIG,\n                        useValue: {\n                            default: DefaultNoAnimationsGlobalConfig,\n                            config,\n                        },\n                    },\n                ],\n            };\n        }\n    }\n    ToastNoAnimationModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({ type: ToastNoAnimationModule });\n    ToastNoAnimationModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({ factory: function ToastNoAnimationModule_Factory(t) { return new (t || ToastNoAnimationModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]] });\n    return ToastNoAnimationModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsetNgModuleScope\"](ToastNoAnimationModule, { declarations: function () { return [ToastNoAnimation]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]; }, exports: function () { return [ToastNoAnimation]; } }); })();\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=ngx-toastr.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}